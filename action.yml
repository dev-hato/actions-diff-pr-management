name: 'diff-pr-management'
author: 'dev-hato Development Team'
description: 'PRのブランチに対して、フォーマッタを実行した結果をPRにするGitHub Actionsです。'
inputs:
  github-token: # id of input
    description: 'GitHubのトークン。'
    required: true
  repo-name:
    description: 'リポジトリ名。 `pull_request` 以外のトリガーも設定している場合はリポジトリ名を決め打ちで入力。'
    required: true
  branch-name-prefix:
    description: 'branch名の接頭語。'
    required: true
    default: fix
  pr-title-prefix:
    description: 'PRのタイトルの接頭語。'
    required: true
    default: fix
  pr-description-prefix:
    description: '本文の接頭語。'
    required: true
    default: ""
runs:
  using: "composite"
  steps:
    - shell: bash
      if: github.event_name != 'pull_request' || github.event.action != 'closed'
      name: git add
      run: git add -A
    # 差分があったときは差分を出力する
    - name: Show diff
      id: diff
      shell: bash
      if: github.event_name != 'pull_request' || github.event.action != 'closed'
      run: |
        result=$(git diff --cached)
        echo "::set-output name=result::$result"
    # 差分があったときは、コミットを作りpushする
    - name: Push
      env:
        HEAD_REF: ${{github.event.pull_request.head.ref}}
      if: inputs.repo-name == github.repository
        && steps.diff.outputs.result != ''
        && ((github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'schedule')
      run: |
        git config user.name "github-actions[bot]"
        EMAIL="41898282+github-actions[bot]@users.noreply.github.com"
        git config user.email "${EMAIL}"
        git commit -m "${{inputs.pr-title-prefix}}"
        REPO_URL="https://"
        REPO_URL+="${{github.actor}}:${{inputs.github-token}}@github.com/"
        REPO_URL+="${{github.repository}}.git"
        GITHUB_HEAD="HEAD:refs/heads/${{inputs.branch-name-prefix}}"

        if [ "${HEAD_REF}" != "" ]; then
          GITHUB_HEAD+="-${HEAD_REF}"
        fi

        git push -f "${REPO_URL}" "${GITHUB_HEAD}"
      shell: bash
    - name: Set org name
      uses: actions/github-script@v6.1.0
      if: inputs.repo-name == github.repository && (github.event_name == 'pull_request' || github.event_name == 'schedule')
      id: set_org_name
      with:
        github-token: ${{inputs.github-token}}
        result-encoding: string
        script: return process.env.GITHUB_REPOSITORY.split('/')[0]
    - name: Get PullRequests
      uses: actions/github-script@v6.1.0
      env:
        HEAD_REF: ${{github.event.pull_request.head.ref}}
      if: inputs.repo-name == github.repository
        && steps.diff.outputs.result != ''
        && ((github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'schedule')
      id: get_pull_requests
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const HEAD_REF = process.env["HEAD_REF"]
          let head = "${{steps.set_org_name.outputs.result}}:${{inputs.branch-name-prefix}}"

          if (HEAD_REF != "") {
            head += "-" + HEAD_REF
          }

          const pulls_list_params = {
            owner: context.repo.owner,
            repo: context.repo.repo,
            head,
            base: HEAD_REF,
            state: "open"
          }
          console.log("call pulls.list:", pulls_list_params)
          const pulls = await github.paginate(github.rest.pulls.list,
                                              pulls_list_params)
          return pulls.length
    # pushしたブランチでPRを作る
    - name: Create PullRequest
      uses: actions/github-script@v6.1.0
      env:
        HEAD_REF: ${{github.event.pull_request.head.ref}}
      if: inputs.repo-name == github.repository
        && steps.diff.outputs.result != ''
        && steps.get_pull_requests.outputs.result == 0
        && ((github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'schedule')
      id: create_pull_request
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const HEAD_REF = process.env["HEAD_REF"]
          let title = "${{inputs.pr-title-prefix}}"
          let body = "${{inputs.pr-description-prefix}}"

          if ("${{github.event.pull_request.number}}" != "") {
            body += "本PRをマージすると差分が次のPRに反映されます。\n"
            body += "* #${{github.event.pull_request.number}}"
            title += " #${{github.event.pull_request.number}}"
          }

          let head = "${{steps.set_org_name.outputs.result}}:${{inputs.branch-name-prefix}}"

          if (HEAD_REF != "") {
            head += "-" + HEAD_REF
          }

          const pulls_create_params = {
            owner: context.repo.owner,
            repo: context.repo.repo,
            head,
            base: HEAD_REF,
            title,
            body
          }
          console.log("call pulls.create:", pulls_create_params)
          const create_pull_res = await github.rest.pulls.create(
                                    pulls_create_params
                                  )
          return create_pull_res.data.number
    - name: Assign a user
      uses: actions/github-script@v6.1.0
      if: inputs.repo-name == github.repository
        && steps.diff.outputs.result != ''
        && steps.get_pull_requests.outputs.result == 0
        && github.event_name == 'pull_request'
        && github.event.action != 'closed'
        && github.event.pull_request.user.login != 'dependabot[bot]'
        && github.event.pull_request.user.login != 'renovate[bot]'
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const issues_add_assignees_params = {
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: ${{steps.create_pull_request.outputs.result}},
            assignees: ["${{github.event.pull_request.user.login}}"]
          }
          console.log("call issues.addAssignees:")
          console.log(issues_add_assignees_params)
          await github.rest.issues.addAssignees(issues_add_assignees_params)
    # 既にformat修正のPRがある状態で、手動でformatを修正した場合、format修正のPRを閉じる
    - name: Close PullRequest
      uses: actions/github-script@v6.1.0
      env:
        HEAD_REF: ${{github.event.pull_request.head.ref}}
      if: inputs.repo-name == github.repository
        && ((github.event_name == 'pull_request' && (github.event.action == 'closed' || steps.diff.outputs.result == ''))
            || (github.event_name == 'schedule' && steps.diff.outputs.result == ''))
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const HEAD_REF = process.env["HEAD_REF"]
          let head_name = "${{inputs.branch-name-prefix}}"

          if (HEAD_REF != "") {
            head_name += "-" + HEAD_REF
          }

          const common_params = {
            owner: context.repo.owner,
            repo: context.repo.repo
          }
          const pulls_list_params = {
            head: "${{steps.set_org_name.outputs.result}}:" + head_name,
            base: HEAD_REF,
            state: "open",
            ...common_params
          }
          console.log("call pulls.list:", pulls_list_params)
          const pulls = await github.paginate(github.rest.pulls.list,
                                              pulls_list_params)

          for (const pull of pulls) {
            const pulls_update_params = {
              pull_number: pull.number,
              state: "closed",
              ...common_params
            }
            console.log("call pulls.update:", pulls_update_params)
            await github.rest.pulls.update(pulls_update_params)
            const git_deleteRef_params = {
              ref: "heads/" + head_name,
              ...common_params
            }
            console.log("call git.deleteRef:", git_deleteRef_params)
            await github.rest.git.deleteRef(git_deleteRef_params)
          }
    - name: Exit
      if: (github.event_name != 'pull_request' || github.event.action != 'closed') && steps.diff.outputs.result != ''
      run: exit 1
      shell: bash
