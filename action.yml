name: 'diff-pr-management'
author: 'dev-hato Development Team'
description: 'PRのブランチに対して、フォーマッタを実行した結果をPRにするGitHub Actionsです。'
inputs:
  github-token: # id of input
    description: 'GitHubのトークン。'
    required: true
  branch-name-prefix:
    description: 'branch名の接頭語。'
    required: true
    default: fix
  pr-title-prefix:
    description: 'PRのタイトルの接頭語。'
    required: true
    default: fix
  pr-description-prefix:
    description: '本文の接頭語。'
    required: true
    default: ""
  exit-failure:
    description: '実行完了時にCIを失敗させるかどうか。'
    required: false
    default: "true"
  working-directory:
    description: '実行対象のディレクトリ'
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    # 差分があったときは差分を出力する
    - name: Show diff
      id: diff
      shell: bash
      if: github.event_name != 'pull_request' || github.event.action != 'closed'
      working-directory: ${{inputs.working-directory}}
      run: ${{ github.action_path }}/scripts/action/show_diff.sh
    - name: Set HEAD_REF
      shell: bash
      run: echo "HEAD_REF=${{github.event.pull_request.head.ref || github.ref_name}}" >>"${GITHUB_ENV}"
    # 差分があったときは、コミットを作りpushする
    - name: Push
      env:
        PR_TITLE_PREFIX: ${{inputs.pr-title-prefix}}
        AUTHOR: ${{github.actor}}
        TOKEN: ${{inputs.github-token}}
        REPOSITORY: ${{github.repository}}
        BRANCH_NAME_PREFIX: ${{inputs.branch-name-prefix}}
      if: steps.diff.outputs.result != '' && ((github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch')
      working-directory: ${{inputs.working-directory}}
      run: ${{ github.action_path }}/scripts/action/push.sh
      shell: bash
    - name: Set org name
      uses: actions/github-script@v7.0.1
      if: github.event_name == 'pull_request' || github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch'
      id: set_org_name
      with:
        github-token: ${{inputs.github-token}}
        result-encoding: string
        script: |
          const script = require('${{ github.action_path }}/scripts/action/set_org_name.js')
          return script()
    - name: Get PullRequests
      uses: actions/github-script@v7.0.1
      if: steps.diff.outputs.result != '' && ((github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch')
      id: get_pull_requests
      env:
        ORG_NAME: ${{steps.set_org_name.outputs.result}}
        BRANCH_NAME_PREFIX: ${{inputs.branch-name-prefix}}
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const script = require('${{ github.action_path }}/scripts/action/get_pull_requests.js')
          return await script({github, context})
    # pushしたブランチでPRを作る
    - name: Create PullRequest
      uses: actions/github-script@v7.0.1
      if: steps.diff.outputs.result != '' && steps.get_pull_requests.outputs.result == 0 && ((github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch')
      id: create_pull_request
      env:
        ORG_NAME: ${{steps.set_org_name.outputs.result}}
        PR_DESCRIPTION_PREFIX: ${{inputs.pr-description-prefix}}
        PR_NUMBER: ${{github.event.pull_request.number}}
        PR_TITLE_PREFIX: ${{inputs.pr-title-prefix}}
        BRANCH_NAME_PREFIX: ${{inputs.branch-name-prefix}}
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const script = require('${{ github.action_path }}/scripts/action/create_pull_request.js')
          return await script({github, context})
    - name: Assign a user
      uses: actions/github-script@v7.0.1
      if: steps.diff.outputs.result != '' && steps.get_pull_requests.outputs.result == 0 && github.event_name == 'pull_request' && github.event.action != 'closed' && github.event.pull_request.user.login != 'dependabot[bot]' && github.event.pull_request.user.login != 'renovate[bot]'
      env:
        PR_NUMBER: ${{steps.create_pull_request.outputs.result}}
        ASSIGN_USER: ${{github.event.pull_request.user.login}}
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const script = require('${{ github.action_path }}/scripts/action/assign_a_user.js')
          await script({github, context})
    # 既にformat修正のPRがある状態で、手動でformatを修正した場合、format修正のPRを閉じる
    - name: Close PullRequest
      uses: actions/github-script@v7.0.1
      if: (github.event_name == 'pull_request' && (github.event.action == 'closed' || steps.diff.outputs.result == '')) || ((github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch') && steps.diff.outputs.result == '')
      env:
        ORG_NAME: ${{steps.set_org_name.outputs.result}}
        BRANCH_NAME_PREFIX: ${{inputs.branch-name-prefix}}
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const script = require('${{ github.action_path }}/scripts/action/close_pull_request.js')
          await script({github, context})
    - name: Exit
      if: (github.event_name != 'pull_request' || github.event.action != 'closed') && steps.diff.outputs.result != '' && inputs.exit-failure == 'true'
      run: exit 1
      shell: bash
