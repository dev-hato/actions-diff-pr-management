name: "diff-pr-management"
author: "dev-hato Development Team"
description: "PRのブランチに対して、フォーマッタを実行した結果をPRにするGitHub Actionsです。"
inputs:
  github-token: # id of input
    description: "GitHubのトークン。"
    required: true
  branch-name-prefix:
    description: "branch名の接頭語。"
    required: false
    default: fix
  pr-title-prefix:
    description: "PRのタイトルの接頭語。"
    required: false
    default: fix
  pr-description-prefix:
    description: "本文の接頭語。"
    required: false
    default: ""
  exit-failure:
    description: "実行完了時にCIを失敗させるかどうか。"
    required: false
    default: "true"
  working-directory:
    description: "実行対象のディレクトリ"
    required: false
    default: ""
  no-verify:
    description: "`git commit`, `git push` 時のフックを無効化する"
    required: false
    default: "false"
runs:
  using: "composite"
  steps:
    # 差分があったときは差分を出力する
    - name: Show diff
      id: diff
      shell: bash
      if: github.event_name != 'pull_request' || github.event.action != 'closed'
      working-directory: ${{inputs.working-directory}}
      run: ${{ github.action_path }}/scripts/action/show_diff.sh
    - name: Set HEAD_REF
      shell: bash
      run: echo "HEAD_REF=${{github.event.pull_request.head.ref || github.ref_name}}" >>"${GITHUB_ENV}"
    - name: Set env
      id: set-env
      shell: bash
      run: |
        echo "PR_DESCRIPTION_PREFIX=${{inputs.pr-description-prefix}}" >> "$GITHUB_ENV"
        echo "PR_NUMBER=${{github.event.pull_request.number}}" >> "$GITHUB_ENV"
        echo "PR_TITLE_PREFIX=${{inputs.pr-title-prefix}}" >> "$GITHUB_ENV"
        echo "BRANCH_NAME_PREFIX=${{inputs.branch-name-prefix}}" >> "$GITHUB_ENV"
    # 差分があったときは、コミットを作りpushする
    - name: Push
      env:
        TOKEN: ${{inputs.github-token}}
        NO_VERIFY: ${{inputs.no-verify}}
      if: steps.diff.outputs.result != '' && ((github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch')
      working-directory: ${{inputs.working-directory}}
      run: ${{ github.action_path }}/scripts/action/push.sh
      shell: bash
    - name: Get a number of PullRequests
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      if: steps.diff.outputs.result != '' && ((github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch')
      id: get_number_of_pull_requests
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const script = require('${{ github.action_path }}/dist/get_number_of_pull_requests.js')
          return await script(github, context)
    # pushしたブランチで修正PRを作る
    - name: Create PullRequest
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      if: steps.diff.outputs.result != '' && steps.get_number_of_pull_requests.outputs.result == 0 && ((github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch')
      id: create_pull_request
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const script = require('${{ github.action_path }}/dist/create_pull_request.js')
          return await script(github, context)
    # 元のPRを出したユーザーを修正PRにアサインする
    - name: Assign a user
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      if: steps.diff.outputs.result != '' && steps.get_number_of_pull_requests.outputs.result == 0 && github.event_name == 'pull_request' && github.event.action != 'closed' && github.event.pull_request.user.login != 'dependabot[bot]' && github.event.pull_request.user.login != 'renovate[bot]'
      env:
        PR_NUMBER: ${{steps.create_pull_request.outputs.result}}
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const script = require('${{ github.action_path }}/dist/assign_a_user.js')
          await script(github, context)
    # 修正PRのタイトルやDescriptionを更新する
    - name: Update PullRequest
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      if: steps.diff.outputs.result != '' && ((github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch')
      id: update_pull_request
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const script = require('${{ github.action_path }}/dist/update_pull_request.js')
          return await script(github, context)
    # 既に修正PRがある状態で、手動でformatを修正した場合、修正PRを閉じる
    - name: Close PullRequest
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      if: (github.event_name == 'pull_request' && (github.event.action == 'closed' || steps.diff.outputs.result == '')) || ((github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch') && steps.diff.outputs.result == '')
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const script = require('${{ github.action_path }}/dist/close_pull_request.js')
          await script(github, context)
    # exit-failureがtrueで差分がある場合は異常終了する
    - name: Exit
      if: (github.event_name != 'pull_request' || github.event.action != 'closed') && steps.diff.outputs.result != '' && inputs.exit-failure == 'true'
      run: exit 1
      shell: bash
