{"version":3,"file":"content.js","sourceRoot":"","sources":["content.ts"],"names":[],"mappings":";;AAAA,SAAgB,iBAAiB,CAAC,KAAa,EAAE,OAAe;IAC5D,IAAI,KAAK,GAAG,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE;QACrC,MAAM,IAAI,KAAK,CAAC,0BAAwB,KAAO,CAAC,CAAC;KACpD;IACD,IAAI,IAAI,GAAG,CAAC,CAAC;IACb,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,OAAO,IAAI,EAAE;QACT,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,WAAW,GAAG,CAAC,CAAC,CAAC;QACvD,IAAI,OAAO,KAAK,CAAC,CAAC,IAAI,KAAK,IAAI,OAAO,EAAE;YACpC,OAAO;gBACH,IAAI,MAAA;gBACJ,MAAM,EAAE,KAAK,GAAG,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC;aAC5D,CAAC;SACL;QACD,IAAI,EAAE,CAAC;QACP,WAAW,GAAG,OAAO,CAAC;KACzB;AACL,CAAC;AAjBD,8CAiBC","sourcesContent":["export function indexToLineColumn(index: number, content: string) {\n    if (index < 0 || content[index] == null) {\n        throw new Error(`unbound index value: ${index}`);\n    }\n    let line = 0;\n    let prevLfIndex = 0;\n    while (true) {\n        const lfIndex = content.indexOf(\"\\n\", prevLfIndex + 1);\n        if (lfIndex === -1 || index <= lfIndex) {\n            return {\n                line,\n                column: index - (prevLfIndex === 0 ? 0 : prevLfIndex + 1),\n            };\n        }\n        line++;\n        prevLfIndex = lfIndex;\n    }\n}\n"]}