"use strict";
import { AbstractTextLintEngine } from "./engine/textlint-engine-core";
import { createFormatter } from "@textlint/fixer-formatter";
/**
 * TextFixEngine a adapter for TextLintEngineCore.
 * It aim to pull the whole look together. (TextLintEngine and TextFixEngine)
 */
export class TextFixEngine extends AbstractTextLintEngine {
    constructor() {
        super(...arguments);
        /**
         * @param {TextLintCore} textlintCore
         * @returns {function()}
         */
        this.onFile = (textlintCore) => {
            /**
             * Fixes the current configuration on an array of file and directory names.
             * TextFixEngine#executeOnFiles
             * @returns {TextlintFixResult[]} The results for all files that were linted.
             */
            return (file) => {
                return textlintCore.fixFile(file);
            };
        };
        /**
         * @param {TextLintCore} textlintCore
         * @returns {function()}
         */
        this.onText = (textlintCore) => {
            /**
             * Fix texts with ext option.
             * TextFixEngine#executeOnText
             * @param {string} text linting text content
             * @param {string} [ext] ext is a type for linting. default: ".txt"
             * @returns {TextlintFixResult[]}
             */
            return (text, ext) => {
                return textlintCore.fixText(text, ext);
            };
        };
        /**
         * @param {TextLintFormatterOption} formatterConfig
         */
        this.onFormat = (formatterConfig) => {
            return createFormatter(formatterConfig);
        };
    }
}
//# sourceMappingURL=textfix-engine.js.map