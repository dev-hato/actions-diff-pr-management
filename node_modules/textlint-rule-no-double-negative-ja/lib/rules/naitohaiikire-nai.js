// LICENSE : MIT
"use strict";
/*
    (f) ないとはいいきれない
*/

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _matchTokenStream = _interopRequireDefault(require("./../matchTokenStream"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(context) {
  var {
    RuleError
  } = context;
  var matchPatternないといいきれない = (0, _matchTokenStream.default)([{
    "basic_form": ["ない", "無い"]
  }, {
    "surface_form": "と",
    "pos": "助詞"
  }, {
    "reading": "イイ"
  }, {
    "reading": "キレ",
    "pos": "動詞"
  }, {
    "basic_form": ["ない", "無い"]
  }]);
  var matchPatternないとはいいきれない = (0, _matchTokenStream.default)([{
    "basic_form": ["ない", "無い"]
  }, {
    "surface_form": "と",
    "pos": "助詞"
  }, {
    "surface_form": "は",
    "pos": "助詞"
  }, {
    "reading": "イイ"
  }, {
    "reading": "キレ",
    "pos": "動詞"
  }, {
    "basic_form": ["ない", "無い"]
  }]);
  return token => {
    if (matchPatternないといいきれない(token)) {
      return new RuleError("二重否定: 〜ないといいきれない", {
        index: token.word_position - 1
      });
    }

    if (matchPatternないとはいいきれない(token)) {
      return new RuleError("二重否定: 〜ないとはいいきれない", {
        index: token.word_position - 1
      });
    }
  };
}
//# sourceMappingURL=naitohaiikire-nai.js.map