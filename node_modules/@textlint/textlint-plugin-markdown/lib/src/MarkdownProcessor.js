/* eslint-disable no-unused-vars */
// LICENSE : MIT
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MarkdownProcessor = void 0;
const markdown_to_ast_1 = require("@textlint/markdown-to-ast");
class MarkdownProcessor {
    constructor(config = {}) {
        this.config = config;
        this.extensions = this.config.extensions ? this.config.extensions : [];
    }
    availableExtensions() {
        return [".md", ".markdown", ".mdown", ".mkdn", ".mkd", ".mdwn", ".mkdown", ".ron"].concat(this.extensions);
    }
    processor(_ext) {
        return {
            preProcess(text, _filePath) {
                return (0, markdown_to_ast_1.parse)(text);
            },
            postProcess(messages, filePath) {
                return {
                    messages,
                    filePath: filePath ? filePath : "<markdown>"
                };
            }
        };
    }
}
exports.MarkdownProcessor = MarkdownProcessor;
//# sourceMappingURL=MarkdownProcessor.js.map