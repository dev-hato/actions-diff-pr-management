// LICENSE : MIT
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSeverity = void 0;
const TextlintRuleSeverityLevelKeys_1 = require("../context/TextlintRuleSeverityLevelKeys");
const isSeverityLevelValue = (type) => {
    if (type === undefined) {
        throw new Error(`Please set following value to severity:
"rule-key": {
    "severity": "<warning|error>"
}`);
    }
    return true;
};
/**
 * get severity level from ruleConfig.
 * @param {Object|boolean|undefined} ruleConfig
 * @returns {number}
 */
function getSeverity(ruleConfig) {
    if (ruleConfig === undefined) {
        return TextlintRuleSeverityLevelKeys_1.TextlintRuleSeverityLevelKeys.error;
    }
    // rule:<true|false>
    if (typeof ruleConfig === "boolean") {
        return ruleConfig ? TextlintRuleSeverityLevelKeys_1.TextlintRuleSeverityLevelKeys.error : TextlintRuleSeverityLevelKeys_1.TextlintRuleSeverityLevelKeys.none;
    }
    if (ruleConfig.severity) {
        const severityValue = TextlintRuleSeverityLevelKeys_1.TextlintRuleSeverityLevelKeys[ruleConfig.severity];
        if (!isSeverityLevelValue(severityValue)) {
            throw new Error(`Please set following value to severity:
"rule-key": {
    "severity": "<warning|error>"
}`);
        }
        return severityValue;
    }
    return TextlintRuleSeverityLevelKeys_1.TextlintRuleSeverityLevelKeys.error;
}
exports.getSeverity = getSeverity;
//# sourceMappingURL=rule-severity.js.map