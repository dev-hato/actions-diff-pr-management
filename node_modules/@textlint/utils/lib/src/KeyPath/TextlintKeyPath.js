"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeTextlintPluginKey = exports.normalizeTextlintRulePresetKey = exports.normalizeTextlintFilterRuleKey = exports.normalizeTextlintRuleKey = exports.normalizeTextlintPresetSubRuleKey = exports.normalizeTextlintKeyPath = void 0;
const TextlintPackagePrefix_1 = require("./TextlintPackagePrefix");
const KeyPathUtil_1 = require("./KeyPathUtil");
/**
 * normalize `keyPath` that is specific path for rule
 * This normalize function handle ambiguity `key`
 * `keyPath` is one of "preset/rule` key, or "rule" key
 *
 * Note: `textlint-rule-textlint-rule-x`(twice!) is normalized at once.
 * It is edge case and this function can not treat it.
 * @param keyPath
 */
const normalizeTextlintKeyPath = (keyPath) => {
    const { preset, rule } = (0, KeyPathUtil_1.splitKeyToPresetSubRule)(keyPath);
    if (!preset) {
        return (0, exports.normalizeTextlintRuleKey)(rule);
    }
    return `${(0, exports.normalizeTextlintRulePresetKey)(preset)}/${(0, exports.normalizeTextlintRuleKey)(rule)}`;
};
exports.normalizeTextlintKeyPath = normalizeTextlintKeyPath;
/**
 * Normalize to preset-name/rule-name
 */
const normalizeTextlintPresetSubRuleKey = (names) => {
    const { preset, rule } = names;
    return `${(0, exports.normalizeTextlintRulePresetKey)(preset)}/${(0, exports.normalizeTextlintRuleKey)(rule)}`;
};
exports.normalizeTextlintPresetSubRuleKey = normalizeTextlintPresetSubRuleKey;
/**
 * Normalize rule key
 * @param name
 */
const normalizeTextlintRuleKey = (name) => {
    return (0, KeyPathUtil_1.removePrefixFromPackageName)([TextlintPackagePrefix_1.TextlintPackageNamePrefix.rule], name);
};
exports.normalizeTextlintRuleKey = normalizeTextlintRuleKey;
/**
 * Normalize filter rule key
 * @param name
 */
const normalizeTextlintFilterRuleKey = (name) => {
    return (0, KeyPathUtil_1.removePrefixFromPackageName)([TextlintPackagePrefix_1.TextlintPackageNamePrefix.filterRule], name);
};
exports.normalizeTextlintFilterRuleKey = normalizeTextlintFilterRuleKey;
/**
 * Normalize rule preset key
 * @param name
 */
const normalizeTextlintRulePresetKey = (name) => {
    // "preset-<name>" and "textlint-rule-preset-"
    return (0, KeyPathUtil_1.removePrefixFromPackageName)([TextlintPackagePrefix_1.TextlintPackageNamePrefix.rulePreset, "preset-"], name);
};
exports.normalizeTextlintRulePresetKey = normalizeTextlintRulePresetKey;
/**
 * Normalize plugin key
 * @param name
 */
const normalizeTextlintPluginKey = (name) => {
    return (0, KeyPathUtil_1.removePrefixFromPackageName)([TextlintPackagePrefix_1.TextlintPackageNamePrefix.plugin], name);
};
exports.normalizeTextlintPluginKey = normalizeTextlintPluginKey;
//# sourceMappingURL=TextlintKeyPath.js.map