/* eslint-disable no-unused-vars */
// LICENSE : MIT
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextProcessor = void 0;
const text_to_ast_1 = require("@textlint/text-to-ast");
class TextProcessor {
    constructor(config = {}) {
        this.config = config;
        // support "extension" option
        this.extensions = this.config.extensions ? this.config.extensions : [];
    }
    availableExtensions() {
        return [".txt", ".text"].concat(this.extensions);
    }
    processor(_ext) {
        return {
            preProcess(text, _filePath) {
                return (0, text_to_ast_1.parse)(text);
            },
            postProcess(messages, filePath) {
                return {
                    messages,
                    filePath: filePath ? filePath : "<text>"
                };
            }
        };
    }
}
exports.TextProcessor = TextProcessor;
//# sourceMappingURL=TextProcessor.js.map