{"version":3,"file":"4.3.1.js","names":["rx","regx","replaceSymbol","symbol","newSymbol","Error","reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","isUserWrittenNode","text","matchRegExps","japaneseRegExp","forEach","matchRegExp","matchCaptureGroupAll","match","index","fix","replaceTextRange","module","exports","linter"],"sources":["../src/4.3.1.js"],"sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n4.3.1.丸かっこ（）\n直前の内容を補足して説明する場合や言い換える場合に使用します。\n全角のかっこを使用します\n */\nimport { isUserWrittenNode } from \"./util/node-util\";\nimport { matchCaptureGroupAll } from \"match-index\";\nimport regx from \"regx\";\nimport { japaneseRegExp } from \"./util/regexp\";\nconst rx = regx(\"g\");\n\nconst replaceSymbol = (symbol) => {\n    var newSymbol = {\n        \"(\": \"（\",\n        \")\": \"）\"\n    }[symbol];\n    if (!newSymbol) {\n        throw new Error(\"fail to replace symbol\");\n    }\n    return newSymbol;\n};\nfunction reporter(context) {\n    let { Syntax, RuleError, report, fixer, getSource } = context;\n    return {\n        [Syntax.Str](node) {\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            // 半角のかっこ()は使用しないで全角のかっこを使用する\n            const text = getSource(node);\n            const matchRegExps = [\n                // FIXME: https://github.com/textlint-ja/textlint-rule-preset-JTF-style/issues/79\n                // rx`([\\(\\)])(?:${japaneseRegExp}+)([\\(\\)])`,\n                // rx`([\\(\\)])(?:${japaneseRegExp})`,\n                rx`(?:${japaneseRegExp})([\\(\\)])`\n            ];\n            matchRegExps.forEach((matchRegExp) => {\n                matchCaptureGroupAll(text, matchRegExp).forEach((match) => {\n                    const { index } = match;\n                    report(\n                        node,\n                        new RuleError(\"半角のかっこ()が使用されています。全角のかっこ（）を使用してください。\", {\n                            index: index,\n                            fix: fixer.replaceTextRange([index, index + 1], replaceSymbol(match.text))\n                        })\n                    );\n                });\n            });\n        }\n    };\n}\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AACA,IAAMA,EAAE,GAAG,IAAAC,aAAA,EAAK,GAAL,CAAX;;AAEA,IAAMC,aAAa,GAAIC,MAAD,IAAY;EAC9B,IAAIC,SAAS,GAAG;IACZ,KAAK,GADO;IAEZ,KAAK;EAFO,EAGdD,MAHc,CAAhB;;EAIA,IAAI,CAACC,SAAL,EAAgB;IACZ,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;EACH;;EACD,OAAOD,SAAP;AACH,CATD;;AAUA,SAASE,QAAT,CAAkBC,OAAlB,EAA2B;EACvB,IAAI;IAAEC,MAAF;IAAUC,SAAV;IAAqBC,MAArB;IAA6BC,KAA7B;IAAoCC;EAApC,IAAkDL,OAAtD;EACA,OAAO;IACH,CAACC,MAAM,CAACK,GAAR,EAAaC,IAAb,EAAmB;MACf,IAAI,CAAC,IAAAC,2BAAA,EAAkBD,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;QACnC;MACH,CAHc,CAIf;;;MACA,IAAMS,IAAI,GAAGJ,SAAS,CAACE,IAAD,CAAtB;MACA,IAAMG,YAAY,GAAG,CACjB;MACA;MACA;MACAjB,EAJiB,4GAITkB,sBAJS,EAArB;MAMAD,YAAY,CAACE,OAAb,CAAsBC,WAAD,IAAiB;QAClC,IAAAC,gCAAA,EAAqBL,IAArB,EAA2BI,WAA3B,EAAwCD,OAAxC,CAAiDG,KAAD,IAAW;UACvD,IAAM;YAAEC;UAAF,IAAYD,KAAlB;UACAZ,MAAM,CACFI,IADE,EAEF,IAAIL,SAAJ,CAAc,sCAAd,EAAsD;YAClDc,KAAK,EAAEA,KAD2C;YAElDC,GAAG,EAAEb,KAAK,CAACc,gBAAN,CAAuB,CAACF,KAAD,EAAQA,KAAK,GAAG,CAAhB,CAAvB,EAA2CrB,aAAa,CAACoB,KAAK,CAACN,IAAP,CAAxD;UAF6C,CAAtD,CAFE,CAAN;QAOH,CATD;MAUH,CAXD;IAYH;;EAzBE,CAAP;AA2BH;;AACDU,MAAM,CAACC,OAAP,GAAiB;EACbC,MAAM,EAAEtB,QADK;EAEbK,KAAK,EAAEL;AAFM,CAAjB"}