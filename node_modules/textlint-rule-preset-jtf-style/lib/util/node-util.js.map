{"version":3,"file":"node-util.js","names":["isUserWrittenNode","node","context","helper","RuleHelper","Syntax","type","Str","isPlainStrNode","isChildNode","Link","Image","BlockQuote","Emphasis"],"sources":["../../src/util/node-util.js"],"sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport { RuleHelper } from \"textlint-rule-helper\";\n\n/**\n * ユーザーが書いたと推測されるNodeかどうかを判定する\n * ユーザーが管理できないテキストは対象外としたいため。\n * @param node\n * @param context\n * @returns {boolean}\n */\nexport function isUserWrittenNode(node, context) {\n    let helper = new RuleHelper(context);\n    let Syntax = context.Syntax;\n    // Strがユーザーに書かれたと断定できるNodeかを判定する\n    // LinkやStrongなどはユーザーが書いていない可能性があるStrなので除外する\n    if (node.type === Syntax.Str) {\n        return helper.isPlainStrNode(node);\n    }\n    // ブロック要素の互換性のため古い除外ルールも残す\n    return !helper.isChildNode(node, [Syntax.Link, Syntax.Image, Syntax.BlockQuote, Syntax.Emphasis]);\n}\n"],"mappings":"AAAA;AACA;;;;;;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,iBAAT,CAA2BC,IAA3B,EAAiCC,OAAjC,EAA0C;EAC7C,IAAIC,MAAM,GAAG,IAAIC,8BAAJ,CAAeF,OAAf,CAAb;EACA,IAAIG,MAAM,GAAGH,OAAO,CAACG,MAArB,CAF6C,CAG7C;EACA;;EACA,IAAIJ,IAAI,CAACK,IAAL,KAAcD,MAAM,CAACE,GAAzB,EAA8B;IAC1B,OAAOJ,MAAM,CAACK,cAAP,CAAsBP,IAAtB,CAAP;EACH,CAP4C,CAQ7C;;;EACA,OAAO,CAACE,MAAM,CAACM,WAAP,CAAmBR,IAAnB,EAAyB,CAACI,MAAM,CAACK,IAAR,EAAcL,MAAM,CAACM,KAArB,EAA4BN,MAAM,CAACO,UAAnC,EAA+CP,MAAM,CAACQ,QAAtD,CAAzB,CAAR;AACH"}