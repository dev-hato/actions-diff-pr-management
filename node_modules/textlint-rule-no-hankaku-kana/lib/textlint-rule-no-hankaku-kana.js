// LICENSE : MIT
"use strict";

var _textlintRuleHelper = require("textlint-rule-helper");

var _matchIndex = require("match-index");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var HankakuRegExp = /([\uff61-\uff9f]+)/g;
module.exports = function reporter(context) {
    var Syntax = context.Syntax,
        RuleError = context.RuleError,
        report = context.report,
        fixer = context.fixer,
        getSource = context.getSource;

    var helper = new _textlintRuleHelper.RuleHelper(context);
    return _defineProperty({}, Syntax.Str, function (node) {
        if (helper.isChildNode(node, [Syntax.Link, Syntax.Image, Syntax.BlockQuote, Syntax.Emphasis])) {
            return;
        }
        var nodeText = getSource(node);
        (0, _matchIndex.matchCaptureGroupAll)(nodeText, HankakuRegExp).forEach(function (_ref) {
            var text = _ref.text,
                index = _ref.index;

            var ruleError = new RuleError("Disallow to use \u534A\u89D2\u30AB\u30BF\u30AB\u30CA: \"" + text + "\"", {
                index: index
            });
            report(node, ruleError);
        });
    });
};
//# sourceMappingURL=textlint-rule-no-hankaku-kana.js.map