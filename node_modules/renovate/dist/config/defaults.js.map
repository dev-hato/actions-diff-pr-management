{"version":3,"file":"defaults.js","sourceRoot":"","sources":["../../lib/config/defaults.ts"],"names":[],"mappings":";;;AAAA,uCAAuC;AAGvC,MAAM,aAAa,GAAG;IACpB,OAAO,EAAE,IAAI;IACb,KAAK,EAAE,EAAE;IACT,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,IAAI;CACL,CAAC;AAEX,SAAgB,UAAU,CAAC,MAAuB;IAChD,OAAO,MAAM,CAAC,OAAO,KAAK,SAAS;QACjC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC;QAC5B,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;AACrB,CAAC;AAJD,gCAIC;AAED,SAAgB,SAAS;IACvB,MAAM,OAAO,GAAG,IAAA,oBAAU,GAAE,CAAC;IAC7B,MAAM,MAAM,GAAc,EAAE,CAAC;IAC7B,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;QACzB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAClB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;SAC1C;IACH,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC;AATD,8BASC","sourcesContent":["import { getOptions } from './options';\nimport type { AllConfig, RenovateOptions } from './types';\n\nconst defaultValues = {\n  boolean: true,\n  array: [],\n  string: null,\n  object: null,\n  integer: null,\n} as const;\n\nexport function getDefault(option: RenovateOptions): any {\n  return option.default === undefined\n    ? defaultValues[option.type]\n    : option.default;\n}\n\nexport function getConfig(): AllConfig {\n  const options = getOptions();\n  const config: AllConfig = {};\n  options.forEach((option) => {\n    if (!option.parent) {\n      config[option.name] = getDefault(option);\n    }\n  });\n  return config;\n}\n"]}