{"version":3,"file":"migration.js","sourceRoot":"","sources":["../../lib/config/migration.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { dequal } from 'dequal';\nimport { logger } from '../logger';\nimport { clone } from '../util/clone';\nimport { regEx } from '../util/regex';\nimport { MigrationsService } from './migrations';\nimport { getOptions } from './options';\nimport type {\n  MigratedConfig,\n  MigratedRenovateConfig,\n  PackageRule,\n  RenovateConfig,\n  RenovateOptions,\n} from './types';\nimport { mergeChildConfig } from './utils';\n\nconst options = getOptions();\nexport function fixShortHours(input: string): string {\n  return input.replace(regEx(/( \\d?\\d)((a|p)m)/g), '$1:00$2');\n}\n\nlet optionTypes: Record<string, RenovateOptions['type']>;\n// Returns a migrated config\nexport function migrateConfig(config: RenovateConfig): MigratedConfig {\n  try {\n    if (!optionTypes) {\n      optionTypes = {};\n      options.forEach((option) => {\n        optionTypes[option.name] = option.type;\n      });\n    }\n    const newConfig = MigrationsService.run(config);\n    const migratedConfig = clone(newConfig) as MigratedRenovateConfig;\n\n    for (const [key, val] of Object.entries(newConfig)) {\n      if (is.string(val) && val.includes('{{baseDir}}')) {\n        migratedConfig[key] = val.replace(\n          regEx(/{{baseDir}}/g),\n          '{{packageFileDir}}'\n        );\n      } else if (is.string(val) && val.includes('{{lookupName}}')) {\n        migratedConfig[key] = val.replace(\n          regEx(/{{lookupName}}/g),\n          '{{packageName}}'\n        );\n      } else if (is.string(val) && val.includes('{{depNameShort}}')) {\n        migratedConfig[key] = val.replace(\n          regEx(/{{depNameShort}}/g),\n          '{{depName}}'\n        );\n      } else if (is.string(val) && val.startsWith('{{semanticPrefix}}')) {\n        migratedConfig[key] = val.replace(\n          '{{semanticPrefix}}',\n          '{{#if semanticCommitType}}{{semanticCommitType}}{{#if semanticCommitScope}}({{semanticCommitScope}}){{/if}}: {{/if}}'\n        );\n      } else if (optionTypes[key] === 'object' && is.boolean(val)) {\n        migratedConfig[key] = { enabled: val };\n      } else if (optionTypes[key] === 'boolean') {\n        if (val === 'true') {\n          migratedConfig[key] = true;\n        } else if (val === 'false') {\n          migratedConfig[key] = false;\n        }\n      } else if (\n        optionTypes[key] === 'string' &&\n        is.array(val) &&\n        val.length === 1\n      ) {\n        migratedConfig[key] = String(val[0]);\n      } else if (is.array(val)) {\n        if (is.array(migratedConfig?.[key])) {\n          const newArray = [];\n          for (const item of migratedConfig[key] as unknown[]) {\n            if (is.object(item) && !is.array(item)) {\n              const arrMigrate = migrateConfig(item as RenovateConfig);\n              newArray.push(arrMigrate.migratedConfig);\n            } else {\n              newArray.push(item);\n            }\n          }\n          migratedConfig[key] = newArray;\n        }\n      } else if (is.object(val)) {\n        const subMigrate = migrateConfig(migratedConfig[key] as RenovateConfig);\n        if (subMigrate.isMigrated) {\n          migratedConfig[key] = subMigrate.migratedConfig;\n        }\n      }\n\n      const migratedTemplates = {\n        fromVersion: 'currentVersion',\n        newValueMajor: 'newMajor',\n        newValueMinor: 'newMinor',\n        newVersionMajor: 'newMajor',\n        newVersionMinor: 'newMinor',\n        toVersion: 'newVersion',\n      };\n      if (is.string(migratedConfig[key])) {\n        for (const [from, to] of Object.entries(migratedTemplates)) {\n          migratedConfig[key] = (migratedConfig[key] as string).replace(\n            regEx(from, 'g'),\n            to\n          );\n        }\n      }\n    }\n    // Migrate nested packageRules\n    if (is.nonEmptyArray(migratedConfig.packageRules)) {\n      const existingRules = migratedConfig.packageRules;\n      migratedConfig.packageRules = [];\n      for (const packageRule of existingRules) {\n        if (is.array(packageRule.packageRules)) {\n          logger.debug('Flattening nested packageRules');\n          // merge each subrule and add to the parent list\n          for (const subrule of packageRule.packageRules) {\n            // TODO: fix types #7154\n            const combinedRule = mergeChildConfig(\n              packageRule,\n              subrule as PackageRule\n            );\n            delete combinedRule.packageRules;\n            migratedConfig.packageRules.push(combinedRule);\n          }\n        } else {\n          migratedConfig.packageRules.push(packageRule);\n        }\n      }\n    }\n    if (is.nonEmptyArray(migratedConfig.matchManagers)) {\n      if (migratedConfig.matchManagers.includes('gradle-lite')) {\n        if (!migratedConfig.matchManagers.includes('gradle')) {\n          migratedConfig.matchManagers.push('gradle');\n        }\n        migratedConfig.matchManagers = migratedConfig.matchManagers.filter(\n          (manager) => manager !== 'gradle-lite'\n        );\n      }\n    }\n    if (is.nonEmptyObject(migratedConfig['gradle-lite'])) {\n      migratedConfig.gradle = mergeChildConfig(\n        migratedConfig.gradle ?? {},\n        migratedConfig['gradle-lite']\n      );\n    }\n    delete migratedConfig['gradle-lite'];\n    const isMigrated = !dequal(config, migratedConfig);\n    if (isMigrated) {\n      // recursive call in case any migrated configs need further migrating\n      return {\n        isMigrated,\n        migratedConfig: migrateConfig(migratedConfig).migratedConfig,\n      };\n    }\n    return { isMigrated, migratedConfig };\n  } catch (err) /* istanbul ignore next */ {\n    logger.debug({ config, err }, 'migrateConfig() error');\n    throw err;\n  }\n}\n"]}