{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/config/presets/npm/index.ts"],"names":[],"mappings":";;;AAAA,4CAAyC;AACzC,iEAG+C;AAK/C,6CAA0C;AAE1C,kCAIiB;AAEjB,MAAM,EAAE,GAAG,KAAK,CAAC;AAEjB,MAAM,IAAI,GAAG,IAAI,WAAI,CAAC,EAAE,CAAC,CAAC;AAEnB,KAAK,UAAU,SAAS,CAAC,EAC9B,IAAI,EAAE,GAAG,EACT,UAAU,GAAG,SAAS,GACT;IACb,IAAI,GAAmE,CAAC;IACxE,IAAI;QACF,MAAM,WAAW,GAAG,IAAA,0BAAkB,EAAC,GAAG,CAAC,CAAC;QAC5C,MAAM,UAAU,GAAG,IAAA,yBAAiB,EAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QACvD,qBAAqB;QACrB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,6BAA6B,CAAC,EAAE;YACzD,eAAM,CAAC,IAAI,CACT,iHAAiH,CAClH,CAAC;SACH;QACD,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,OAAO,CAAc,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;QAChE,yBAAyB;QACzB,GAAG,GAAG,IAAI,CAAC,QAAS,CAAC,IAAI,CAAC,WAAW,CAAE,CAAC,MAAM,CAAC,CAAC;KACjD;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,IAAI,KAAK,CAAC,2BAAoB,CAAC,CAAC;KACvC;IACD,IAAI,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,EAAE;QAC7B,MAAM,IAAI,KAAK,CAAC,uCAAgC,CAAC,CAAC;KACnD;IACD,MAAM,YAAY,GAAG,GAAG,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,CAAC;IACxD,IAAI,CAAC,YAAY,EAAE;QACjB,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACxD,eAAM,CAAC,KAAK,CACV,EAAE,WAAW,EAAE,UAAU,EAAE,EAC3B,yCAAyC,CAC1C,CAAC;QACF,MAAM,IAAI,KAAK,CAAC,uBAAgB,CAAC,CAAC;KACnC;IACD,OAAO,YAAY,CAAC;AACtB,CAAC;AAjCD,8BAiCC","sourcesContent":["import { logger } from '../../../logger';\nimport {\n  resolvePackageUrl,\n  resolveRegistryUrl,\n} from '../../../modules/datasource/npm/npmrc';\nimport type {\n  NpmResponse,\n  NpmResponseVersion,\n} from '../../../modules/datasource/npm/types';\nimport { Http } from '../../../util/http';\nimport type { Preset, PresetConfig } from '../types';\nimport {\n  PRESET_DEP_NOT_FOUND,\n  PRESET_NOT_FOUND,\n  PRESET_RENOVATE_CONFIG_NOT_FOUND,\n} from '../util';\n\nconst id = 'npm';\n\nconst http = new Http(id);\n\nexport async function getPreset({\n  repo: pkg,\n  presetName = 'default',\n}: PresetConfig): Promise<Preset | undefined> {\n  let dep: (NpmResponseVersion & { 'renovate-config'?: any }) | undefined;\n  try {\n    const registryUrl = resolveRegistryUrl(pkg);\n    const packageUrl = resolvePackageUrl(registryUrl, pkg);\n    // istanbul ignore if\n    if (!packageUrl.startsWith('https://registry.npmjs.org/')) {\n      logger.warn(\n        'npm presets from non-default registries are now deprecated. Please migrate to repository-based presets instead.'\n      );\n    }\n    const body = (await http.getJson<NpmResponse>(packageUrl)).body;\n    // TODO: check null #7154\n    dep = body.versions![body['dist-tags']!.latest];\n  } catch (err) {\n    throw new Error(PRESET_DEP_NOT_FOUND);\n  }\n  if (!dep?.['renovate-config']) {\n    throw new Error(PRESET_RENOVATE_CONFIG_NOT_FOUND);\n  }\n  const presetConfig = dep['renovate-config'][presetName];\n  if (!presetConfig) {\n    const presetNames = Object.keys(dep['renovate-config']);\n    logger.debug(\n      { presetNames, presetName },\n      'Preset not found within renovate-config'\n    );\n    throw new Error(PRESET_NOT_FOUND);\n  }\n  return presetConfig;\n}\n"]}