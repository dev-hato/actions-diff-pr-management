{"version":3,"file":"auto-generate-replacements.js","sourceRoot":"","sources":["../../../../lib/config/presets/internal/auto-generate-replacements.ts"],"names":[],"mappings":";;;AAkBA,SAAS,oBAAoB,CAAC,EAC5B,mBAAmB,EACnB,gBAAgB,EAChB,YAAY,EACZ,kBAAkB,GACD;IACjB,MAAM,KAAK,GAAkB,EAAE,CAAC;IAChC,KAAK,MAAM,WAAW,IAAI,YAAY,EAAE;QACtC,MAAM,CAAC,iBAAiB,EAAE,eAAe,CAAC,GAAG,WAAW,CAAC;QACzD,KAAK,CAAC,IAAI,CAAC;YACT,mBAAmB;YACnB,gBAAgB;YAChB,iBAAiB;YACjB,eAAe;YACf,kBAAkB;SACnB,CAAC,CAAC;KACJ;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAgB,UAAU,CACxB,OAA+B,EAC/B,QAAwB;IAExB,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,QAAQ,CAAC;IACtD,OAAO,CAAC,KAAK,CAAC,GAAG;QACf,WAAW;QACX,YAAY,EAAE,oBAAoB,CAAC,YAAY,CAAC;KACjD,CAAC;IACF,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC,gBAAgB,KAAK,EAAE,CAAC,CAAC;IAClC,GAAG,CAAC,IAAI,EAAE,CAAC;AACb,CAAC;AAZD,gCAYC","sourcesContent":["import type { PackageRule } from '../../types';\nimport type { Preset } from '../types';\n\nexport type Replacement = [string[], string];\n\nexport interface AutoPackageRules {\n  matchCurrentVersion: string;\n  matchDatasources: string[];\n  replacements: Replacement[];\n  replacementVersion: string;\n}\n\nexport interface PresetTemplate {\n  title: string;\n  description: string;\n  packageRules: AutoPackageRules;\n}\n\nfunction generatePackageRules({\n  matchCurrentVersion,\n  matchDatasources,\n  replacements,\n  replacementVersion,\n}: AutoPackageRules): PackageRule[] {\n  const rules: PackageRule[] = [];\n  for (const replacement of replacements) {\n    const [matchPackageNames, replacementName] = replacement;\n    rules.push({\n      matchCurrentVersion,\n      matchDatasources,\n      matchPackageNames,\n      replacementName,\n      replacementVersion,\n    });\n  }\n  return rules;\n}\n\nexport function addPresets(\n  presets: Record<string, Preset>,\n  template: PresetTemplate\n): void {\n  const { title, description, packageRules } = template;\n  presets[title] = {\n    description,\n    packageRules: generatePackageRules(packageRules),\n  };\n  const ext = presets.all?.extends ?? [];\n  ext.push(`replacements:${title}`);\n  ext.sort();\n}\n"]}