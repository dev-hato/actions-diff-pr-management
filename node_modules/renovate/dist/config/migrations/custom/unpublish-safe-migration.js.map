{"version":3,"file":"unpublish-safe-migration.js","sourceRoot":"","sources":["../../../../lib/config/migrations/custom/unpublish-safe-migration.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAClC,mEAA+D;AAE/D,MAAa,sBAAuB,SAAQ,sCAAiB;IAA7D;;QAOoB,eAAU,GAAG,IAAI,CAAC;QAClB,iBAAY,GAAG,eAAe,CAAC;IA+BnD,CAAC;IA7BU,GAAG,CAAC,KAAc;QACzB,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACzC,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;QAExE,IAAI,KAAK,KAAK,IAAI,EAAE;YAClB,IAAI,YAAE,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE;gBAC3B,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACpC;YAED,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAE;gBACjE,eAAe,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aAC3C;YAED,IAAI,CAAC,OAAO,CACV,SAAS,EACT,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC3B,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;oBAC/B,OAAO,mBAAmB,CAAC;iBAC5B;gBAED,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CACH,CAAC;SACH;IACH,CAAC;IAEO,gBAAgB,CAAC,KAAa;QACpC,OAAO,sBAAsB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACjE,CAAC;;AAtCH,wDAuCC;AAtCyB,uCAAgB,GAAG;IACzC,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;CACpB,CAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport { AbstractMigration } from '../base/abstract-migration';\n\nexport class UnpublishSafeMigration extends AbstractMigration {\n  private static readonly SUPPORTED_VALUES = [\n    ':unpublishSafe',\n    'default:unpublishSafe',\n    'npm:unpublishSafe',\n  ];\n\n  override readonly deprecated = true;\n  override readonly propertyName = 'unpublishSafe';\n\n  override run(value: unknown): void {\n    const extendsValue = this.get('extends');\n    const newExtendsValue = Array.isArray(extendsValue) ? extendsValue : [];\n\n    if (value === true) {\n      if (is.string(extendsValue)) {\n        newExtendsValue.push(extendsValue);\n      }\n\n      if (newExtendsValue.every((item) => !this.isSupportedValue(item))) {\n        newExtendsValue.push('npm:unpublishSafe');\n      }\n\n      this.setHard(\n        'extends',\n        newExtendsValue.map((item) => {\n          if (this.isSupportedValue(item)) {\n            return 'npm:unpublishSafe';\n          }\n\n          return item;\n        })\n      );\n    }\n  }\n\n  private isSupportedValue(value: string): boolean {\n    return UnpublishSafeMigration.SUPPORTED_VALUES.includes(value);\n  }\n}\n"]}