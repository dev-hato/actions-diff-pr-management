{"version":3,"file":"host-rules-migration.js","sourceRoot":"","sources":["../../../../lib/config/migrations/custom/host-rules-migration.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,mEAA+D;AAE/D,MAAa,kBAAmB,SAAQ,sCAAiB;IAAzD;;QACoB,iBAAY,GAAG,WAAW,CAAC;IAmC/C,CAAC;IAjCU,GAAG,CAAC,KAAgC;QAC3C,MAAM,YAAY,GAAe,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YAClD,MAAM,OAAO,GAAQ,EAAE,CAAC;YAExB,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC/C,IAAI,GAAG,KAAK,UAAU,EAAE;oBACtB,IAAI,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;wBACpB,OAAO,CAAC,QAAQ,KAAhB,OAAO,CAAC,QAAQ,GAAK,KAAK,EAAC;qBAC5B;oBACD,SAAS;iBACV;gBAED,IACE,GAAG,KAAK,UAAU;oBAClB,GAAG,KAAK,MAAM;oBACd,GAAG,KAAK,SAAS;oBACjB,GAAG,KAAK,UAAU;oBAClB,GAAG,KAAK,YAAY,EACpB;oBACA,IAAI,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;wBACpB,OAAO,CAAC,SAAS,KAAjB,OAAO,CAAC,SAAS,GAAK,KAAK,EAAC;qBAC7B;oBACD,SAAS;iBACV;gBAED,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;aACtB;YAED,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IAC7B,CAAC;CACF;AApCD,gDAoCC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { HostRule } from '../../../types';\nimport { AbstractMigration } from '../base/abstract-migration';\n\nexport class HostRulesMigration extends AbstractMigration {\n  override readonly propertyName = 'hostRules';\n\n  override run(value: Record<string, unknown>[]): void {\n    const newHostRules: HostRule[] = value.map((rule) => {\n      const newRule: any = {};\n\n      for (const [key, value] of Object.entries(rule)) {\n        if (key === 'platform') {\n          if (is.string(value)) {\n            newRule.hostType ??= value;\n          }\n          continue;\n        }\n\n        if (\n          key === 'endpoint' ||\n          key === 'host' ||\n          key === 'baseUrl' ||\n          key === 'hostName' ||\n          key === 'domainName'\n        ) {\n          if (is.string(value)) {\n            newRule.matchHost ??= value;\n          }\n          continue;\n        }\n\n        newRule[key] = value;\n      }\n\n      return newRule;\n    });\n\n    this.rewrite(newHostRules);\n  }\n}\n"]}