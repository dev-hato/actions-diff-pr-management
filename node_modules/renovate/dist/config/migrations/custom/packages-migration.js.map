{"version":3,"file":"packages-migration.js","sourceRoot":"","sources":["../../../../lib/config/migrations/custom/packages-migration.ts"],"names":[],"mappings":";;;AAAA,mEAA+D;AAE/D,MAAa,iBAAkB,SAAQ,sCAAiB;IAAxD;;QACoB,eAAU,GAAG,IAAI,CAAC;QAClB,iBAAY,GAAG,UAAU,CAAC;IAW9C,CAAC;IATU,GAAG,CAAC,KAAc;QACzB,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE9C,IAAI,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;QACtE,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,eAAe,GAAG,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACjD;QACD,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;IAChD,CAAC;CACF;AAbD,8CAaC","sourcesContent":["import { AbstractMigration } from '../base/abstract-migration';\n\nexport class PackagesMigration extends AbstractMigration {\n  override readonly deprecated = true;\n  override readonly propertyName = 'packages';\n\n  override run(value: unknown): void {\n    const packageRules = this.get('packageRules');\n\n    let newPackageRules = Array.isArray(packageRules) ? packageRules : [];\n    if (Array.isArray(value)) {\n      newPackageRules = newPackageRules.concat(value);\n    }\n    this.setHard('packageRules', newPackageRules);\n  }\n}\n"]}