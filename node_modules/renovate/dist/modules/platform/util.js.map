{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../lib/modules/platform/util.ts"],"names":[],"mappings":";;;;AAAA,+CAGyB;AACzB,yEAAmD;AACnD,wCAA0C;AAE1C;;;;;GAKG;AACH,SAAgB,cAAc,CAAC,GAAW;IACxC,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,cAAQ,EAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IACzC,IAAI,QAAQ,KAAK,YAAY,IAAI,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC7D,OAAO,QAAQ,CAAC;KACjB;IACD,IAAI,QAAQ,KAAK,YAAY,IAAI,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC7D,OAAO,QAAQ,CAAC;KACjB;IAED,MAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAElD,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO,IAAI,CAAC;KACb;IAED,IAAI,uCAA2B,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAClD,OAAO,QAAQ,CAAC;KACjB;IACD,IAAI,uCAA2B,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAClD,OAAO,QAAQ,CAAC;KACjB;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAvBD,wCAuBC","sourcesContent":["import {\n  GITHUB_API_USING_HOST_TYPES,\n  GITLAB_API_USING_HOST_TYPES,\n} from '../../constants';\nimport * as hostRules from '../../util/host-rules';\nimport { parseUrl } from '../../util/url';\n\n/**\n * Tries to detect the `platform from a url.\n *\n * @param url the url to detect platform from\n * @returns matched `platform` if found, otherwise `null`\n */\nexport function detectPlatform(url: string): 'gitlab' | 'github' | null {\n  const { hostname } = parseUrl(url) ?? {};\n  if (hostname === 'github.com' || hostname?.includes('github')) {\n    return 'github';\n  }\n  if (hostname === 'gitlab.com' || hostname?.includes('gitlab')) {\n    return 'gitlab';\n  }\n\n  const hostType = hostRules.hostType({ url: url });\n\n  if (!hostType) {\n    return null;\n  }\n\n  if (GITLAB_API_USING_HOST_TYPES.includes(hostType)) {\n    return 'gitlab';\n  }\n  if (GITHUB_API_USING_HOST_TYPES.includes(hostType)) {\n    return 'github';\n  }\n\n  return null;\n}\n"]}