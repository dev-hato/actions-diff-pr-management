{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/platform/gitea/index.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAClC,0DAA0B;AAC1B,4DAA4B;AAC5B,kDAAgD;AAChD,sEAO2C;AAC3C,4CAAyC;AACzC,0CAA2E;AAC3E,+DAAyC;AACzC,oDAAsD;AACtD,qDAAkD;AAClD,2CAAwD;AACxD,wCAAuD;AAkBvD,8CAAiD;AACjD,+DAAyC;AAUzC,mCAKiB;AAajB,MAAM,YAAY,GAAG,OAAO,CAAC;AAE7B,MAAM,QAAQ,GAAG;IACf,QAAQ,EAAE,sBAAU,CAAC,KAAK;IAC1B,QAAQ,EAAE,oBAAoB;IAC9B,OAAO,EAAE,OAAO;CACjB,CAAC;AAEF,IAAI,MAAM,GAAoB,EAAS,CAAC;AACxC,IAAI,SAAiB,CAAC;AACtB,IAAI,WAAmB,CAAC;AAExB,SAAS,eAAe,CAAC,IAAW;IAClC,OAAO;QACL,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,IAAI,EAAE,IAAI,CAAC,IAAI;KAChB,CAAC;AACJ,CAAC;AAED,aAAa;AACb,SAAS,YAAY,CAAC,IAAQ;IAC5B,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,IAAI,CAAC;KACb;IAED,IACE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG;QACf,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK;QACjB,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG;QACf,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAC3B;QACA,eAAM,CAAC,KAAK,CACV,0BAA0B,IAAI,CAAC,MAAM,yCAAyC,CAC/E,CAAC;QACF,OAAO,IAAI,CAAC;KACb;IAED,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;IACtC,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,KAAK,WAAW,EAAE;QACzD,OAAO,IAAI,CAAC;KACb;IAED,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACvB,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,IAAI,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;QAClC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC7C,OAAO,GAAG,IAAI,CAAC;KAChB;IAED,OAAO;QACL,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,aAAa,EAAE,iBAAiB,IAAI,CAAC,MAAM,EAAE;QAC7C,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,KAAK;QACL,OAAO;QACP,UAAU,EAAE,IAAA,yBAAe,EAAC,IAAI,CAAC,IAAI,CAAC;QACtC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG;QAClB,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;QAC7B,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG;QAC3B,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;QACpC,SAAS,EAAE,IAAI,CAAC,UAAU;QAC1B,iBAAiB,EAAE,IAAI,CAAC,SAAS;YAC/B,CAAC,CAAC,SAAS;YACX,CAAC,CAAC,iBAAiB,IAAI,CAAC,SAAS,GAAG;QACtC,YAAY,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,YAAE,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC3E,CAAC;AACJ,CAAC;AAED,SAAS,YAAY,CAAC,MAAc,EAAE,QAAgB;IACpD,IAAI,QAAQ,KAAK,eAAO,CAAC,GAAG,EAAE;QAC5B,OAAO,IAAI,CAAC;KACb;IACD,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;QAC5B,OAAO,MAAM,KAAK,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KACzC;IAED,OAAO,MAAM,KAAK,QAAQ,CAAC;AAC7B,CAAC;AAED,SAAS,kBAAkB,CACzB,QAAmB,EACnB,KAAa;IAEb,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC;AAC7E,CAAC;AAED,SAAS,oBAAoB,CAC3B,QAAmB,EACnB,OAAe;IAEf,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,OAAO,CAAC,IAAI,IAAI,CAAC;AACjE,CAAC;AAED,SAAS,YAAY;IACnB,IAAI,MAAM,CAAC,SAAS,KAAK,IAAI,EAAE;QAC7B,MAAM,UAAU,GAAG,MAAM;aACtB,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE;YAChC,QAAQ,EAAE,KAAK;SAChB,CAAC;aACD,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACf,eAAM,CAAC,KAAK,CAAC,aAAa,MAAM,CAAC,MAAM,cAAc,CAAC,CAAC;YACvD,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,CAAC;QAEL,MAAM,SAAS,GAAG,MAAM;aACrB,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;YAC7C,QAAQ,EAAE,KAAK;SAChB,CAAC;aACD,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACf,eAAM,CAAC,KAAK,CAAC,aAAa,MAAM,CAAC,MAAM,aAAa,CAAC,CAAC;YACtD,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,gEAAgE;YAChE,eAAM,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;YACpD,OAAO,EAAa,CAAC;QACvB,CAAC,CAAC,CAAC;QAEL,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CACrE,EAAc,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,CAClC,CAAC;KACH;IAED,OAAO,MAAM,CAAC,SAAS,CAAC;AAC1B,CAAC;AAED,KAAK,UAAU,iBAAiB,CAAC,IAAY;IAC3C,eAAM,CAAC,KAAK,CAAC,qBAAqB,IAAI,GAAG,CAAC,CAAC;IAC3C,MAAM,SAAS,GAAG,MAAM,YAAY,EAAE,CAAC;IACvC,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC;AAC5D,CAAC;AAED,MAAM,QAAQ,GAAa;IACzB,KAAK,CAAC,YAAY,CAAC,EACjB,QAAQ,EACR,KAAK,GACU;QACf,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;SAC3E;QAED,IAAI,QAAQ,EAAE;YACZ,IAAI,YAAY,GAAG,IAAA,2BAAmB,EAAC,QAAQ,CAAC,CAAC;YACjD,YAAY,GAAG,IAAA,yBAAmB,EAAC,YAAY,CAAC,CAAC;YACjD,QAAQ,CAAC,QAAQ,GAAG,YAAY,CAAC;SAClC;aAAM;YACL,eAAM,CAAC,KAAK,CAAC,gCAAgC,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;SACpE;QACD,IAAA,kBAAU,EAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAE9B,IAAI,SAAiB,CAAC;QACtB,IAAI;YACF,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YACpD,SAAS,GAAG,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC;YACjE,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;YACpB,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC5B,QAAQ,CAAC,OAAO,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;SACvD;QAAC,OAAO,GAAG,EAAE;YACZ,eAAM,CAAC,KAAK,CACV,EAAE,GAAG,EAAE,EACP,mDAAmD,CACpD,CAAC;YACF,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;SACjD;QAED,OAAO;YACL,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,SAAS;SACV,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,UAAU,CACd,QAAgB,EAChB,QAAiB,EACjB,WAAoB;QAEpB,MAAM,IAAI,GAAG,QAAQ,IAAI,MAAM,CAAC,UAAU,CAAC;QAC3C,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;QAC3E,OAAO,QAAQ,CAAC,aAAa,IAAI,IAAI,CAAC;IACxC,CAAC;IAED,KAAK,CAAC,WAAW,CACf,QAAgB,EAChB,QAAiB,EACjB,WAAoB;QAEpB,aAAa;QACb,MAAM,GAAG,GAAG,CAAC,MAAM,QAAQ,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAE,CAAC;QAC1E,OAAO,eAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,EACb,UAAU,EACV,eAAe,EACf,MAAM,GACK;QACX,IAAI,IAAU,CAAC;QAEf,MAAM,GAAG,EAAS,CAAC;QACnB,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,MAAM,CAAC,eAAe,GAAG,CAAC,CAAC,eAAe,CAAC;QAE3C,gDAAgD;QAChD,IAAI;YACF,IAAI,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SACzC;QAAC,OAAO,GAAG,EAAE;YACZ,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,8BAA8B,CAAC,CAAC;YACtD,MAAM,GAAG,CAAC;SACX;QAED,sDAAsD;QACtD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,eAAM,CAAC,KAAK,CACV,6DAA6D,CAC9D,CAAC;YACF,MAAM,IAAI,KAAK,CAAC,oCAAmB,CAAC,CAAC;SACtC;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,eAAM,CAAC,KAAK,CACV,6DAA6D,CAC9D,CAAC;YACF,MAAM,IAAI,KAAK,CAAC,oCAAmB,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YACpD,eAAM,CAAC,KAAK,CACV,+EAA+E,CAChF,CAAC;YACF,MAAM,IAAI,KAAK,CAAC,4CAA2B,CAAC,CAAC;SAC9C;QACD,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,eAAM,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;YACzE,MAAM,IAAI,KAAK,CAAC,iCAAgB,CAAC,CAAC;SACnC;QAED,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC;SAC/B;aAAM,IAAI,IAAI,CAAC,qBAAqB,EAAE;YACrC,MAAM,CAAC,WAAW,GAAG,cAAc,CAAC;SACrC;aAAM,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAClC,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC;SAC/B;aAAM,IAAI,IAAI,CAAC,mBAAmB,EAAE;YACnC,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC;SAC9B;aAAM;YACL,eAAM,CAAC,KAAK,CACV,8EAA8E,CAC/E,CAAC;YACF,MAAM,IAAI,KAAK,CAAC,mCAAkB,CAAC,CAAC;SACrC;QAED,sCAAsC;QACtC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;QAC3C,eAAM,CAAC,KAAK,CAAC,GAAG,UAAU,qBAAqB,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC;QAEvE,MAAM,GAAG,GAAG,IAAA,kBAAU,EAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAExD,yBAAyB;QACzB,MAAM,GAAG,CAAC,QAAQ,CAAC;YACjB,GAAG,MAAM;YACT,GAAG;SACJ,CAAC,CAAC;QAEH,yBAAyB;QACzB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;QAExB,OAAO;YACL,aAAa,EAAE,MAAM,CAAC,aAAa;YACnC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI;SACpB,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,QAAQ;QACZ,eAAM,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;QACpD,IAAI;YACF,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC;gBACrC,GAAG,EAAE,SAAS;gBACd,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YACH,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;SACtC;QAAC,OAAO,GAAG,EAAE;YACZ,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,wBAAwB,CAAC,CAAC;YAChD,MAAM,GAAG,CAAC;SACX;IACH,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,EACpB,UAAU,EACV,OAAO,EACP,WAAW,EACX,KAAK,EACL,GAAG,EAAE,UAAU,GACI;QACnB,IAAI;YACF,sCAAsC;YACtC,MAAM,YAAY,GAAG,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YACrD,2BAA2B;YAE3B,MAAM,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,UAAU,EAAE,YAAa,EAAE;gBAChE,KAAK,EAAE,MAAM,CAAC,4BAA4B,CAAC,KAAK,CAAC,IAAI,SAAS;gBAC9D,OAAO;gBACP,WAAW;gBACX,GAAG,CAAC,UAAU,IAAI,EAAE,UAAU,EAAE,CAAC;aAClC,CAAC,CAAC;YAEH,yDAAyD;YACzD,MAAM,MAAM,CAAC,uBAAuB,CAAC,MAAM,CAAC,UAAU,EAAE,UAAU,EAAE;gBAClE,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;SACJ;QAAC,OAAO,GAAG,EAAE;YACZ,eAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,6BAA6B,CAAC,CAAC;SACrD;IACH,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,UAAkB;QACtC,IAAI,GAAyB,CAAC;QAC9B,IAAI;YACF,GAAG,GAAG,MAAM,MAAM,CAAC,uBAAuB,CAAC,MAAM,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;SAC3E;QAAC,OAAO,GAAG,EAAE;YACZ,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;gBAC1B,eAAM,CAAC,KAAK,CACV,oEAAoE,CACrE,CAAC;gBACF,MAAM,IAAI,KAAK,CAAC,mCAAkB,CAAC,CAAC;aACrC;YAED,eAAM,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;YAC1D,MAAM,GAAG,CAAC;SACX;QAED,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,4BAA4B,CAAC,CAAC;QACpD,OAAO,CACL,MAAM,CAAC,4BAA4B,CAAC,GAAG,CAAC,WAAW,CAAC;YACpD,oBAAY,CAAC,MAAM,CACpB,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,oBAAoB,CACxB,UAAkB,EAClB,OAAe;QAEf,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,uBAAuB,CAC9C,MAAM,CAAC,UAAU,EACjB,UAAU,CACX,CAAC;QACF,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC;QAC3D,IAAI,CAAC,EAAE,EAAE;YACP,OAAO,IAAI,CAAC;SACb,CAAC,yBAAyB;QAC3B,MAAM,MAAM,GAAG,MAAM,CAAC,4BAA4B,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAC9D,IAAI,MAAM,EAAE;YACV,OAAO,MAAM,CAAC;SACf;QACD,eAAM,CAAC,IAAI,CACT,EAAE,KAAK,EAAE,EAAE,EAAE,EACb,qDAAqD,CACtD,CAAC;QACF,OAAO,oBAAY,CAAC,MAAM,CAAC;IAC7B,CAAC;IAED,SAAS;QACP,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;YAC1B,MAAM,CAAC,MAAM,GAAG,MAAM;iBACnB,SAAS,CACR,MAAM,CAAC,UAAU,EACjB,EAAE,KAAK,EAAE,eAAO,CAAC,GAAG,EAAE,EACtB,EAAE,QAAQ,EAAE,KAAK,EAAE,CACpB;iBACA,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBACZ,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,YAAE,CAAC,MAAM,CAAC,CAAC;gBACvD,eAAM,CAAC,KAAK,CAAC,aAAa,MAAM,CAAC,MAAM,gBAAgB,CAAC,CAAC;gBACzD,OAAO,MAAM,CAAC;YAChB,CAAC,CAAC,CAAC;SACN;QAED,OAAO,MAAM,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,KAAK,CAAC,KAAK,CAAC,MAAc;QACxB,sEAAsE;QACtE,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,SAAS,EAAE,CAAC;QAC1C,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC;QACzD,IAAI,EAAE,EAAE;YACN,eAAM,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC3C;aAAM;YACL,eAAM,CAAC,KAAK,CAAC,uDAAuD,CAAC,CAAC;YACtE,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAC1D,EAAE,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;YAEvB,0DAA0D;YAC1D,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC1B,aAAa;gBACb,CAAC,MAAM,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAG,CAAC,CAAC;aACjC;SACF;QAED,8CAA8C;QAC9C,IAAI,CAAC,EAAE,EAAE;YACP,OAAO,IAAI,CAAC;SACb;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EACX,UAAU,EACV,OAAO,EAAE,KAAK,EACd,KAAK,GAAG,eAAO,CAAC,GAAG,GACN;QACb,eAAM,CAAC,KAAK,CAAC,UAAU,UAAU,KAAK,KAAM,KAAK,KAAK,GAAG,CAAC,CAAC;QAC3D,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CACpB,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,CAAC,UAAU,KAAK,MAAM,CAAC,UAAU;YAClC,CAAC,CAAC,YAAY,KAAK,UAAU;YAC7B,YAAY,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC;YAC5B,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAChC,CAAC;QAEF,IAAI,EAAE,EAAE;YACN,eAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;SACxC;QACD,OAAO,EAAE,IAAI,IAAI,CAAC;IACpB,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,EACb,YAAY,EACZ,YAAY,EACZ,OAAO,EACP,MAAM,EAAE,OAAO,EACf,MAAM,EAAE,UAAU,EAClB,eAAe,EACf,OAAO,GACQ;QACf,IAAI,KAAK,GAAG,OAAO,CAAC;QACpB,MAAM,IAAI,GAAG,YAAY,CAAC;QAC1B,MAAM,IAAI,GAAG,YAAY,CAAC;QAC1B,MAAM,IAAI,GAAG,IAAA,mBAAQ,EAAC,OAAO,CAAC,CAAC;QAC/B,IAAI,OAAO,EAAE;YACX,KAAK,GAAG,YAAY,GAAG,KAAK,CAAC;SAC9B;QAED,eAAM,CAAC,KAAK,CAAC,0BAA0B,KAAK,KAAK,IAAI,OAAO,IAAI,GAAG,CAAC,CAAC;QACrE,IAAI;YACF,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;gBACtC,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBACtD,CAAC,CAAC,EAAE,CAAC;YACP,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE;gBACnD,IAAI;gBACJ,IAAI;gBACJ,KAAK;gBACL,IAAI;gBACJ,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,YAAE,CAAC,MAAM,CAAC;aACjC,CAAC,CAAC;YAEH,IAAI,eAAe,EAAE,oBAAoB,EAAE;gBACzC,IAAI,gBAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;oBAC1C,IAAI;wBACF,MAAM,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,EAAE;4BAClD,+BAA+B;4BAC/B,EAAE,EAAE,MAAM,CAAC,WAAW;4BACtB,yBAAyB,EAAE,IAAI;yBAChC,CAAC,CAAC;wBAEH,eAAM,CAAC,KAAK,CACV,EAAE,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,EACxB,iCAAiC,CAClC,CAAC;qBACH;oBAAC,OAAO,GAAG,EAAE;wBACZ,eAAM,CAAC,IAAI,CACT,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,EAC7B,8BAA8B,CAC/B,CAAC;qBACH;iBACF;qBAAM;oBACL,eAAM,CAAC,KAAK,CACV,EAAE,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,EACxB,sFAAsF,CACvF,CAAC;iBACH;aACF;YAED,MAAM,EAAE,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,EAAE,EAAE;gBACP,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;aAC7D;YACD,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC1B,CAAC,MAAM,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAChC;YAED,OAAO,EAAE,CAAC;SACX;QAAC,OAAO,GAAG,EAAE;YACZ,kHAAkH;YAClH,+GAA+G;YAC/G,gHAAgH;YAChH,4EAA4E;YAC5E,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;gBAC1B,eAAM,CAAC,IAAI,CACT,2EAA2E,KAAK,KAAK,YAAY,GAAG,CACrG,CAAC;gBAEF,+EAA+E;gBAC/E,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;gBACrB,MAAM,EAAE,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC;oBAC/B,UAAU,EAAE,YAAY;oBACxB,KAAK,EAAE,eAAO,CAAC,IAAI;iBACpB,CAAC,CAAC;gBAEH,2GAA2G;gBAC3G,IAAI,EAAE,EAAE,UAAU,EAAE;oBAClB,IAAI,EAAE,CAAC,KAAK,KAAK,KAAK,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,KAAK,IAAA,kBAAQ,EAAC,IAAI,CAAC,EAAE;wBAC/D,eAAM,CAAC,KAAK,CACV,2CAA2C,YAAY,2BAA2B,CACnF,CAAC;wBACF,MAAM,QAAQ,CAAC,QAAQ,CAAC;4BACtB,MAAM,EAAE,EAAE,CAAC,MAAM;4BACjB,OAAO,EAAE,KAAK;4BACd,MAAM,EAAE,IAAI;yBACb,CAAC,CAAC;wBACH,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;wBACjB,EAAE,CAAC,UAAU,GAAG,IAAA,yBAAe,EAAC,IAAI,CAAC,CAAC;qBACvC;yBAAM;wBACL,eAAM,CAAC,KAAK,CACV,0CAA0C,YAAY,gBAAgB,CACvE,CAAC;qBACH;oBAED,OAAO,EAAE,CAAC;iBACX;aACF;YAED,MAAM,GAAG,CAAC;SACX;IACH,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,EACb,MAAM,EACN,OAAO,EACP,MAAM,EAAE,IAAI,EACZ,KAAK,GACU;QACf,IAAI,KAAK,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,MAAM,IAAA,iBAAS,GAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,KAAK,MAAM,CAAC,EAAE,OAAO,EAAE;YACnE,KAAK,GAAG,YAAY,GAAG,KAAK,CAAC;SAC9B;QAED,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,EAAE;YAC/C,KAAK;YACL,GAAG,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,CAAC;YACrB,GAAG,CAAC,KAAK,IAAI,EAAE,KAAK,EAAE,CAAC;SACxB,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAiB;QAC3C,IAAI;YACF,MAAM,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,EAAE;gBAC1C,EAAE,EAAE,IAAA,sBAAc,EAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,WAAW;aACnD,CAAC,CAAC;YACH,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,GAAG,EAAE;YACZ,eAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,sBAAsB,CAAC,CAAC;YACjD,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,YAAY;QACV,IAAI,MAAM,CAAC,SAAS,KAAK,IAAI,EAAE;YAC7B,MAAM,CAAC,SAAS,GAAG,MAAM;iBACtB,YAAY,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;iBACtE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACf,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC9C,eAAM,CAAC,KAAK,CAAC,aAAa,SAAS,CAAC,MAAM,SAAS,CAAC,CAAC;gBACrD,OAAO,SAAS,CAAC;YACnB,CAAC,CAAC,CAAC;SACN;QAED,OAAO,MAAM,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,MAAc,EAAE,QAAQ,GAAG,IAAI;QAC5C,IAAI;YACF,MAAM,IAAI,GAAG,CACX,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,EAAE;gBAC/C,QAAQ;aACT,CAAC,CACH,CAAC,IAAI,CAAC;YACP,OAAO;gBACL,MAAM;gBACN,IAAI;aACL,CAAC;SACH;QAAC,OAAO,GAAG,EAAE,0BAA0B,CAAC;YACvC,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,qBAAqB,CAAC,CAAC;YACrD,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,KAAa;QAC3B,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,YAAY,EAAE,CAAC;QAChD,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAC1B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAC/C,CAAC;QAEF,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC;SACb;QACD,sBAAsB;QACtB,eAAM,CAAC,KAAK,CAAC,gBAAgB,KAAK,CAAC,MAAO,EAAE,CAAC,CAAC;QAC9C,aAAa;QACb,OAAO,gBAAS,CAAC,KAAK,CAAC,MAAO,CAAC,CAAC;IAClC,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,EAChB,KAAK,EACL,UAAU,EACV,IAAI,EAAE,OAAO,EACb,MAAM,EAAE,UAAU,EAClB,YAAY,EACZ,IAAI,GACc;QAClB,eAAM,CAAC,KAAK,CAAC,eAAe,KAAK,GAAG,CAAC,CAAC;QACtC,IAAI;YACF,MAAM,IAAI,GAAG,IAAA,kBAAU,EAAC,OAAO,CAAC,CAAC;YAEjC,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,YAAY,EAAE,CAAC;YAChD,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBAClB,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC;aAC1D;YAED,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;gBACtC,CAAC,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,MAAM,CAC3D,YAAE,CAAC,MAAM,CACV;gBACH,CAAC,CAAC,SAAS,CAAC;YAEd,mDAAmD;YACnD,IAAI,MAAM,CAAC,MAAM,EAAE;gBACjB,IAAI,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC;gBAEzD,yGAAyG;gBACzG,IAAI,CAAC,WAAW,EAAE;oBAChB,IAAI,IAAI,EAAE;wBACR,eAAM,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;wBACvD,OAAO,IAAI,CAAC;qBACb;oBACD,IAAI,YAAY,EAAE;wBAChB,eAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;qBACnD;oBAED,oDAAoD;oBACpD,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;iBACzC;gBAED,6BAA6B;gBAC7B,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;oBAC1B,IAAI,KAAK,CAAC,KAAK,KAAK,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM,EAAE;wBACjE,sBAAsB;wBACtB,eAAM,CAAC,IAAI,CAAC,4BAA4B,KAAK,CAAC,MAAO,EAAE,CAAC,CAAC;wBACzD,aAAa;wBACb,MAAM,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,MAAO,CAAC,CAAC;qBAC3D;iBACF;gBAED,2CAA2C;gBAC3C,IACE,WAAW,CAAC,KAAK,KAAK,KAAK;oBAC3B,WAAW,CAAC,IAAI,KAAK,IAAI;oBACzB,WAAW,CAAC,KAAK,KAAK,MAAM,EAC5B;oBACA,eAAM,CAAC,KAAK;oBACV,sBAAsB;oBACtB,UAAU,WAAW,CAAC,MAAO,yCAAyC,CACvE,CAAC;oBACF,OAAO,IAAI,CAAC;iBACb;gBAED,2CAA2C;gBAC3C,sBAAsB;gBACtB,eAAM,CAAC,KAAK,CAAC,mBAAmB,WAAW,CAAC,MAAO,EAAE,CAAC,CAAC;gBACvD,MAAM,aAAa,GAAG,MAAM,MAAM,CAAC,WAAW,CAC5C,MAAM,CAAC,UAAU;gBACjB,aAAa;gBACb,WAAW,CAAC,MAAO,EACnB;oBACE,IAAI;oBACJ,KAAK;oBACL,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAE,WAAW,CAAC,KAAoB;iBACjE,CACF,CAAC;gBAEF,6CAA6C;gBAC7C,MAAM,gBAAgB,GAAG,CAAC,aAAa,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,GAAG,CACvD,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CACpB,CAAC;gBACF,IACE,MAAM;oBACN,CAAC,MAAM,CAAC,MAAM,KAAK,gBAAgB,CAAC,MAAM;wBACxC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;6BAC5D,MAAM,KAAK,CAAC,CAAC,EAClB;oBACA,MAAM,MAAM,CAAC,iBAAiB,CAC5B,MAAM,CAAC,UAAU;oBACjB,aAAa;oBACb,WAAW,CAAC,MAAO,EACnB;wBACE,MAAM;qBACP,CACF,CAAC;iBACH;gBAED,OAAO,SAAS,CAAC;aAClB;YAED,mCAAmC;YACnC,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE;gBACxD,IAAI;gBACJ,KAAK;gBACL,MAAM;aACP,CAAC,CAAC;YACH,eAAM,CAAC,KAAK,CAAC,sBAAsB,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;YACnD,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;YAExB,OAAO,SAAS,CAAC;SAClB;QAAC,OAAO,GAAG,EAAE;YACZ,eAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,wBAAwB,CAAC,CAAC;SAChD;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,KAAa;QACpC,eAAM,CAAC,KAAK,CAAC,sBAAsB,KAAK,GAAG,CAAC,CAAC;QAC7C,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,YAAY,EAAE,CAAC;QAChD,KAAK,MAAM,KAAK,IAAI,SAAS,EAAE;YAC7B,IAAI,KAAK,CAAC,KAAK,KAAK,MAAM,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,EAAE;gBACnD,eAAM,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,EAAE,eAAe,CAAC,CAAC;gBACxD,aAAa;gBACb,MAAM,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,MAAO,CAAC,CAAC;aAC3D;SACF;IACH,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,KAAa,EAAE,SAAiB;QAChD,eAAM,CAAC,KAAK,CAAC,kBAAkB,SAAS,gBAAgB,KAAK,EAAE,CAAC,CAAC;QACjE,MAAM,KAAK,GAAG,MAAM,iBAAiB,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,KAAK,EAAE;YACT,MAAM,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;SAC7D;aAAM;YACL,eAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,qCAAqC,CAAC,CAAC;SAC1E;IACH,CAAC;IAED,kBAAkB;QAChB,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,EAClB,MAAM,EAAE,KAAK,EACb,KAAK,EACL,OAAO,GACa;QACpB,IAAI;YACF,IAAI,IAAI,GAAG,IAAA,mBAAQ,EAAC,OAAO,CAAC,CAAC;YAC7B,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YAEvE,+CAA+C;YAC/C,IAAI,OAAO,GAAmB,IAAI,CAAC;YACnC,IAAI,KAAK,EAAE;gBACT,OAAO,GAAG,kBAAkB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACjD,IAAI,GAAG,OAAO,KAAK,OAAO,IAAI,EAAE,CAAC;aAClC;iBAAM;gBACL,OAAO,GAAG,oBAAoB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;aACnD;YAED,iFAAiF;YACjF,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,GAAG,MAAM,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;gBACrE,eAAM,CAAC,IAAI,CACT,EAAE,UAAU,EAAE,MAAM,CAAC,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,EAAE,EAC7D,eAAe,CAChB,CAAC;aACH;iBAAM,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;gBAChC,eAAM,CAAC,KAAK,CAAC,YAAY,OAAO,CAAC,EAAE,wBAAwB,CAAC,CAAC;aAC9D;iBAAM;gBACL,MAAM,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;gBAChE,eAAM,CAAC,KAAK,CACV,EAAE,UAAU,EAAE,MAAM,CAAC,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,EAAE,EAC7D,iBAAiB,CAClB,CAAC;aACH;YAED,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,GAAG,EAAE;YACZ,eAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,wBAAwB,CAAC,CAAC;YACtE,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,KAAK,CAAC,oBAAoB,CACxB,YAAwC;QAExC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,YAAY,CAAC;QACvC,MAAM,GAAG,GACP,YAAY,CAAC,IAAI,KAAK,UAAU;YAC9B,CAAC,CAAC,YAAY,CAAC,KAAK;YACpB,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC;QAC3B,eAAM,CAAC,KAAK,CAAC,qBAAqB,GAAG,SAAS,KAAK,aAAa,CAAC,CAAC;QAClE,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAEvE,IAAI,OAAO,GAAmB,IAAI,CAAC;QACnC,IAAI,YAAY,CAAC,IAAI,KAAK,UAAU,EAAE;YACpC,OAAO,GAAG,kBAAkB,CAAC,WAAW,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC;SAC/D;aAAM,IAAI,YAAY,CAAC,IAAI,KAAK,YAAY,EAAE;YAC7C,MAAM,IAAI,GAAG,IAAA,mBAAQ,EAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAC5C,OAAO,GAAG,oBAAoB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;SACnD;QAED,wDAAwD;QACxD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO;SACR;QAED,4BAA4B;QAC5B,IAAI;YACF,MAAM,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;SAC3D;QAAC,OAAO,GAAG,EAAE;YACZ,eAAM,CAAC,IAAI,CACT,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,EACpC,wBAAwB,CACzB,CAAC;SACH;IACH,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,UAAkB;QAClC,eAAM,CAAC,KAAK,CAAC,eAAe,UAAU,GAAG,CAAC,CAAC;QAC3C,MAAM,EAAE,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,eAAO,CAAC,IAAI,EAAE,CAAC,CAAC;QACtE,OAAO,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC/C,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,MAAc,EAAE,SAAmB;QACpD,eAAM,CAAC,KAAK,CACV,uBAAuB,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,MAAM,EAAE,CACpE,CAAC;QACF,MAAM,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,EAAE;YAClD,SAAS;SACV,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,MAAc,EAAE,SAAmB;QACpD,eAAM,CAAC,KAAK,CAAC,qBAAqB,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,MAAM,EAAE,CAAC,CAAC;QAC1E,IAAI,gBAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;YACzC,eAAM,CAAC,KAAK,CACV,EAAE,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE,EAC7B,oCAAoC,CACrC,CAAC;YACF,OAAO;SACR;QACD,IAAI;YACF,MAAM,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC;SAC3E;QAAC,OAAO,GAAG,EAAE;YACZ,eAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,2BAA2B,CAAC,CAAC;SACtE;IACH,CAAC;IAED,eAAe,CAAC,MAAc;QAC5B,OAAO,IAAA,uBAAa,EAAC,IAAA,kBAAU,EAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,sBAAsB;QACpB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;CACF,CAAC;AAEF,6DAA6D;AAE3D,oBAAY,GA4BV,QAAQ,eA3BV,oBAAY,GA2BV,QAAQ,eA1BV,gBAAQ,GA0BN,QAAQ,WAzBV,mBAAW,GAyBT,QAAQ,cAxBV,qBAAa,GAwBX,QAAQ,gBAvBV,4BAAoB,GAuBlB,QAAQ,uBAtBV,mBAAW,GAsBT,QAAQ,cArBV,0BAAkB,GAqBhB,QAAQ,qBApBV,iBAAS,GAoBP,QAAQ,YAnBV,cAAM,GAmBJ,QAAQ,SAlBV,mBAAW,GAkBT,QAAQ,cAjBV,uBAAe,GAiBb,QAAQ,kBAhBV,4BAAoB,GAgBlB,QAAQ,uBAfV,gBAAQ,GAeN,QAAQ,WAdV,kBAAU,GAcR,QAAQ,aAbV,mBAAW,GAaT,QAAQ,cAZV,oBAAY,GAYV,QAAQ,eAXV,aAAK,GAWH,QAAQ,QAVV,uBAAe,GAUb,QAAQ,kBATV,iBAAS,GASP,QAAQ,YARV,0BAAkB,GAQhB,QAAQ,qBAPV,gBAAQ,GAON,QAAQ,WANV,8BAAsB,GAMpB,QAAQ,yBALV,oBAAY,GAKV,QAAQ,eAJV,gBAAQ,GAIN,QAAQ,WAHV,eAAO,GAGL,QAAQ,UAFV,uBAAe,GAEb,QAAQ,kBADV,gBAAQ,GACN,QAAQ,UAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport JSON5 from 'json5';\nimport semver from 'semver';\nimport { PlatformId } from '../../../constants';\nimport {\n  REPOSITORY_ACCESS_FORBIDDEN,\n  REPOSITORY_ARCHIVED,\n  REPOSITORY_BLOCKED,\n  REPOSITORY_CHANGED,\n  REPOSITORY_EMPTY,\n  REPOSITORY_MIRRORED,\n} from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { BranchStatus, PrState, VulnerabilityAlert } from '../../../types';\nimport * as git from '../../../util/git';\nimport { setBaseUrl } from '../../../util/http/gitea';\nimport { sanitize } from '../../../util/sanitize';\nimport { ensureTrailingSlash } from '../../../util/url';\nimport { getPrBodyStruct, hashBody } from '../pr-body';\nimport type {\n  BranchStatusConfig,\n  CreatePRConfig,\n  EnsureCommentConfig,\n  EnsureCommentRemovalConfig,\n  EnsureIssueConfig,\n  FindPRConfig,\n  Issue,\n  MergePRConfig,\n  Platform,\n  PlatformParams,\n  PlatformResult,\n  Pr,\n  RepoParams,\n  RepoResult,\n  UpdatePrConfig,\n} from '../types';\nimport { smartTruncate } from '../utils/pr-body';\nimport * as helper from './gitea-helper';\nimport type {\n  CombinedCommitStatus,\n  Comment,\n  IssueState,\n  Label,\n  PR,\n  PRMergeMethod,\n  Repo,\n} from './types';\nimport {\n  getMergeMethod,\n  getRepoUrl,\n  smartLinks,\n  trimTrailingApiPath,\n} from './utils';\n\ninterface GiteaRepoConfig {\n  repository: string;\n  mergeMethod: PRMergeMethod;\n\n  prList: Promise<Pr[]> | null;\n  issueList: Promise<Issue[]> | null;\n  labelList: Promise<Label[]> | null;\n  defaultBranch: string;\n  cloneSubmodules: boolean;\n}\n\nconst DRAFT_PREFIX = 'WIP: ';\n\nconst defaults = {\n  hostType: PlatformId.Gitea,\n  endpoint: 'https://gitea.com/',\n  version: '0.0.0',\n};\n\nlet config: GiteaRepoConfig = {} as any;\nlet botUserID: number;\nlet botUserName: string;\n\nfunction toRenovateIssue(data: Issue): Issue {\n  return {\n    number: data.number,\n    state: data.state,\n    title: data.title,\n    body: data.body,\n  };\n}\n\n// TODO #7154\nfunction toRenovatePR(data: PR): Pr | null {\n  if (!data) {\n    return null;\n  }\n\n  if (\n    !data.base?.ref ||\n    !data.head?.label ||\n    !data.head?.sha ||\n    !data.head?.repo?.full_name\n  ) {\n    logger.trace(\n      `Skipping Pull Request #${data.number} due to missing base and/or head branch`\n    );\n    return null;\n  }\n\n  const createdBy = data.user?.username;\n  if (createdBy && botUserName && createdBy !== botUserName) {\n    return null;\n  }\n\n  let title = data.title;\n  let isDraft = false;\n  if (title.startsWith(DRAFT_PREFIX)) {\n    title = title.substring(DRAFT_PREFIX.length);\n    isDraft = true;\n  }\n\n  return {\n    number: data.number,\n    displayNumber: `Pull Request #${data.number}`,\n    state: data.state,\n    title,\n    isDraft,\n    bodyStruct: getPrBodyStruct(data.body),\n    sha: data.head.sha,\n    sourceBranch: data.head.label,\n    targetBranch: data.base.ref,\n    sourceRepo: data.head.repo.full_name,\n    createdAt: data.created_at,\n    cannotMergeReason: data.mergeable\n      ? undefined\n      : `pr.mergeable=\"${data.mergeable}\"`,\n    hasAssignees: !!(data.assignee?.login ?? is.nonEmptyArray(data.assignees)),\n  };\n}\n\nfunction matchesState(actual: string, expected: string): boolean {\n  if (expected === PrState.All) {\n    return true;\n  }\n  if (expected.startsWith('!')) {\n    return actual !== expected.substring(1);\n  }\n\n  return actual === expected;\n}\n\nfunction findCommentByTopic(\n  comments: Comment[],\n  topic: string\n): Comment | null {\n  return comments.find((c) => c.body.startsWith(`### ${topic}\\n\\n`)) ?? null;\n}\n\nfunction findCommentByContent(\n  comments: Comment[],\n  content: string\n): Comment | null {\n  return comments.find((c) => c.body.trim() === content) ?? null;\n}\n\nfunction getLabelList(): Promise<Label[]> {\n  if (config.labelList === null) {\n    const repoLabels = helper\n      .getRepoLabels(config.repository, {\n        useCache: false,\n      })\n      .then((labels) => {\n        logger.debug(`Retrieved ${labels.length} repo labels`);\n        return labels;\n      });\n\n    const orgLabels = helper\n      .getOrgLabels(config.repository.split('/')[0], {\n        useCache: false,\n      })\n      .then((labels) => {\n        logger.debug(`Retrieved ${labels.length} org labels`);\n        return labels;\n      })\n      .catch((err) => {\n        // Will fail if owner of repo is not org or Gitea version < 1.12\n        logger.debug(`Unable to fetch organization labels`);\n        return [] as Label[];\n      });\n\n    config.labelList = Promise.all([repoLabels, orgLabels]).then((labels) =>\n      ([] as Label[]).concat(...labels)\n    );\n  }\n\n  return config.labelList;\n}\n\nasync function lookupLabelByName(name: string): Promise<number | null> {\n  logger.debug(`lookupLabelByName(${name})`);\n  const labelList = await getLabelList();\n  return labelList.find((l) => l.name === name)?.id ?? null;\n}\n\nconst platform: Platform = {\n  async initPlatform({\n    endpoint,\n    token,\n  }: PlatformParams): Promise<PlatformResult> {\n    if (!token) {\n      throw new Error('Init: You must configure a Gitea personal access token');\n    }\n\n    if (endpoint) {\n      let baseEndpoint = trimTrailingApiPath(endpoint);\n      baseEndpoint = ensureTrailingSlash(baseEndpoint);\n      defaults.endpoint = baseEndpoint;\n    } else {\n      logger.debug('Using default Gitea endpoint: ' + defaults.endpoint);\n    }\n    setBaseUrl(defaults.endpoint);\n\n    let gitAuthor: string;\n    try {\n      const user = await helper.getCurrentUser({ token });\n      gitAuthor = `${user.full_name ?? user.username} <${user.email}>`;\n      botUserID = user.id;\n      botUserName = user.username;\n      defaults.version = await helper.getVersion({ token });\n    } catch (err) {\n      logger.debug(\n        { err },\n        'Error authenticating with Gitea. Check your token'\n      );\n      throw new Error('Init: Authentication failure');\n    }\n\n    return {\n      endpoint: defaults.endpoint,\n      gitAuthor,\n    };\n  },\n\n  async getRawFile(\n    fileName: string,\n    repoName?: string,\n    branchOrTag?: string\n  ): Promise<string | null> {\n    const repo = repoName ?? config.repository;\n    const contents = await helper.getRepoContents(repo, fileName, branchOrTag);\n    return contents.contentString ?? null;\n  },\n\n  async getJsonFile(\n    fileName: string,\n    repoName?: string,\n    branchOrTag?: string\n  ): Promise<any | null> {\n    // TODO #7154\n    const raw = (await platform.getRawFile(fileName, repoName, branchOrTag))!;\n    return JSON5.parse(raw);\n  },\n\n  async initRepo({\n    repository,\n    cloneSubmodules,\n    gitUrl,\n  }: RepoParams): Promise<RepoResult> {\n    let repo: Repo;\n\n    config = {} as any;\n    config.repository = repository;\n    config.cloneSubmodules = !!cloneSubmodules;\n\n    // Attempt to fetch information about repository\n    try {\n      repo = await helper.getRepo(repository);\n    } catch (err) {\n      logger.debug({ err }, 'Unknown Gitea initRepo error');\n      throw err;\n    }\n\n    // Ensure appropriate repository state and permissions\n    if (repo.archived) {\n      logger.debug(\n        'Repository is archived - throwing error to abort renovation'\n      );\n      throw new Error(REPOSITORY_ARCHIVED);\n    }\n    if (repo.mirror) {\n      logger.debug(\n        'Repository is a mirror - throwing error to abort renovation'\n      );\n      throw new Error(REPOSITORY_MIRRORED);\n    }\n    if (!repo.permissions.pull || !repo.permissions.push) {\n      logger.debug(\n        'Repository does not permit pull and push - throwing error to abort renovation'\n      );\n      throw new Error(REPOSITORY_ACCESS_FORBIDDEN);\n    }\n    if (repo.empty) {\n      logger.debug('Repository is empty - throwing error to abort renovation');\n      throw new Error(REPOSITORY_EMPTY);\n    }\n\n    if (repo.allow_rebase) {\n      config.mergeMethod = 'rebase';\n    } else if (repo.allow_rebase_explicit) {\n      config.mergeMethod = 'rebase-merge';\n    } else if (repo.allow_squash_merge) {\n      config.mergeMethod = 'squash';\n    } else if (repo.allow_merge_commits) {\n      config.mergeMethod = 'merge';\n    } else {\n      logger.debug(\n        'Repository has no allowed merge methods - throwing error to abort renovation'\n      );\n      throw new Error(REPOSITORY_BLOCKED);\n    }\n\n    // Determine author email and branches\n    config.defaultBranch = repo.default_branch;\n    logger.debug(`${repository} default branch = ${config.defaultBranch}`);\n\n    const url = getRepoUrl(repo, gitUrl, defaults.endpoint);\n\n    // Initialize Git storage\n    await git.initRepo({\n      ...config,\n      url,\n    });\n\n    // Reset cached resources\n    config.prList = null;\n    config.issueList = null;\n    config.labelList = null;\n\n    return {\n      defaultBranch: config.defaultBranch,\n      isFork: !!repo.fork,\n    };\n  },\n\n  async getRepos(): Promise<string[]> {\n    logger.debug('Auto-discovering Gitea repositories');\n    try {\n      const repos = await helper.searchRepos({\n        uid: botUserID,\n        archived: false,\n      });\n      return repos.map((r) => r.full_name);\n    } catch (err) {\n      logger.error({ err }, 'Gitea getRepos() error');\n      throw err;\n    }\n  },\n\n  async setBranchStatus({\n    branchName,\n    context,\n    description,\n    state,\n    url: target_url,\n  }: BranchStatusConfig): Promise<void> {\n    try {\n      // Create new status for branch commit\n      const branchCommit = git.getBranchCommit(branchName);\n      // TODO: check branchCommit\n\n      await helper.createCommitStatus(config.repository, branchCommit!, {\n        state: helper.renovateToGiteaStatusMapping[state] || 'pending',\n        context,\n        description,\n        ...(target_url && { target_url }),\n      });\n\n      // Refresh caches by re-fetching commit status for branch\n      await helper.getCombinedCommitStatus(config.repository, branchName, {\n        useCache: false,\n      });\n    } catch (err) {\n      logger.warn({ err }, 'Failed to set branch status');\n    }\n  },\n\n  async getBranchStatus(branchName: string): Promise<BranchStatus> {\n    let ccs: CombinedCommitStatus;\n    try {\n      ccs = await helper.getCombinedCommitStatus(config.repository, branchName);\n    } catch (err) {\n      if (err.statusCode === 404) {\n        logger.debug(\n          'Received 404 when checking branch status, assuming branch deletion'\n        );\n        throw new Error(REPOSITORY_CHANGED);\n      }\n\n      logger.debug('Unknown error when checking branch status');\n      throw err;\n    }\n\n    logger.debug({ ccs }, 'Branch status check result');\n    return (\n      helper.giteaToRenovateStatusMapping[ccs.worstStatus] ??\n      BranchStatus.yellow\n    );\n  },\n\n  async getBranchStatusCheck(\n    branchName: string,\n    context: string\n  ): Promise<BranchStatus | null> {\n    const ccs = await helper.getCombinedCommitStatus(\n      config.repository,\n      branchName\n    );\n    const cs = ccs.statuses.find((s) => s.context === context);\n    if (!cs) {\n      return null;\n    } // no status check exists\n    const status = helper.giteaToRenovateStatusMapping[cs.status];\n    if (status) {\n      return status;\n    }\n    logger.warn(\n      { check: cs },\n      'Could not map Gitea status value to Renovate status'\n    );\n    return BranchStatus.yellow;\n  },\n\n  getPrList(): Promise<Pr[]> {\n    if (config.prList === null) {\n      config.prList = helper\n        .searchPRs(\n          config.repository,\n          { state: PrState.All },\n          { useCache: false }\n        )\n        .then((prs) => {\n          const prList = prs.map(toRenovatePR).filter(is.truthy);\n          logger.debug(`Retrieved ${prList.length} Pull Requests`);\n          return prList;\n        });\n    }\n\n    return config.prList;\n  },\n\n  async getPr(number: number): Promise<Pr | null> {\n    // Search for pull request in cached list or attempt to query directly\n    const prList = await platform.getPrList();\n    let pr = prList.find((p) => p.number === number) ?? null;\n    if (pr) {\n      logger.debug('Returning from cached PRs');\n    } else {\n      logger.debug('PR not found in cached PRs - trying to fetch directly');\n      const gpr = await helper.getPR(config.repository, number);\n      pr = toRenovatePR(gpr);\n\n      // Add pull request to cache for further lookups / queries\n      if (config.prList !== null) {\n        // TODO #7154\n        (await config.prList).push(pr!);\n      }\n    }\n\n    // Abort and return null if no match was found\n    if (!pr) {\n      return null;\n    }\n\n    return pr;\n  },\n\n  async findPr({\n    branchName,\n    prTitle: title,\n    state = PrState.All,\n  }: FindPRConfig): Promise<Pr | null> {\n    logger.debug(`findPr(${branchName}, ${title!}, ${state})`);\n    const prList = await platform.getPrList();\n    const pr = prList.find(\n      (p) =>\n        p.sourceRepo === config.repository &&\n        p.sourceBranch === branchName &&\n        matchesState(p.state, state) &&\n        (!title || p.title === title)\n    );\n\n    if (pr) {\n      logger.debug(`Found PR #${pr.number}`);\n    }\n    return pr ?? null;\n  },\n\n  async createPr({\n    sourceBranch,\n    targetBranch,\n    prTitle,\n    prBody: rawBody,\n    labels: labelNames,\n    platformOptions,\n    draftPR,\n  }: CreatePRConfig): Promise<Pr> {\n    let title = prTitle;\n    const base = targetBranch;\n    const head = sourceBranch;\n    const body = sanitize(rawBody);\n    if (draftPR) {\n      title = DRAFT_PREFIX + title;\n    }\n\n    logger.debug(`Creating pull request: ${title} (${head} => ${base})`);\n    try {\n      const labels = Array.isArray(labelNames)\n        ? await Promise.all(labelNames.map(lookupLabelByName))\n        : [];\n      const gpr = await helper.createPR(config.repository, {\n        base,\n        head,\n        title,\n        body,\n        labels: labels.filter(is.number),\n      });\n\n      if (platformOptions?.usePlatformAutomerge) {\n        if (semver.gte(defaults.version, '1.17.0')) {\n          try {\n            await helper.mergePR(config.repository, gpr.number, {\n              // TODO: pass strategy (#16884)\n              Do: config.mergeMethod,\n              merge_when_checks_succeed: true,\n            });\n\n            logger.debug(\n              { prNumber: gpr.number },\n              'Gitea-native automerge: success'\n            );\n          } catch (err) {\n            logger.warn(\n              { err, prNumber: gpr.number },\n              'Gitea-native automerge: fail'\n            );\n          }\n        } else {\n          logger.debug(\n            { prNumber: gpr.number },\n            'Gitea-native automerge: not supported on this version of Gitea. Use 1.17.0 or newer.'\n          );\n        }\n      }\n\n      const pr = toRenovatePR(gpr);\n      if (!pr) {\n        throw new Error('Can not parse newly created Pull Request');\n      }\n      if (config.prList !== null) {\n        (await config.prList).push(pr);\n      }\n\n      return pr;\n    } catch (err) {\n      // When the user manually deletes a branch from Renovate, the PR remains but is no longer linked to any branch. In\n      // the most recent versions of Gitea, the PR gets automatically closed when that happens, but older versions do\n      // not handle this properly and keep the PR open. As pushing a branch with the same name resurrects the PR, this\n      // would cause a HTTP 409 conflict error, which we hereby gracefully handle.\n      if (err.statusCode === 409) {\n        logger.warn(\n          `Attempting to gracefully recover from 409 Conflict response in createPr(${title}, ${sourceBranch})`\n        );\n\n        // Refresh cached PR list and search for pull request with matching information\n        config.prList = null;\n        const pr = await platform.findPr({\n          branchName: sourceBranch,\n          state: PrState.Open,\n        });\n\n        // If a valid PR was found, return and gracefully recover from the error. Otherwise, abort and throw error.\n        if (pr?.bodyStruct) {\n          if (pr.title !== title || pr.bodyStruct.hash !== hashBody(body)) {\n            logger.debug(\n              `Recovered from 409 Conflict, but PR for ${sourceBranch} is outdated. Updating...`\n            );\n            await platform.updatePr({\n              number: pr.number,\n              prTitle: title,\n              prBody: body,\n            });\n            pr.title = title;\n            pr.bodyStruct = getPrBodyStruct(body);\n          } else {\n            logger.debug(\n              `Recovered from 409 Conflict and PR for ${sourceBranch} is up-to-date`\n            );\n          }\n\n          return pr;\n        }\n      }\n\n      throw err;\n    }\n  },\n\n  async updatePr({\n    number,\n    prTitle,\n    prBody: body,\n    state,\n  }: UpdatePrConfig): Promise<void> {\n    let title = prTitle;\n    if ((await getPrList()).find((pr) => pr.number === number)?.isDraft) {\n      title = DRAFT_PREFIX + title;\n    }\n\n    await helper.updatePR(config.repository, number, {\n      title,\n      ...(body && { body }),\n      ...(state && { state }),\n    });\n  },\n\n  async mergePr({ id, strategy }: MergePRConfig): Promise<boolean> {\n    try {\n      await helper.mergePR(config.repository, id, {\n        Do: getMergeMethod(strategy) ?? config.mergeMethod,\n      });\n      return true;\n    } catch (err) {\n      logger.warn({ err, id }, 'Merging of PR failed');\n      return false;\n    }\n  },\n\n  getIssueList(): Promise<Issue[]> {\n    if (config.issueList === null) {\n      config.issueList = helper\n        .searchIssues(config.repository, { state: 'all' }, { useCache: false })\n        .then((issues) => {\n          const issueList = issues.map(toRenovateIssue);\n          logger.debug(`Retrieved ${issueList.length} Issues`);\n          return issueList;\n        });\n    }\n\n    return config.issueList;\n  },\n\n  async getIssue(number: number, useCache = true): Promise<Issue | null> {\n    try {\n      const body = (\n        await helper.getIssue(config.repository, number, {\n          useCache,\n        })\n      ).body;\n      return {\n        number,\n        body,\n      };\n    } catch (err) /* istanbul ignore next */ {\n      logger.debug({ err, number }, 'Error getting issue');\n      return null;\n    }\n  },\n\n  async findIssue(title: string): Promise<Issue | null> {\n    const issueList = await platform.getIssueList();\n    const issue = issueList.find(\n      (i) => i.state === 'open' && i.title === title\n    );\n\n    if (!issue) {\n      return null;\n    }\n    // TODO: types (#7154)\n    logger.debug(`Found Issue #${issue.number!}`);\n    // TODO #7154\n    return getIssue!(issue.number!);\n  },\n\n  async ensureIssue({\n    title,\n    reuseTitle,\n    body: content,\n    labels: labelNames,\n    shouldReOpen,\n    once,\n  }: EnsureIssueConfig): Promise<'updated' | 'created' | null> {\n    logger.debug(`ensureIssue(${title})`);\n    try {\n      const body = smartLinks(content);\n\n      const issueList = await platform.getIssueList();\n      let issues = issueList.filter((i) => i.title === title);\n      if (!issues.length) {\n        issues = issueList.filter((i) => i.title === reuseTitle);\n      }\n\n      const labels = Array.isArray(labelNames)\n        ? (await Promise.all(labelNames.map(lookupLabelByName))).filter(\n            is.number\n          )\n        : undefined;\n\n      // Update any matching issues which currently exist\n      if (issues.length) {\n        let activeIssue = issues.find((i) => i.state === 'open');\n\n        // If no active issue was found, decide if it shall be skipped, re-opened or updated without state change\n        if (!activeIssue) {\n          if (once) {\n            logger.debug('Issue already closed - skipping update');\n            return null;\n          }\n          if (shouldReOpen) {\n            logger.debug('Reopening previously closed Issue');\n          }\n\n          // Pick the last issue in the list as the active one\n          activeIssue = issues[issues.length - 1];\n        }\n\n        // Close any duplicate issues\n        for (const issue of issues) {\n          if (issue.state === 'open' && issue.number !== activeIssue.number) {\n            // TODO: types (#7154)\n            logger.warn(`Closing duplicate Issue #${issue.number!}`);\n            // TODO #7154\n            await helper.closeIssue(config.repository, issue.number!);\n          }\n        }\n\n        // Check if issue has already correct state\n        if (\n          activeIssue.title === title &&\n          activeIssue.body === body &&\n          activeIssue.state === 'open'\n        ) {\n          logger.debug(\n            // TODO: types (#7154)\n            `Issue #${activeIssue.number!} is open and up to date - nothing to do`\n          );\n          return null;\n        }\n\n        // Update issue body and re-open if enabled\n        // TODO: types (#7154)\n        logger.debug(`Updating Issue #${activeIssue.number!}`);\n        const existingIssue = await helper.updateIssue(\n          config.repository,\n          // TODO #7154\n          activeIssue.number!,\n          {\n            body,\n            title,\n            state: shouldReOpen ? 'open' : (activeIssue.state as IssueState),\n          }\n        );\n\n        // Test whether the issues need to be updated\n        const existingLabelIds = (existingIssue.labels ?? []).map(\n          (label) => label.id\n        );\n        if (\n          labels &&\n          (labels.length !== existingLabelIds.length ||\n            labels.filter((labelId) => !existingLabelIds.includes(labelId))\n              .length !== 0)\n        ) {\n          await helper.updateIssueLabels(\n            config.repository,\n            // TODO #7154\n            activeIssue.number!,\n            {\n              labels,\n            }\n          );\n        }\n\n        return 'updated';\n      }\n\n      // Create new issue and reset cache\n      const issue = await helper.createIssue(config.repository, {\n        body,\n        title,\n        labels,\n      });\n      logger.debug(`Created new Issue #${issue.number}`);\n      config.issueList = null;\n\n      return 'created';\n    } catch (err) {\n      logger.warn({ err }, 'Could not ensure issue');\n    }\n\n    return null;\n  },\n\n  async ensureIssueClosing(title: string): Promise<void> {\n    logger.debug(`ensureIssueClosing(${title})`);\n    const issueList = await platform.getIssueList();\n    for (const issue of issueList) {\n      if (issue.state === 'open' && issue.title === title) {\n        logger.debug({ number: issue.number }, 'Closing issue');\n        // TODO #7154\n        await helper.closeIssue(config.repository, issue.number!);\n      }\n    }\n  },\n\n  async deleteLabel(issue: number, labelName: string): Promise<void> {\n    logger.debug(`Deleting label ${labelName} from Issue #${issue}`);\n    const label = await lookupLabelByName(labelName);\n    if (label) {\n      await helper.unassignLabel(config.repository, issue, label);\n    } else {\n      logger.warn({ issue, labelName }, 'Failed to lookup label for deletion');\n    }\n  },\n\n  getRepoForceRebase(): Promise<boolean> {\n    return Promise.resolve(false);\n  },\n\n  async ensureComment({\n    number: issue,\n    topic,\n    content,\n  }: EnsureCommentConfig): Promise<boolean> {\n    try {\n      let body = sanitize(content);\n      const commentList = await helper.getComments(config.repository, issue);\n\n      // Search comment by either topic or exact body\n      let comment: Comment | null = null;\n      if (topic) {\n        comment = findCommentByTopic(commentList, topic);\n        body = `### ${topic}\\n\\n${body}`;\n      } else {\n        comment = findCommentByContent(commentList, body);\n      }\n\n      // Create a new comment if no match has been found, otherwise update if necessary\n      if (!comment) {\n        comment = await helper.createComment(config.repository, issue, body);\n        logger.info(\n          { repository: config.repository, issue, comment: comment.id },\n          'Comment added'\n        );\n      } else if (comment.body === body) {\n        logger.debug(`Comment #${comment.id} is already up-to-date`);\n      } else {\n        await helper.updateComment(config.repository, comment.id, body);\n        logger.debug(\n          { repository: config.repository, issue, comment: comment.id },\n          'Comment updated'\n        );\n      }\n\n      return true;\n    } catch (err) {\n      logger.warn({ err, issue, subject: topic }, 'Error ensuring comment');\n      return false;\n    }\n  },\n\n  async ensureCommentRemoval(\n    deleteConfig: EnsureCommentRemovalConfig\n  ): Promise<void> {\n    const { number: issue } = deleteConfig;\n    const key =\n      deleteConfig.type === 'by-topic'\n        ? deleteConfig.topic\n        : deleteConfig.content;\n    logger.debug(`Ensuring comment \"${key}\" in #${issue} is removed`);\n    const commentList = await helper.getComments(config.repository, issue);\n\n    let comment: Comment | null = null;\n    if (deleteConfig.type === 'by-topic') {\n      comment = findCommentByTopic(commentList, deleteConfig.topic);\n    } else if (deleteConfig.type === 'by-content') {\n      const body = sanitize(deleteConfig.content);\n      comment = findCommentByContent(commentList, body);\n    }\n\n    // Abort and do nothing if no matching comment was found\n    if (!comment) {\n      return;\n    }\n\n    // Attempt to delete comment\n    try {\n      await helper.deleteComment(config.repository, comment.id);\n    } catch (err) {\n      logger.warn(\n        { err, issue, config: deleteConfig },\n        'Error deleting comment'\n      );\n    }\n  },\n\n  async getBranchPr(branchName: string): Promise<Pr | null> {\n    logger.debug(`getBranchPr(${branchName})`);\n    const pr = await platform.findPr({ branchName, state: PrState.Open });\n    return pr ? platform.getPr(pr.number) : null;\n  },\n\n  async addAssignees(number: number, assignees: string[]): Promise<void> {\n    logger.debug(\n      `Updating assignees '${assignees?.join(', ')}' on Issue #${number}`\n    );\n    await helper.updateIssue(config.repository, number, {\n      assignees,\n    });\n  },\n\n  async addReviewers(number: number, reviewers: string[]): Promise<void> {\n    logger.debug(`Adding reviewers '${reviewers?.join(', ')}' to #${number}`);\n    if (semver.lt(defaults.version, '1.14.0')) {\n      logger.debug(\n        { version: defaults.version },\n        'Adding reviewer not yet supported.'\n      );\n      return;\n    }\n    try {\n      await helper.requestPrReviewers(config.repository, number, { reviewers });\n    } catch (err) {\n      logger.warn({ err, number, reviewers }, 'Failed to assign reviewer');\n    }\n  },\n\n  massageMarkdown(prBody: string): string {\n    return smartTruncate(smartLinks(prBody), 1000000);\n  },\n\n  getVulnerabilityAlerts(): Promise<VulnerabilityAlert[]> {\n    return Promise.resolve([]);\n  },\n};\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nexport const {\n  addAssignees,\n  addReviewers,\n  createPr,\n  deleteLabel,\n  ensureComment,\n  ensureCommentRemoval,\n  ensureIssue,\n  ensureIssueClosing,\n  findIssue,\n  findPr,\n  getBranchPr,\n  getBranchStatus,\n  getBranchStatusCheck,\n  getIssue,\n  getRawFile,\n  getJsonFile,\n  getIssueList,\n  getPr,\n  massageMarkdown,\n  getPrList,\n  getRepoForceRebase,\n  getRepos,\n  getVulnerabilityAlerts,\n  initPlatform,\n  initRepo,\n  mergePr,\n  setBranchStatus,\n  updatePr,\n} = platform;\n"]}