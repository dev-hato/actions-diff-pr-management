"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPrBodyStruct = exports.getRenovateDebugPayload = exports.hashBody = exports.prDebugDataRe = void 0;
const tslib_1 = require("tslib");
const hasha_1 = tslib_1.__importDefault(require("hasha"));
const logger_1 = require("../../logger");
const emoji_1 = require("../../util/emoji");
const regex_1 = require("../../util/regex");
const string_1 = require("../../util/string");
exports.prDebugDataRe = (0, regex_1.regEx)(/\n?<!--renovate-debug:(?<payload>.*?)-->\n?/);
function noWhitespaceOrHeadings(input) {
    return input.replace((0, regex_1.regEx)(/\r?\n|\r|\s|#/g), '');
}
const reviewableRegex = (0, regex_1.regEx)(/\s*<!-- Reviewable:start -->/);
function hashBody(body) {
    let result = body?.trim() ?? '';
    result = result.replace(exports.prDebugDataRe, '');
    const reviewableIndex = result.search(reviewableRegex);
    if (reviewableIndex > -1) {
        result = result.slice(0, reviewableIndex);
    }
    result = (0, emoji_1.stripEmojis)(result);
    result = noWhitespaceOrHeadings(result);
    result = (0, hasha_1.default)(result, { algorithm: 'sha256' });
    return result;
}
exports.hashBody = hashBody;
function isRebaseRequested(body) {
    return !!body?.includes(`- [x] <!-- rebase-check -->`);
}
function getRenovateDebugPayload(body) {
    const match = exports.prDebugDataRe.exec(body);
    return match?.groups?.payload;
}
exports.getRenovateDebugPayload = getRenovateDebugPayload;
function getPrBodyStruct(input) {
    const body = input ?? '';
    const hash = hashBody(body);
    const result = { hash };
    const rebaseRequested = isRebaseRequested(body);
    if (rebaseRequested) {
        result.rebaseRequested = rebaseRequested;
    }
    const debugPayload = getRenovateDebugPayload(body);
    if (debugPayload) {
        try {
            result.debugData = JSON.parse((0, string_1.fromBase64)(debugPayload));
        }
        catch (e) {
            logger_1.logger.warn('Unable to read and parse debugData from the PR');
        }
    }
    return result;
}
exports.getPrBodyStruct = getPrBodyStruct;
//# sourceMappingURL=pr-body.js.map