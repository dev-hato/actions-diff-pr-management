{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/ivy/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RangeStrategy } from '../../../types/versioning';\nimport maven from '../maven';\nimport {\n  TYPE_QUALIFIER,\n  autoExtendMavenRange,\n  isSubversion,\n  tokenize,\n} from '../maven/compare';\nimport type { NewValueConfig, VersioningApi } from '../types';\nimport {\n  LATEST_REGEX,\n  REV_TYPE_LATEST,\n  REV_TYPE_SUBREV,\n  parseDynamicRevision,\n} from './parse';\n\nexport const id = 'ivy';\nexport const displayName = 'Ivy';\nexport const urls = ['https://ant.apache.org/ivy/'];\nexport const supportsRanges = true;\nexport const supportedRangeStrategies: RangeStrategy[] = [\n  'bump',\n  'widen',\n  'pin',\n  'replace',\n];\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst {\n  equals,\n  getMajor,\n  getMinor,\n  getPatch,\n  isGreaterThan,\n  isStable,\n  matches: mavenMatches,\n  sortVersions,\n} = maven;\n\nfunction isValid(str: string): boolean {\n  if (!str) {\n    return false;\n  }\n  return maven.isVersion(str) || !!parseDynamicRevision(str);\n}\n\nfunction isVersion(str: string): boolean {\n  if (!str || LATEST_REGEX.test(str)) {\n    return false;\n  }\n  return maven.isVersion(str);\n}\n\nfunction matches(a: string, b: string): boolean {\n  if (!a || !b) {\n    return false;\n  }\n  const dynamicRevision = parseDynamicRevision(b);\n  if (!dynamicRevision) {\n    return equals(a, b);\n  }\n  const { type, value } = dynamicRevision;\n\n  if (type === REV_TYPE_LATEST) {\n    if (!value) {\n      return true;\n    }\n    const tokens = tokenize(a);\n    if (tokens.length) {\n      const token = tokens[tokens.length - 1];\n      if (token.type === TYPE_QUALIFIER) {\n        return token.val.toLowerCase() === value;\n      }\n    }\n    return false;\n  }\n\n  if (type === REV_TYPE_SUBREV) {\n    return isSubversion(value, a);\n  }\n\n  return mavenMatches(a, value);\n}\n\nfunction getSatisfyingVersion(\n  versions: string[],\n  range: string\n): string | null {\n  return versions.reduce((result: string | null, version) => {\n    if (matches(version, range)) {\n      if (!result) {\n        return version;\n      }\n      if (isGreaterThan(version, result)) {\n        return version;\n      }\n    }\n    return result;\n  }, null);\n}\n\nfunction getNewValue({\n  currentValue,\n  rangeStrategy,\n  newVersion,\n}: NewValueConfig): string | null {\n  if (isVersion(currentValue) || rangeStrategy === 'pin') {\n    return newVersion;\n  }\n  return autoExtendMavenRange(currentValue, newVersion);\n}\n\nfunction isCompatible(version: string): boolean {\n  return isVersion(version);\n}\n\nfunction isSingleVersion(version: string): boolean {\n  return isVersion(version);\n}\n\nexport const api: VersioningApi = {\n  equals,\n  getMajor,\n  getMinor,\n  getPatch,\n  isCompatible,\n  isGreaterThan,\n  isSingleVersion,\n  isStable,\n  isValid,\n  isVersion,\n  matches,\n  getSatisfyingVersion,\n  minSatisfyingVersion: getSatisfyingVersion,\n  getNewValue,\n  sortVersions,\n};\n\nexport default api;\n"]}