{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/hashicorp/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RangeStrategy } from '../../../types/versioning';\nimport { regEx } from '../../../util/regex';\nimport { api as npm } from '../npm';\nimport type { NewValueConfig, VersioningApi } from '../types';\n\nexport const id = 'hashicorp';\nexport const displayName = 'Hashicorp';\nexport const urls = [\n  'https://www.terraform.io/docs/configuration/terraform.html#specifying-a-required-terraform-version',\n];\nexport const supportsRanges = true;\nexport const supportedRangeStrategies: RangeStrategy[] = [\n  'bump',\n  'widen',\n  'pin',\n  'replace',\n];\n\nfunction hashicorp2npm(input: string): string {\n  // The only case incompatible with semver is a \"short\" ~>, e.g. ~> 1.2\n  return input.replace(regEx(/~>(\\s*\\d+\\.\\d+$)/), '^$1').replace(',', '');\n}\n\nfunction isLessThanRange(version: string, range: string): boolean {\n  return !!npm.isLessThanRange?.(hashicorp2npm(version), hashicorp2npm(range));\n}\n\nexport const isValid = (input: string): boolean =>\n  !!input && npm.isValid(hashicorp2npm(input));\n\nconst matches = (version: string, range: string): boolean =>\n  npm.matches(hashicorp2npm(version), hashicorp2npm(range));\n\nfunction getSatisfyingVersion(\n  versions: string[],\n  range: string\n): string | null {\n  return npm.getSatisfyingVersion(\n    versions.map(hashicorp2npm),\n    hashicorp2npm(range)\n  );\n}\n\nfunction minSatisfyingVersion(\n  versions: string[],\n  range: string\n): string | null {\n  return npm.minSatisfyingVersion(\n    versions.map(hashicorp2npm),\n    hashicorp2npm(range)\n  );\n}\n\nfunction getNewValue({\n  currentValue,\n  rangeStrategy,\n  currentVersion,\n  newVersion,\n}: NewValueConfig): string | null {\n  if (['replace', 'update-lockfile'].includes(rangeStrategy)) {\n    const minor = npm.getMinor(newVersion);\n    const major = npm.getMajor(newVersion);\n    if (regEx(/~>\\s*0\\.\\d+/).test(currentValue) && major === 0 && minor) {\n      const testFullVersion = regEx(/(~>\\s*0\\.)(\\d+)\\.\\d$/);\n      let replaceValue = '';\n      if (testFullVersion.test(currentValue)) {\n        replaceValue = `$<prefix>${minor}.0`;\n      } else {\n        replaceValue = `$<prefix>${minor}$<suffix>`;\n      }\n      return currentValue.replace(\n        regEx(`(?<prefix>~>\\\\s*0\\\\.)\\\\d+(?<suffix>.*)$`),\n        replaceValue\n      );\n    }\n    // handle special ~> 1.2 case\n    if (major && regEx(/(~>\\s*)\\d+\\.\\d+$/).test(currentValue)) {\n      return currentValue.replace(\n        regEx(`(?<prefix>~>\\\\s*)\\\\d+\\\\.\\\\d+$`),\n        `$<prefix>${major}.0`\n      );\n    }\n  }\n  return npm.getNewValue({\n    currentValue,\n    rangeStrategy,\n    currentVersion,\n    newVersion,\n  });\n}\n\nexport const api: VersioningApi = {\n  ...npm,\n  isLessThanRange,\n  isValid,\n  matches,\n  getSatisfyingVersion,\n  minSatisfyingVersion,\n  getNewValue,\n};\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nexport const { isVersion } = api;\n\nexport default api;\n"]}