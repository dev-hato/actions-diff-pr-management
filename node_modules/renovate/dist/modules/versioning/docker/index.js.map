{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/versioning/docker/index.ts"],"names":[],"mappings":";;;AAAA,+CAA4C;AAC5C,wCAAkE;AAGrD,QAAA,EAAE,GAAG,QAAQ,CAAC;AACd,QAAA,WAAW,GAAG,QAAQ,CAAC;AACvB,QAAA,IAAI,GAAG;IAClB,2DAA2D;CAC5D,CAAC;AACW,QAAA,cAAc,GAAG,KAAK,CAAC;AAEpC,MAAM,cAAc,GAAG,IAAA,aAAK,EAAC,8CAA8C,CAAC,CAAC;AAC7E,MAAM,iBAAiB,GAAG,IAAA,aAAK,EAAC,kBAAkB,CAAC,CAAC;AACpD,MAAM,cAAc,GAAG,IAAA,aAAK,EAAC,UAAU,CAAC,CAAC;AAEzC,MAAM,mBAAoB,SAAQ,8BAAoB;IAC1C,MAAM,CAAC,OAAe;QAC9B,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,IAAI,CAAC;SACb;QACD,IAAI,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACpE,OAAO,IAAI,CAAC;SACb;QACD,MAAM,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClE,MAAM,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC,GAAG,aAAa,CAAC;QAChD,MAAM,WAAW,GAAG,MAAM,EAAE,KAAK,CAAC,cAAc,CAAC,EAAE,MAAM,CAAC;QAC1D,IAAI,CAAC,WAAW,EAAE;YAChB,OAAO,IAAI,CAAC;SACb;QAED,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,WAAW,CAAC;QACjD,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC3C,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,UAAU,EAAE,CAAC;IACjE,CAAC;IAEkB,QAAQ,CAAC,OAAe,EAAE,KAAa;QACxD,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnC,qBAAqB;QACrB,IAAI,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,EAAE;YACzB,OAAO,CAAC,CAAC;SACV;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YAClC,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACjC,gCAAgC;YAChC,IAAI,KAAK,KAAK,SAAS,EAAE;gBACvB,OAAO,CAAC,CAAC;aACV;YACD,IAAI,KAAK,KAAK,SAAS,EAAE;gBACvB,OAAO,CAAC,CAAC,CAAC;aACX;YACD,IAAI,KAAK,KAAK,KAAK,EAAE;gBACnB,OAAO,KAAK,GAAG,KAAK,CAAC;aACtB;SACF;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,OAAO,CAAC,UAAU,EAAE;YAC7C,oBAAoB;YACpB,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,EAAE;gBAC7C,OAAO,CAAC,CAAC;aACV;YACD,IAAI,OAAO,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;gBAC7C,OAAO,CAAC,CAAC,CAAC;aACX;YACD,mBAAmB;YACnB,IAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,EAAE;gBAC5C,OAAO,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aAC7D;SACF;QAED,SAAS;QACT,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QACrC,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAEQ,YAAY,CAAC,OAAe,EAAE,OAAe;QACpD,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACrC,OAAO,CAAC,CAAC,CACP,OAAO;YACP,OAAO;YACP,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM;YACjC,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,OAAO,CAAC,MAAM,CAClD,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,8CAA8C;QAC9C,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC7C,CAAC;CACF;AAEY,QAAA,GAAG,GAAkB,IAAI,mBAAmB,EAAE,CAAC;AAE5D,kBAAe,WAAG,CAAC","sourcesContent":["import { regEx } from '../../../util/regex';\nimport { GenericVersion, GenericVersioningApi } from '../generic';\nimport type { VersioningApi } from '../types';\n\nexport const id = 'docker';\nexport const displayName = 'Docker';\nexport const urls = [\n  'https://docs.docker.com/engine/reference/commandline/tag/',\n];\nexport const supportsRanges = false;\n\nconst versionPattern = regEx(/^(?<version>\\d+(?:\\.\\d+)*)(?<prerelease>.*)$/);\nconst commitHashPattern = regEx(/^[a-f0-9]{7,40}$/);\nconst numericPattern = regEx(/^[0-9]+$/);\n\nclass DockerVersioningApi extends GenericVersioningApi {\n  protected _parse(version: string): GenericVersion | null {\n    if (!version) {\n      return null;\n    }\n    if (commitHashPattern.test(version) && !numericPattern.test(version)) {\n      return null;\n    }\n    const versionPieces = version.replace(regEx(/^v/), '').split('-');\n    const [prefix, ...suffixPieces] = versionPieces;\n    const matchGroups = prefix?.match(versionPattern)?.groups;\n    if (!matchGroups) {\n      return null;\n    }\n\n    const { version: ver, prerelease } = matchGroups;\n    const release = ver.split('.').map(Number);\n    return { release, suffix: suffixPieces.join('-'), prerelease };\n  }\n\n  protected override _compare(version: string, other: string): number {\n    const parsed1 = this._parse(version);\n    const parsed2 = this._parse(other);\n    // istanbul ignore if\n    if (!(parsed1 && parsed2)) {\n      return 1;\n    }\n    const length = Math.max(parsed1.release.length, parsed2.release.length);\n    for (let i = 0; i < length; i += 1) {\n      const part1 = parsed1.release[i];\n      const part2 = parsed2.release[i];\n      // shorter is bigger 2.1 > 2.1.1\n      if (part1 === undefined) {\n        return 1;\n      }\n      if (part2 === undefined) {\n        return -1;\n      }\n      if (part1 !== part2) {\n        return part1 - part2;\n      }\n    }\n    if (parsed1.prerelease !== parsed2.prerelease) {\n      // unstable is lower\n      if (!parsed1.prerelease && parsed2.prerelease) {\n        return 1;\n      }\n      if (parsed1.prerelease && !parsed2.prerelease) {\n        return -1;\n      }\n      // alphabetic order\n      if (parsed1.prerelease && parsed2.prerelease) {\n        return parsed1.prerelease.localeCompare(parsed2.prerelease);\n      }\n    }\n\n    // equals\n    const suffix1 = parsed1.suffix ?? '';\n    const suffix2 = parsed2.suffix ?? '';\n    return suffix2.localeCompare(suffix1);\n  }\n\n  override isCompatible(version: string, current: string): boolean {\n    const parsed1 = this._parse(version);\n    const parsed2 = this._parse(current);\n    return !!(\n      parsed1 &&\n      parsed2 &&\n      parsed1.suffix === parsed2.suffix &&\n      parsed1.release.length === parsed2.release.length\n    );\n  }\n\n  valueToVersion(value: string): string {\n    // Remove any suffix after '-', e.g. '-alpine'\n    return value ? value.split('-')[0] : value;\n  }\n}\n\nexport const api: VersioningApi = new DockerVersioningApi();\n\nexport default api;\n"]}