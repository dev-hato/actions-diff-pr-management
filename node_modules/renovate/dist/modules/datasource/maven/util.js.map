{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/maven/util.ts"],"names":[],"mappings":";;;AAAA,mCAA8B;AAC9B,mCAAkC;AAClC,iCAAiC;AACjC,mCAAqC;AACrC,sEAAkE;AAClE,4CAAyC;AACzC,mFAA8E;AAG9E,+CAA4C;AAC5C,yCAA2D;AAC3D,mDAAuD;AACvD,2CAA6C;AAC7C,0CAA4C;AAE5C,qCAAsC;AAOtC,SAAS,OAAO,CAAC,GAAW;IAC1B,OAAO,IAAA,cAAQ,EAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC;AACrC,CAAC;AAED,SAAS,cAAc,CAAC,MAAoB;IAC1C,MAAM,IAAI,GAAG,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;IAC/D,OAAO,OAAO,CAAC,mBAAU,CAAC,KAAK,IAAI,CAAC;AACtC,CAAC;AAED,SAAS,eAAe,CAAC,GAAyC;IAChE,OAAO,CACL,GAAG,CAAC,IAAI,KAAK,YAAY;QACzB,GAAG,CAAC,UAAU,KAAK,GAAG;QACtB,CAAC,GAAG,CAAC,UAAU,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,CAChD,CAAC;AACJ,CAAC;AAED,SAAS,WAAW,CAAC,GAAqB;IACxC,OAAO,GAAG,CAAC,IAAI,KAAK,WAAW,CAAC;AAClC,CAAC;AAED,SAAS,eAAe,CAAC,GAAyC;IAChE,OAAO,GAAG,CAAC,IAAI,KAAK,WAAW,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,CAAC;AAC5D,CAAC;AAED,SAAS,kBAAkB,CAAC,GAA2B;IACrD,OAAO,GAAG,CAAC,UAAU,KAAK,GAAG,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,CAAC;AAC1D,CAAC;AAED,SAAS,iBAAiB,CAAC,GAAqB;IAC9C,OAAO,CACL,GAAG,CAAC,IAAI,KAAK,WAAW;QACxB,GAAG,CAAC,IAAI,KAAK,8BAA8B;QAC3C,GAAG,CAAC,IAAI,KAAK,cAAc,CAC5B,CAAC;AACJ,CAAC;AAED,SAAS,sBAAsB,CAAC,GAAqB;IACnD,OAAO,GAAG,CAAC,IAAI,KAAK,0BAA0B,CAAC;AACjD,CAAC;AAEM,KAAK,UAAU,oBAAoB,CACxC,IAAU,EACV,MAAoB;IAEpB,IAAI,GAAiB,CAAC;IACtB,IAAI;QACF,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QACxC,OAAO,GAAG,CAAC;KACZ;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QACpC,IAAI,GAAG,CAAC,OAAO,KAAK,8BAAa,EAAE;YACjC,uBAAuB;YACvB,eAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,EAAE,eAAe,CAAC,CAAC;SAC9C;aAAM,IAAI,eAAe,CAAC,GAAG,CAAC,EAAE;YAC/B,eAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,EAAE,eAAe,CAAC,CAAC;SAC9C;aAAM,IAAI,WAAW,CAAC,GAAG,CAAC,EAAE;YAC3B,uBAAuB;YACvB,eAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,EAAE,wBAAwB,CAAC,CAAC;SACvD;aAAM,IAAI,kBAAkB,CAAC,GAAG,CAAC,EAAE;YAClC,eAAM,CAAC,KAAK,CACV,EAAE,SAAS,EAAE,EACb,2EAA2E,CAC5E,CAAC;SACH;aAAM,IAAI,eAAe,CAAC,GAAG,CAAC,EAAE;YAC/B,eAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,iBAAiB,CAAC,CAAC;YACpD,IAAI,cAAc,CAAC,MAAM,CAAC,EAAE;gBAC1B,MAAM,IAAI,uCAAiB,CAAC,GAAG,CAAC,CAAC;aAClC;SACF;aAAM,IAAI,iBAAiB,CAAC,GAAG,CAAC,EAAE;YACjC,uBAAuB;YACvB,eAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,EAAE,sCAAsC,CAAC,CAAC;SACrE;aAAM,IAAI,sBAAsB,CAAC,GAAG,CAAC,EAAE;YACtC,uBAAuB;YACvB,eAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,EAAE,kBAAkB,CAAC,CAAC;SACjD;aAAM;YACL,eAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,6BAA6B,CAAC,CAAC;SAChE;QACD,OAAO,EAAE,CAAC;KACX;AACH,CAAC;AAvCD,oDAuCC;AAED,SAAS,YAAY,CAAC,GAAU;IAC9B,OAAO,GAAG,CAAC,OAAO,KAAK,UAAU,IAAI,GAAG,CAAC,OAAO,KAAK,WAAW,CAAC;AACnE,CAAC;AAEM,KAAK,UAAU,kBAAkB,CAAC,MAAW;IAClD,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAE,EAAE,kCAAkC,CAAC,CAAC;IAC7E,IAAI;QACF,MAAM,KAAK,GAAG,IAAA,eAAU,EAAC,MAAM,CAAC,CAAC;QACjC,IAAI,KAAK,KAAK,IAAI,EAAE;YAClB,OAAO,IAAI,CAAC;SACb;QACD,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM,IAAA,gBAAW,GAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAE3D,qBAAqB;QACrB,IAAI,GAAG,YAAY,aAAI,EAAE;YACvB,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;SACvB;QAED,IAAI,GAAG,YAAY,iBAAQ,EAAE;YAC3B,OAAO,IAAA,wBAAc,EAAC,GAAG,CAAC,CAAC;SAC5B;KACF;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QACpC,IAAI,GAAG,CAAC,IAAI,KAAK,0BAA0B,EAAE;YAC3C,eAAM,CAAC,KAAK,CACV,EAAE,SAAS,EAAE,EACb,6GAA6G,CAC9G,CAAC;SACH;aAAM,IAAI,GAAG,CAAC,OAAO,KAAK,mBAAmB,EAAE;YAC9C,eAAM,CAAC,KAAK,CACV,EAAE,SAAS,EAAE,EACb,+DAA+D,CAChE,CAAC;SACH;aAAM,IAAI,YAAY,CAAC,GAAG,CAAC,EAAE;YAC5B,eAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,EAAE,kBAAkB,CAAC,CAAC;SACjD;aAAM;YACL,eAAM,CAAC,KAAK,CACV,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,EACnC,2BAA2B,CAC5B,CAAC;SACH;KACF;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAvCD,gDAuCC;AAED,KAAK,UAAU,iBAAiB,CAC9B,IAAU,EACV,MAAW;IAEX,IAAI;QACF,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC/C,MAAM,SAAS,GAAG,GAAG,EAAE,OAAO,EAAE,CAAC,eAAe,CAAC,CAAC;QAClD,IAAI,SAAS,EAAE;YACb,MAAM,YAAY,GAAG,IAAA,wBAAa,EAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,YAAY,EAAE;gBAChB,MAAM,WAAW,GAAG,gBAAQ,CAAC,OAAO,CAAC,YAAY,EAAE;oBACjD,IAAI,EAAE,KAAK;iBACZ,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACd,OAAO,WAAW,CAAC;aACpB;SACF;QACD,OAAO,OAAO,CAAC;KAChB;IAAC,OAAO,GAAG,EAAE;QACZ,IAAI,eAAe,CAAC,GAAG,CAAC,EAAE;YACxB,OAAO,WAAW,CAAC;SACpB;QAED,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QACpC,eAAM,CAAC,KAAK,CACV,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,CAAC,UAAU,EAAE,EACzC,qCAAqC,CACtC,CAAC;QACF,OAAO,OAAO,CAAC;KAChB;AACH,CAAC;AAEM,KAAK,UAAU,eAAe,CACnC,MAAW;IAEX,IAAI;QACF,MAAM,KAAK,GAAG,IAAA,eAAU,EAAC,MAAM,CAAC,CAAC;QACjC,IAAI,KAAK,KAAK,IAAI,EAAE;YAClB,OAAO,OAAO,CAAC;SAChB;QACD,MAAM,QAAQ,GAAG,MAAM,IAAA,gBAAW,GAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvD,IAAI,QAAQ,CAAC,YAAY,EAAE;YACzB,OAAO,WAAW,CAAC;SACpB;QACD,IAAI,QAAQ,CAAC,YAAY,EAAE;YACzB,OAAO,QAAQ,CAAC,YAAY,CAAC;SAC9B;QACD,OAAO,OAAO,CAAC;KAChB;IAAC,OAAO,GAAG,EAAE;QACZ,IAAI,YAAY,CAAC,GAAG,CAAC,EAAE;YACrB,OAAO,WAAW,CAAC;SACpB;aAAM;YACL,eAAM,CAAC,KAAK,CACV,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,EAChD,mCAAmC,CACpC,CAAC;SACH;QACD,OAAO,OAAO,CAAC;KAChB;AACH,CAAC;AA3BD,0CA2BC;AAEM,KAAK,UAAU,aAAa,CACjC,IAAU,EACV,MAAoB;IAEpB,MAAM,SAAS,GAAG,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAA,cAAQ,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACzE,IAAI,SAAS,KAAK,IAAI,EAAE;QACtB,OAAO,OAAO,CAAC;KAChB;IACD,QAAQ,SAAS,CAAC,QAAQ,EAAE;QAC1B,KAAK,OAAO,CAAC;QACb,KAAK,QAAQ;YACX,OAAO,MAAM,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAClD,KAAK,KAAK;YACR,OAAO,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC;QAC1C;YACE,eAAM,CAAC,KAAK,CACV,EAAE,GAAG,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAE,EAC1B,8CAA8C,CAC/C,CAAC;YACF,OAAO,WAAW,CAAC;KACtB;AACH,CAAC;AArBD,sCAqBC;AAED,SAAS,mBAAmB,CAAC,GAAW;IACtC,OAAO,IAAA,aAAK,EAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrC,CAAC;AAED,SAAgB,WAAW,CACzB,UAA2B,EAC3B,OAAe,EACf,IAAY;IAEZ,OAAO,IAAI,GAAG,CAAC,GAAG,UAAU,CAAC,aAAa,IAAI,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;AACjE,CAAC;AAND,kCAMC;AAEM,KAAK,UAAU,gBAAgB,CACpC,IAAU,EACV,MAAkB;IAElB,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,EAAE,CAAC;KACX;IAED,IAAI,WAAW,GAAG,KAAK,CAAC;IAExB,IAAI,UAA8B,CAAC;IACnC,IAAI,aAAkC,CAAC;IACvC,IAAI,UAA8B,CAAC;IACnC,QAAQ,MAAM,CAAC,QAAQ,EAAE;QACvB,KAAK,OAAO,CAAC;QACb,KAAK,QAAQ;YACX,CAAC;gBACC,aAAa;gBACb,IAAI,EAAE,UAAU;gBAChB,UAAU;aACX,GAAG,MAAM,oBAAoB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;YAC9C,MAAM;QACR,KAAK,KAAK;YACR,UAAU,GAAG,CAAC,MAAM,kBAAkB,CAAC,MAAM,CAAC,CAAC,IAAI,SAAS,CAAC;YAC7D,MAAM;QACR;YACE,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAE,EAAE,4BAA4B,CAAC,CAAC;YACvE,OAAO,EAAE,CAAC;KACb;IAED,IAAI,CAAC,UAAU,EAAE;QACf,eAAM,CAAC,KAAK,CACV,EAAE,GAAG,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,EACtC,oCAAoC,CACrC,CAAC;QACF,OAAO,EAAE,CAAC;KACX;IAED,IAAI,CAAC,aAAa,EAAE;QAClB,WAAW,GAAG,IAAI,CAAC;KACpB;IAED,OAAO,EAAE,WAAW,EAAE,GAAG,EAAE,IAAI,oBAAW,CAAC,UAAU,CAAC,EAAE,CAAC;AAC3D,CAAC;AA3CD,4CA2CC;AAED,SAAgB,kBAAkB,CAAC,WAAmB;IACpD,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7C,MAAM,aAAa,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,KAAK,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;IACpE,OAAO;QACL,OAAO,EAAE,WAAW;QACpB,KAAK;QACL,IAAI;QACJ,aAAa;KACd,CAAC;AACJ,CAAC;AATD,gDASC;AAED,SAAS,sBAAsB,CAAC,QAAqB;IACnD,sEAAsE;IACtE,qDAAqD;IACrD,0CAA0C;IAC1C,wFAAwF;IACxF,EAAE;IACF,sFAAsF;IACtF,4EAA4E;IAC5E,MAAM,OAAO,GAAG,QAAQ;SACrB,kBAAkB,CAAC,SAAS,CAAC;QAC9B,EAAE,GAAG,EAAE,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IAElC,MAAM,QAAQ,GAAG,QAAQ,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,CAAC;IACpE,MAAM,SAAS,GAAG,QAAQ,EAAE,UAAU,CAAC,WAAW,CAAC,EAAE,GAAG,CAAC;IACzD,MAAM,KAAK,GAAG,QAAQ,EAAE,UAAU,CAAC,aAAa,CAAC,EAAE,GAAG,CAAC;IAEvD,mEAAmE;IACnE,mFAAmF;IACnF,IAAI,CAAC,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC,KAAK,EAAE;QACpC,OAAO,IAAI,CAAC;KACb;IACD,OAAO,GAAG,OAAO,IAAI,SAAS,IAAI,KAAK,EAAE,CAAC;AAC5C,CAAC;AAED,KAAK,UAAU,sBAAsB,CACnC,IAAU,EACV,OAAe,EACf,UAA2B,EAC3B,OAAe;IAEf,kGAAkG;IAClG,iGAAiG;IACjG,MAAM,WAAW,GAAG,WAAW,CAC7B,UAAU,EACV,OAAO,EACP,GAAG,OAAO,qBAAqB,CAChC,CAAC;IAEF,MAAM,EAAE,GAAG,EAAE,aAAa,EAAE,GAAG,MAAM,gBAAgB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IACzE,IAAI,CAAC,aAAa,EAAE;QAClB,OAAO,IAAI,CAAC;KACb;IAED,OAAO,sBAAsB,CAAC,aAAa,CAAC,CAAC;AAC/C,CAAC;AAED,SAAS,iBAAiB,CAAC,OAAe;IACxC,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;QACjC,OAAO,IAAI,CAAC;KACb;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAEM,KAAK,UAAU,yBAAyB,CAC7C,IAAU,EACV,OAAe,EACf,UAA2B,EAC3B,OAAe;IAEf,IAAI,iBAAiB,CAAC,OAAO,CAAC,EAAE;QAC9B,oFAAoF;QACpF,0DAA0D;QAC1D,MAAM,WAAW,GAAG,MAAM,sBAAsB,CAC9C,IAAI,EACJ,OAAO,EACP,UAAU,EACV,OAAO,CACR,CAAC;QAEF,2FAA2F;QAC3F,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,sBAAsB;YACtB,4EAA4E;YAC5E,OAAO,GAAG,OAAO,IAAI,UAAU,CAAC,IAAI,IAAI,WAAW,MAAM,CAAC;SAC3D;KACF;IAED,sBAAsB;IACtB,4EAA4E;IAC5E,OAAO,GAAG,OAAO,IAAI,UAAU,CAAC,IAAI,IAAI,OAAO,MAAM,CAAC;AACxD,CAAC;AA3BD,8DA2BC;AAEM,KAAK,UAAU,iBAAiB,CACrC,IAAU,EACV,UAA2B,EAC3B,OAAe,EACf,OAAe,EACf,cAAc,GAAG,CAAC;IAElB,MAAM,MAAM,GAA2B,EAAE,CAAC;IAC1C,MAAM,IAAI,GAAG,MAAM,yBAAyB,CAC1C,IAAI,EACJ,OAAO,EACP,UAAU,EACV,OAAO,CACR,CAAC;IAEF,MAAM,MAAM,GAAG,WAAW,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IACtD,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,MAAM,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACjE,qBAAqB;IACrB,IAAI,CAAC,UAAU,EAAE;QACf,OAAO,MAAM,CAAC;KACf;IAED,MAAM,QAAQ,GAAG,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACjD,IAAI,QAAQ,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE;QAC9C,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;IAED,MAAM,SAAS,GAAG,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IACtD,IAAI,SAAS,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE;QAChD,MAAM,CAAC,SAAS,GAAG,SAAS;aACzB,OAAO,CAAC,IAAA,aAAK,EAAC,OAAO,CAAC,EAAE,EAAE,CAAC;aAC3B,OAAO,CAAC,IAAA,aAAK,EAAC,OAAO,CAAC,EAAE,EAAE,CAAC;aAC3B,OAAO,CAAC,IAAA,aAAK,EAAC,kBAAkB,CAAC,EAAE,qBAAqB,CAAC;aACzD,OAAO,CAAC,IAAA,aAAK,EAAC,mBAAmB,CAAC,EAAE,qBAAqB,CAAC;aAC1D,OAAO,CAAC,IAAA,aAAK,EAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;QAEhC,IAAI,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YACrC,wDAAwD;YACxD,0FAA0F;YAC1F,MAAM,CAAC,SAAS,GAAG,SAAS,MAAM,CAAC,SAAS,EAAE,CAAC;SAChD;KACF;IAED,MAAM,MAAM,GAAG,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IAC/C,IAAI,cAAc,GAAG,CAAC,IAAI,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;QAC3E,wDAAwD;QACxD,qDAAqD;QACrD,MAAM,CAAC,aAAa,EAAE,gBAAgB,EAAE,aAAa,CAAC,GAAG;YACvD,SAAS;YACT,YAAY;YACZ,SAAS;SACV,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;QAC3D,IAAI,aAAa,IAAI,gBAAgB,IAAI,aAAa,EAAE;YACtD,MAAM,eAAe,GAAG,GAAG,aAAa,IAAI,gBAAgB,EAAE,CAAC;YAC/D,MAAM,gBAAgB,GAAG,kBAAkB,CAAC,eAAe,CAAC,CAAC;YAC7D,MAAM,iBAAiB,GAAG,MAAM,iBAAiB,CAC/C,IAAI,EACJ,gBAAgB,EAChB,OAAO,EACP,aAAa,EACb,cAAc,GAAG,CAAC,CACnB,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,iBAAiB,CAAC,SAAS,EAAE;gBACpD,MAAM,CAAC,SAAS,GAAG,iBAAiB,CAAC,SAAS,CAAC;aAChD;YACD,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,iBAAiB,CAAC,QAAQ,EAAE;gBAClD,MAAM,CAAC,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC;aAC9C;SACF;KACF;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAxED,8CAwEC","sourcesContent":["import { Blob } from 'buffer';\nimport { Readable } from 'stream';\nimport { DateTime } from 'luxon';\nimport { XmlDocument } from 'xmldoc';\nimport { HOST_DISABLED } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { ExternalHostError } from '../../../types/errors/external-host-error';\nimport type { Http } from '../../../util/http';\nimport type { HttpResponse } from '../../../util/http/types';\nimport { regEx } from '../../../util/regex';\nimport { getS3Client, parseS3Url } from '../../../util/s3';\nimport { streamToString } from '../../../util/streams';\nimport { parseUrl } from '../../../util/url';\nimport { normalizeDate } from '../metadata';\nimport type { ReleaseResult } from '../types';\nimport { MAVEN_REPO } from './common';\nimport type {\n  HttpResourceCheckResult,\n  MavenDependency,\n  MavenXml,\n} from './types';\n\nfunction getHost(url: string): string | null {\n  return parseUrl(url)?.host ?? null;\n}\n\nfunction isMavenCentral(pkgUrl: URL | string): boolean {\n  const host = typeof pkgUrl === 'string' ? pkgUrl : pkgUrl.host;\n  return getHost(MAVEN_REPO) === host;\n}\n\nfunction isTemporalError(err: { code: string; statusCode: number }): boolean {\n  return (\n    err.code === 'ECONNRESET' ||\n    err.statusCode === 429 ||\n    (err.statusCode >= 500 && err.statusCode < 600)\n  );\n}\n\nfunction isHostError(err: { code: string }): boolean {\n  return err.code === 'ETIMEDOUT';\n}\n\nfunction isNotFoundError(err: { code: string; statusCode: number }): boolean {\n  return err.code === 'ENOTFOUND' || err.statusCode === 404;\n}\n\nfunction isPermissionsIssue(err: { statusCode: number }): boolean {\n  return err.statusCode === 401 || err.statusCode === 403;\n}\n\nfunction isConnectionError(err: { code: string }): boolean {\n  return (\n    err.code === 'EAI_AGAIN' ||\n    err.code === 'ERR_TLS_CERT_ALTNAME_INVALID' ||\n    err.code === 'ECONNREFUSED'\n  );\n}\n\nfunction isUnsupportedHostError(err: { name: string }): boolean {\n  return err.name === 'UnsupportedProtocolError';\n}\n\nexport async function downloadHttpProtocol(\n  http: Http,\n  pkgUrl: URL | string\n): Promise<Partial<HttpResponse>> {\n  let raw: HttpResponse;\n  try {\n    raw = await http.get(pkgUrl.toString());\n    return raw;\n  } catch (err) {\n    const failedUrl = pkgUrl.toString();\n    if (err.message === HOST_DISABLED) {\n      // istanbul ignore next\n      logger.trace({ failedUrl }, 'Host disabled');\n    } else if (isNotFoundError(err)) {\n      logger.trace({ failedUrl }, `Url not found`);\n    } else if (isHostError(err)) {\n      // istanbul ignore next\n      logger.debug({ failedUrl }, `Cannot connect to host`);\n    } else if (isPermissionsIssue(err)) {\n      logger.debug(\n        { failedUrl },\n        'Dependency lookup unauthorized. Please add authentication with a hostRule'\n      );\n    } else if (isTemporalError(err)) {\n      logger.debug({ failedUrl, err }, 'Temporary error');\n      if (isMavenCentral(pkgUrl)) {\n        throw new ExternalHostError(err);\n      }\n    } else if (isConnectionError(err)) {\n      // istanbul ignore next\n      logger.debug({ failedUrl }, 'Connection refused to maven registry');\n    } else if (isUnsupportedHostError(err)) {\n      // istanbul ignore next\n      logger.debug({ failedUrl }, 'Unsupported host');\n    } else {\n      logger.info({ failedUrl, err }, 'Unknown HTTP download error');\n    }\n    return {};\n  }\n}\n\nfunction isS3NotFound(err: Error): boolean {\n  return err.message === 'NotFound' || err.message === 'NoSuchKey';\n}\n\nexport async function downloadS3Protocol(pkgUrl: URL): Promise<string | null> {\n  logger.trace({ url: pkgUrl.toString() }, `Attempting to load S3 dependency`);\n  try {\n    const s3Url = parseS3Url(pkgUrl);\n    if (s3Url === null) {\n      return null;\n    }\n    const { Body: res } = await getS3Client().getObject(s3Url);\n\n    // istanbul ignore if\n    if (res instanceof Blob) {\n      return res.toString();\n    }\n\n    if (res instanceof Readable) {\n      return streamToString(res);\n    }\n  } catch (err) {\n    const failedUrl = pkgUrl.toString();\n    if (err.name === 'CredentialsProviderError') {\n      logger.debug(\n        { failedUrl },\n        'Dependency lookup authorization failed. Please correct AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY env vars'\n      );\n    } else if (err.message === 'Region is missing') {\n      logger.debug(\n        { failedUrl },\n        'Dependency lookup failed. Please a correct AWS_REGION env var'\n      );\n    } else if (isS3NotFound(err)) {\n      logger.trace({ failedUrl }, `S3 url not found`);\n    } else {\n      logger.debug(\n        { failedUrl, message: err.message },\n        'Unknown S3 download error'\n      );\n    }\n  }\n  return null;\n}\n\nasync function checkHttpResource(\n  http: Http,\n  pkgUrl: URL\n): Promise<HttpResourceCheckResult> {\n  try {\n    const res = await http.head(pkgUrl.toString());\n    const timestamp = res?.headers?.['last-modified'];\n    if (timestamp) {\n      const isoTimestamp = normalizeDate(timestamp);\n      if (isoTimestamp) {\n        const releaseDate = DateTime.fromISO(isoTimestamp, {\n          zone: 'UTC',\n        }).toJSDate();\n        return releaseDate;\n      }\n    }\n    return 'found';\n  } catch (err) {\n    if (isNotFoundError(err)) {\n      return 'not-found';\n    }\n\n    const failedUrl = pkgUrl.toString();\n    logger.debug(\n      { failedUrl, statusCode: err.statusCode },\n      `Can't check HTTP resource existence`\n    );\n    return 'error';\n  }\n}\n\nexport async function checkS3Resource(\n  pkgUrl: URL\n): Promise<HttpResourceCheckResult> {\n  try {\n    const s3Url = parseS3Url(pkgUrl);\n    if (s3Url === null) {\n      return 'error';\n    }\n    const response = await getS3Client().headObject(s3Url);\n    if (response.DeleteMarker) {\n      return 'not-found';\n    }\n    if (response.LastModified) {\n      return response.LastModified;\n    }\n    return 'found';\n  } catch (err) {\n    if (isS3NotFound(err)) {\n      return 'not-found';\n    } else {\n      logger.debug(\n        { pkgUrl, name: err.name, message: err.message },\n        `Can't check S3 resource existence`\n      );\n    }\n    return 'error';\n  }\n}\n\nexport async function checkResource(\n  http: Http,\n  pkgUrl: URL | string\n): Promise<HttpResourceCheckResult> {\n  const parsedUrl = typeof pkgUrl === 'string' ? parseUrl(pkgUrl) : pkgUrl;\n  if (parsedUrl === null) {\n    return 'error';\n  }\n  switch (parsedUrl.protocol) {\n    case 'http:':\n    case 'https:':\n      return await checkHttpResource(http, parsedUrl);\n    case 's3:':\n      return await checkS3Resource(parsedUrl);\n    default:\n      logger.debug(\n        { url: pkgUrl.toString() },\n        `Unsupported Maven protocol in check resource`\n      );\n      return 'not-found';\n  }\n}\n\nfunction containsPlaceholder(str: string): boolean {\n  return regEx(/\\${.*?}/g).test(str);\n}\n\nexport function getMavenUrl(\n  dependency: MavenDependency,\n  repoUrl: string,\n  path: string\n): URL {\n  return new URL(`${dependency.dependencyUrl}/${path}`, repoUrl);\n}\n\nexport async function downloadMavenXml(\n  http: Http,\n  pkgUrl: URL | null\n): Promise<MavenXml> {\n  if (!pkgUrl) {\n    return {};\n  }\n\n  let isCacheable = false;\n\n  let rawContent: string | undefined;\n  let authorization: boolean | undefined;\n  let statusCode: number | undefined;\n  switch (pkgUrl.protocol) {\n    case 'http:':\n    case 'https:':\n      ({\n        authorization,\n        body: rawContent,\n        statusCode,\n      } = await downloadHttpProtocol(http, pkgUrl));\n      break;\n    case 's3:':\n      rawContent = (await downloadS3Protocol(pkgUrl)) ?? undefined;\n      break;\n    default:\n      logger.debug({ url: pkgUrl.toString() }, `Unsupported Maven protocol`);\n      return {};\n  }\n\n  if (!rawContent) {\n    logger.debug(\n      { url: pkgUrl.toString(), statusCode },\n      `Content is not found for Maven url`\n    );\n    return {};\n  }\n\n  if (!authorization) {\n    isCacheable = true;\n  }\n\n  return { isCacheable, xml: new XmlDocument(rawContent) };\n}\n\nexport function getDependencyParts(packageName: string): MavenDependency {\n  const [group, name] = packageName.split(':');\n  const dependencyUrl = `${group.replace(regEx(/\\./g), '/')}/${name}`;\n  return {\n    display: packageName,\n    group,\n    name,\n    dependencyUrl,\n  };\n}\n\nfunction extractSnapshotVersion(metadata: XmlDocument): string | null {\n  // Parse the maven-metadata.xml for the snapshot version and determine\n  // the fixed version of the latest deployed snapshot.\n  // The metadata descriptor can be found at\n  // https://maven.apache.org/ref/3.3.3/maven-repository-metadata/repository-metadata.html\n  //\n  // Basically, we need to replace -SNAPSHOT with the artifact timestanp & build number,\n  // so for example 1.0.0-SNAPSHOT will become 1.0.0-<timestamp>-<buildNumber>\n  const version = metadata\n    .descendantWithPath('version')\n    ?.val?.replace('-SNAPSHOT', '');\n\n  const snapshot = metadata.descendantWithPath('versioning.snapshot');\n  const timestamp = snapshot?.childNamed('timestamp')?.val;\n  const build = snapshot?.childNamed('buildNumber')?.val;\n\n  // If we weren't able to parse out the required 3 version elements,\n  // return null because we can't determine the fixed version of the latest snapshot.\n  if (!version || !timestamp || !build) {\n    return null;\n  }\n  return `${version}-${timestamp}-${build}`;\n}\n\nasync function getSnapshotFullVersion(\n  http: Http,\n  version: string,\n  dependency: MavenDependency,\n  repoUrl: string\n): Promise<string | null> {\n  // To determine what actual files are available for the snapshot, first we have to fetch and parse\n  // the metadata located at http://<repo>/<group>/<artifact>/<version-SNAPSHOT>/maven-metadata.xml\n  const metadataUrl = getMavenUrl(\n    dependency,\n    repoUrl,\n    `${version}/maven-metadata.xml`\n  );\n\n  const { xml: mavenMetadata } = await downloadMavenXml(http, metadataUrl);\n  if (!mavenMetadata) {\n    return null;\n  }\n\n  return extractSnapshotVersion(mavenMetadata);\n}\n\nfunction isSnapshotVersion(version: string): boolean {\n  if (version.endsWith('-SNAPSHOT')) {\n    return true;\n  }\n  return false;\n}\n\nexport async function createUrlForDependencyPom(\n  http: Http,\n  version: string,\n  dependency: MavenDependency,\n  repoUrl: string\n): Promise<string> {\n  if (isSnapshotVersion(version)) {\n    // By default, Maven snapshots are deployed to the repository with fixed file names.\n    // Resolve the full, actual pom file name for the version.\n    const fullVersion = await getSnapshotFullVersion(\n      http,\n      version,\n      dependency,\n      repoUrl\n    );\n\n    // If we were able to resolve the version, use that, otherwise fall back to using -SNAPSHOT\n    if (fullVersion !== null) {\n      // TODO: types (#7154)\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      return `${version}/${dependency.name}-${fullVersion}.pom`;\n    }\n  }\n\n  // TODO: types (#7154)\n  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n  return `${version}/${dependency.name}-${version}.pom`;\n}\n\nexport async function getDependencyInfo(\n  http: Http,\n  dependency: MavenDependency,\n  repoUrl: string,\n  version: string,\n  recursionLimit = 5\n): Promise<Partial<ReleaseResult>> {\n  const result: Partial<ReleaseResult> = {};\n  const path = await createUrlForDependencyPom(\n    http,\n    version,\n    dependency,\n    repoUrl\n  );\n\n  const pomUrl = getMavenUrl(dependency, repoUrl, path);\n  const { xml: pomContent } = await downloadMavenXml(http, pomUrl);\n  // istanbul ignore if\n  if (!pomContent) {\n    return result;\n  }\n\n  const homepage = pomContent.valueWithPath('url');\n  if (homepage && !containsPlaceholder(homepage)) {\n    result.homepage = homepage;\n  }\n\n  const sourceUrl = pomContent.valueWithPath('scm.url');\n  if (sourceUrl && !containsPlaceholder(sourceUrl)) {\n    result.sourceUrl = sourceUrl\n      .replace(regEx(/^scm:/), '')\n      .replace(regEx(/^git:/), '')\n      .replace(regEx(/^git@github.com:/), 'https://github.com/')\n      .replace(regEx(/^git@github.com\\//), 'https://github.com/')\n      .replace(regEx(/\\.git$/), '');\n\n    if (result.sourceUrl.startsWith('//')) {\n      // most likely the result of us stripping scm:, git: etc\n      // going with prepending https: here which should result in potential information retrival\n      result.sourceUrl = `https:${result.sourceUrl}`;\n    }\n  }\n\n  const parent = pomContent.childNamed('parent');\n  if (recursionLimit > 0 && parent && (!result.sourceUrl || !result.homepage)) {\n    // if we found a parent and are missing some information\n    // trying to get the scm/homepage information from it\n    const [parentGroupId, parentArtifactId, parentVersion] = [\n      'groupId',\n      'artifactId',\n      'version',\n    ].map((k) => parent.valueWithPath(k)?.replace(/\\s+/g, ''));\n    if (parentGroupId && parentArtifactId && parentVersion) {\n      const parentDisplayId = `${parentGroupId}:${parentArtifactId}`;\n      const parentDependency = getDependencyParts(parentDisplayId);\n      const parentInformation = await getDependencyInfo(\n        http,\n        parentDependency,\n        repoUrl,\n        parentVersion,\n        recursionLimit - 1\n      );\n      if (!result.sourceUrl && parentInformation.sourceUrl) {\n        result.sourceUrl = parentInformation.sourceUrl;\n      }\n      if (!result.homepage && parentInformation.homepage) {\n        result.homepage = parentInformation.homepage;\n      }\n    }\n  }\n\n  return result;\n}\n"]}