{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/docker/index.ts"],"names":[],"mappings":";;;;AAAA,sDAAsB;AACtB,oDAA0C;AAE1C,kEAAkC;AAClC,6CAAoC;AACpC,0DAA0B;AAC1B,sEAG2C;AAC3C,4CAAyC;AAEzC,mFAA8E;AAC9E,qEAA8D;AAC9D,4EAAsD;AACtD,6CAAqD;AAMrD,iDAA8C;AAC9C,+CAA4C;AAC5C,2CAM2B;AAC3B,oDAGiC;AACjC,8CAA2C;AAE3C,qCAAqD;AACrD,mCAOiB;AAEJ,QAAA,UAAU,GAAG,yBAAyB,CAAC;AAEvC,QAAA,QAAQ,GAAG,IAAA,aAAK,EAAC,6CAA6C,CAAC,CAAC;AAE7E,SAAS,YAAY,CAAC,IAAY;IAChC,MAAM,KAAK,GAAG,IAAA,aAAK,EAAC,qBAAqB,CAAC,CAAC;IAC3C,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,CAAC;AAEM,KAAK,UAAU,cAAc,CAClC,IAAU,EACV,YAAoB,EACpB,gBAAwB,EACxB,WAAW,GAAG,GAAG,YAAY,MAAM;IAEnC,IAAI;QACF,MAAM,OAAO,GAAG;YACd,eAAe,EAAE,KAAK;YACtB,MAAM,EAAE,IAAI;SACb,CAAC;QACF,MAAM,gBAAgB,GAAG,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC;YACnD,CAAC,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC;YACtC,CAAC,CAAC,wEAAwE;gBACxE,uBAAuB;gBACvB,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAE7C,IAAI,gBAAgB,CAAC,UAAU,KAAK,GAAG,EAAE;YACvC,eAAM,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,EAAE,2BAA2B,CAAC,CAAC;YAC3D,OAAO,EAAE,CAAC;SACX;QACD,IAAI,gBAAgB,CAAC,UAAU,KAAK,GAAG,EAAE;YACvC,eAAM,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,EAAE,gBAAgB,CAAC,CAAC;YAChD,2EAA2E;YAC3E,MAAM,IAAI,KAAK,CAAC,qCAAoB,CAAC,CAAC;SACvC;QACD,IACE,gBAAgB,CAAC,UAAU,KAAK,GAAG;YACnC,CAAC,YAAE,CAAC,cAAc,CAAC,gBAAgB,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAChE;YACA,eAAM,CAAC,IAAI,CACT,EAAE,WAAW,EAAE,GAAG,EAAE,gBAAgB,EAAE,EACtC,2BAA2B,CAC5B,CAAC;YACF,OAAO,IAAI,CAAC;SACb;QAED,MAAM,kBAAkB,GAAG,IAAA,mBAAK,EAC9B,gBAAgB,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAC7C,CAAC;QAEF,MAAM,IAAI,GAA2B,SAAS,CAAC,IAAI,CAAC;YAClD,QAAQ,EAAE,gBAAgB,CAAC,EAAE;YAC7B,GAAG,EAAE,WAAW;SACjB,CAAC,CAAC;QACH,IAAI,gBAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YAC/B,eAAM,CAAC,KAAK,CACV,EAAE,YAAY,EAAE,gBAAgB,EAAE,EAClC,oCAAoC,CACrC,CAAC;YACF,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,gBAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YACrD,MAAM,IAAI,GAAG,MAAM,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACjD,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,OAAO,GAAG,EAAE,aAAa,EAAE,SAAS,IAAI,EAAE,EAAE,CAAC;aACnD;SACF;aAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;YACzC,eAAM,CAAC,KAAK,CACV,EAAE,YAAY,EAAE,gBAAgB,EAAE,EAClC,sCAAsC,CACvC,CAAC;YACF,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,CACpE,QAAQ,CACT,CAAC;YACF,IAAI,CAAC,OAAO,GAAG,EAAE,aAAa,EAAE,SAAS,IAAI,EAAE,EAAE,CAAC;SACnD;aAAM,IAAI,IAAI,CAAC,KAAK,EAAE;YACrB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC;YAC3C,eAAM,CAAC,KAAK,CACV,EAAE,YAAY,EAAE,gBAAgB,EAAE,EAClC,SAAS,QAAQ,4BAA4B,CAC9C,CAAC;YACF,IAAI,CAAC,OAAO,GAAG,EAAE,aAAa,EAAE,GAAG,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC;SAC/D;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC;QACrB,OAAO,IAAI,CAAC,QAAQ,CAAC;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC;QAElB,4DAA4D;QAC5D,8DAA8D;QAC9D,sDAAsD;QACtD,sHAAsH;QACtH,gHAAgH;QAChH,+FAA+F;QAC/F,IACE,kBAAkB,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,QAAQ;YACpD,CAAC,YAAE,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC;YAC3C,CAAC,YAAE,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC;YAC7C,IAAA,cAAQ,EAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI,EAClD;YACA,eAAM,CAAC,KAAK,CACV,EAAE,YAAY,EAAE,gBAAgB,EAAE,kBAAkB,EAAE,EACtD,oCAAoC,CACrC,CAAC;YACF,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;SAC7B;QAED,IAAI,KAAK,GAAG,cAAc,gBAAgB,OAAO,CAAC;QAClD,sFAAsF;QACtF,IACE,YAAE,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC;YAC1C,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAC7B;YACA,KAAK,GAAG,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC;SACzC;QAED,MAAM,OAAO,GAAG,GAAG,kBAAkB,CAAC,MAAM,CAAC,KAAK,YAAY,kBAAkB,CAAC,MAAM,CAAC,OAAO,UAAU,KAAK,EAAE,CAAC;QACjH,eAAM,CAAC,KAAK,CACV,EAAE,YAAY,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAC3C,iCAAiC,CAClC,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,MAAM,YAAY,GAAG,CACnB,MAAM,IAAI,CAAC,OAAO,CAChB,OAAO,EACP,IAAI,CACL,CACF,CAAC,IAAI,CAAC;QAEP,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,IAAI,YAAY,CAAC,YAAY,CAAC;QAC9D,qBAAqB;QACrB,IAAI,CAAC,KAAK,EAAE;YACV,eAAM,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;YACtD,OAAO,IAAI,CAAC;SACb;QACD,OAAO;YACL,aAAa,EAAE,UAAU,KAAK,EAAE;SACjC,CAAC;KACH;IAAC,OAAO,GAAG,EAAE,0BAA0B,CAAC;QACvC,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS,EAAE;YAC1B,6CAA6C;YAC7C,OAAO,IAAI,CAAC;SACb;QACD,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;YAC1B,eAAM,CAAC,KAAK,CACV,EAAE,YAAY,EAAE,gBAAgB,EAAE,EAClC,4BAA4B,CAC7B,CAAC;YACF,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACb;QACD,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;YAC1B,eAAM,CAAC,KAAK,CACV,EAAE,YAAY,EAAE,gBAAgB,EAAE,EAClC,uCAAuC,CACxC,CAAC;YACF,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACb;QACD,IAAI,GAAG,CAAC,IAAI,KAAK,cAAc,IAAI,YAAY,CAAC,YAAY,CAAC,EAAE;YAC7D,MAAM,IAAI,uCAAiB,CAAC,GAAG,CAAC,CAAC;SAClC;QACD,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,EAAE;YACxD,MAAM,IAAI,uCAAiB,CAAC,GAAG,CAAC,CAAC;SAClC;QACD,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,EAAE;YACjD,MAAM,IAAI,uCAAiB,CAAC,GAAG,CAAC,CAAC;SAClC;QACD,IAAI,GAAG,CAAC,OAAO,KAAK,qCAAoB,EAAE;YACxC,MAAM,GAAG,CAAC;SACX;QACD,IAAI,GAAG,CAAC,OAAO,KAAK,8BAAa,EAAE;YACjC,eAAM,CAAC,KAAK,CAAC,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG,EAAE,EAAE,eAAe,CAAC,CAAC;YACvE,OAAO,IAAI,CAAC;SACb;QACD,eAAM,CAAC,IAAI,CACT,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG,EAAE,EACvC,8BAA8B,CAC/B,CAAC;QACF,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AAzKD,wCAyKC;AAED,KAAK,UAAU,eAAe,CAC5B,MAA0B,EAC1B,IAAc;IAEd,MAAM,MAAM,GAAoB,EAAE,MAAM,EAAE,CAAC;IAC3C,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;QAClC,MAAM,CAAC,WAAW,GAAG;YACnB,WAAW,EAAE,IAAI,CAAC,QAAQ;YAC1B,eAAe,EAAE,IAAI,CAAC,QAAQ;YAC9B,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;SAChD,CAAC;KACH;IAED,MAAM,GAAG,GAAG,IAAI,gBAAG,CAAC,MAAM,CAAC,CAAC;IAC5B,IAAI;QACF,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;QACjD,MAAM,kBAAkB,GAAG,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC;QAC5E,IAAI,kBAAkB,EAAE;YACtB,OAAO,kBAAkB,CAAC;SAC3B;QACD,eAAM,CAAC,IAAI,CACT,8EAA8E,CAC/E,CAAC;KACH;IAAC,OAAO,GAAG,EAAE;QACZ,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;QAC7B,eAAM,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;KACjD;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAgB,qBAAqB,CACnC,WAAmB,EACnB,WAAmB;IAEnB,IAAI,WAAW,KAAK,kBAAU,EAAE;QAC9B,MAAM,uBAAuB,GAAG,IAAA,yBAAmB,EACjD,WAAW,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,cAAc,CAAC,EAAE,EAAE,CAAC,CAC/C,CAAC;QACF,IAAI,WAAW,CAAC,UAAU,CAAC,uBAAuB,CAAC,EAAE;YACnD,IAAI,YAAY,GAAG,IAAA,uBAAiB,EAAC,WAAW,CAAC,CAAC;YAClD,IAAI,CAAC,IAAA,aAAK,EAAC,cAAc,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;gBAC7C,YAAY,GAAG,WAAW,YAAY,EAAE,CAAC;aAC1C;YACD,IAAI,gBAAgB,GAAG,WAAW,CAAC,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;YACxE,MAAM,OAAO,GAAG,GAAG,YAAY,IAAI,gBAAgB,EAAE,CAAC;YACtD,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,cAAQ,EAAC,OAAO,CAAE,CAAC;YAChD,YAAY,GAAG,MAAM,CAAC;YACtB,gBAAgB,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACzC,OAAO;gBACL,YAAY;gBACZ,gBAAgB;aACjB,CAAC;SACH;KACF;IACD,IAAI,YAAgC,CAAC;IACrC,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;QAC1E,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;QACvB,KAAK,CAAC,KAAK,EAAE,CAAC;KACf;IACD,IAAI,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACvC,IAAI,CAAC,YAAY,EAAE;QACjB,YAAY,GAAG,WAAW,CAAC,OAAO,CAChC,mBAAmB,EACnB,yBAAyB,CAC1B,CAAC;KACH;IACD,IAAI,YAAY,KAAK,WAAW,EAAE;QAChC,YAAY,GAAG,iBAAiB,CAAC;KAClC;IACD,IAAI,CAAC,IAAA,aAAK,EAAC,cAAc,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;QAC7C,YAAY,GAAG,WAAW,YAAY,EAAE,CAAC;KAC1C;IACD,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC1B,QAAQ,EAAE,gBAAgB,CAAC,EAAE;QAC7B,GAAG,EAAE,YAAY;KAClB,CAAC,CAAC;IACH,IAAI,IAAI,EAAE,gBAAgB,EAAE;QAC1B,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;KACtD;IACD,IAAI,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC1E,gBAAgB,GAAG,UAAU,GAAG,gBAAgB,CAAC;KAClD;IACD,OAAO;QACL,YAAY;QACZ,gBAAgB;KACjB,CAAC;AACJ,CAAC;AAzDD,sDAyDC;AAED,SAAS,qBAAqB,CAAC,GAAqB;IAClD,OAAO,SAAS,GAAG,IAAA,eAAK,EAAC,GAAG,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;AACzD,CAAC;AAED,SAAgB,6BAA6B,CAC3C,gBAA8B;IAE9B,OAAO,qBAAqB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACtD,CAAC;AAJD,sEAIC;AAED,SAAgB,oBAAoB,CAAC,GAAc;IACjD,MAAM,IAAI,GAAG,GAAG,CAAC,QAAyC,CAAC;IAC3D,OAAO,CAAC,CAAC,CACP,IAAI,EAAE,UAAU,KAAK,GAAG;QACxB,IAAI,CAAC,OAAO,EAAE,CAAC,iCAAiC,CAAC;QACjD,sIAAsI;QACtI,IAAI,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,QAAQ,CAC3C,mDAAmD,CACpD,CACF,CAAC;AACJ,CAAC;AAVD,oDAUC;AAEY,QAAA,aAAa,GAAG;IAC3B,kBAAkB,EAAE,0BAA0B;IAC9C,kBAAkB,EAChB,kEAAkE;IACpE,MAAM,EAAE;QACN,WAAW,EAAE,2CAA2C;QACxD,kBAAkB,EAAE,uBAAuB;QAC3C,kBAAkB,EAChB,2EAA2E;QAC7E,KAAK,EAAE;YACL,kBAAkB,EAAE,iBAAiB;YACrC,kBAAkB,EAAE,EAAE;SACvB;KACF;IACD,GAAG,EAAE;QACH,kBAAkB,EAAE,EAAE;QACtB,SAAS,EAAE,gBAAgB;QAC3B,KAAK,EAAE;YACL,kBAAkB,EAAE,iBAAiB;YACrC,WAAW,EAAE,aAAa;SAC3B;KACF;IACD,KAAK,EAAE;QACL,kBAAkB,EAAE,6BAA6B;KAClD;CACF,CAAC;AAEF,SAAS,gBAAgB,CAAC,IAAc;IACtC,MAAM,QAAQ,GAAG,IAAI;SAClB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,YAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,YAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC1E,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,YAAgB,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAEvD,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC;AACxD,CAAC;AAED,MAAa,gBAAiB,SAAQ,uBAAU;IAO9C;QACE,KAAK,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;QALX,sBAAiB,GAAG,WAAkB,CAAC;QAEvC,wBAAmB,GAAG,CAAC,kBAAU,CAAC,CAAC;IAIrD,CAAC;IAED,6CAA6C;IACrC,KAAK,CAAC,mBAAmB,CAC/B,YAAoB,EACpB,gBAAwB,EACxB,GAAW,EACX,OAAuB,KAAK;QAE5B,eAAM,CAAC,KAAK,CACV,uBAAuB,YAAY,KAAK,gBAAgB,KAAK,GAAG,GAAG,CACpE,CAAC;QACF,IAAI;YACF,MAAM,OAAO,GAAG,MAAM,cAAc,CAClC,IAAI,CAAC,IAAI,EACT,YAAY,EACZ,gBAAgB,CACjB,CAAC;YACF,IAAI,CAAC,OAAO,EAAE;gBACZ,eAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC;aACb;YACD,OAAO,CAAC,MAAM,GAAG;gBACf,iBAAS,CAAC,cAAc;gBACxB,iBAAS,CAAC,UAAU;gBACpB,iBAAS,CAAC,aAAa;gBACvB,iBAAS,CAAC,kBAAkB;aAC7B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACb,MAAM,GAAG,GAAG,GAAG,YAAY,OAAO,gBAAgB,cAAc,GAAG,EAAE,CAAC;YACtE,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;gBAClD,OAAO;gBACP,MAAM,EAAE,IAAI;aACb,CAAC,CAAC;YACH,OAAO,gBAAgB,CAAC;SACzB;QAAC,OAAO,GAAG,EAAE,0BAA0B,CAAC;YACvC,IAAI,GAAG,YAAY,uCAAiB,EAAE;gBACpC,MAAM,GAAG,CAAC;aACX;YACD,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;gBAC1B,eAAM,CAAC,KAAK,CACV,EAAE,YAAY,EAAE,gBAAgB,EAAE,EAClC,4BAA4B,CAC7B,CAAC;gBACF,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;gBACtB,OAAO,IAAI,CAAC;aACb;YACD,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;gBAC1B,eAAM,CAAC,KAAK,CACV;oBACE,GAAG;oBACH,YAAY;oBACZ,gBAAgB;oBAChB,GAAG;iBACJ,EACD,4BAA4B,CAC7B,CAAC;gBACF,OAAO,IAAI,CAAC;aACb;YACD,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,EAAE;gBACxD,MAAM,IAAI,uCAAiB,CAAC,GAAG,CAAC,CAAC;aAClC;YACD,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,EAAE;gBACjD,MAAM,IAAI,uCAAiB,CAAC,GAAG,CAAC,CAAC;aAClC;YACD,IAAI,GAAG,CAAC,IAAI,KAAK,WAAW,EAAE;gBAC5B,eAAM,CAAC,KAAK,CACV,EAAE,YAAY,EAAE,EAChB,uDAAuD,CACxD,CAAC;gBACF,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;gBACtB,OAAO,IAAI,CAAC;aACb;YACD,eAAM,CAAC,KAAK,CACV;gBACE,GAAG;gBACH,YAAY;gBACZ,gBAAgB;gBAChB,GAAG;aACJ,EACD,0CAA0C,CAC3C,CAAC;YACF,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAEO,KAAK,CAAC,eAAe,CAC3B,QAAgB,EAChB,gBAAwB,EACxB,GAAW;QAEX,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,mBAAmB,CACrD,QAAQ,EACR,gBAAgB,EAChB,GAAG,CACJ,CAAC;QACF,iDAAiD;QACjD,0EAA0E;QAC1E,cAAc;QACd,qBAAqB;QACrB,IAAI,CAAC,gBAAgB,EAAE;YACrB,OAAO,IAAI,CAAC;SACb;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAIrC,CAAC;QACb,IAAI,QAAQ,CAAC,aAAa,KAAK,CAAC,EAAE;YAChC,eAAM,CAAC,KAAK,CACV,EAAE,QAAQ,EAAE,gBAAgB,EAAE,GAAG,EAAE,EACnC,kCAAkC,CACnC,CAAC;YACF,OAAO,IAAI,CAAC;SACb;QAED,IAAI,QAAQ,CAAC,SAAS,KAAK,iBAAS,CAAC,cAAc,EAAE;YACnD,IAAI,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE;gBAC7B,eAAM,CAAC,KAAK,CACV,EAAE,QAAQ,EAAE,gBAAgB,EAAE,GAAG,EAAE,EACnC,wCAAwC,CACzC,CAAC;gBACF,OAAO,IAAI,CAAC,eAAe,CACzB,QAAQ,EACR,gBAAgB,EAChB,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAC7B,CAAC;aACH;iBAAM;gBACL,eAAM,CAAC,KAAK,CACV,EAAE,QAAQ,EAAE,EACZ,qDAAqD,CACtD,CAAC;gBACF,OAAO,IAAI,CAAC;aACb;SACF;QAED,IACE,QAAQ,CAAC,SAAS,KAAK,iBAAS,CAAC,UAAU;YAC3C,YAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,EAClC;YACA,OAAO,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC;SAChC;QAED,0DAA0D;QAC1D,IACE,QAAQ,CAAC,SAAS,KAAK,iBAAS,CAAC,kBAAkB;YACnD,CAAC,CAAC,QAAQ,CAAC,SAAS,IAAI,IAAA,eAAM,EAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,EACtD;YACA,IAAI,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE;gBAC7B,eAAM,CAAC,KAAK,CACV,EAAE,QAAQ,EAAE,gBAAgB,EAAE,GAAG,EAAE,EACnC,yCAAyC,CAC1C,CAAC;gBACF,OAAO,IAAI,CAAC,eAAe,CACzB,QAAQ,EACR,gBAAgB,EAChB,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAC7B,CAAC;aACH;iBAAM;gBACL,eAAM,CAAC,KAAK,CACV,EAAE,QAAQ,EAAE,EACZ,sDAAsD,CACvD,CAAC;gBACF,OAAO,IAAI,CAAC;aACb;SACF;QAED,wDAAwD;QACxD,IACE,CAAC,QAAQ,CAAC,SAAS,KAAK,iBAAS,CAAC,aAAa;YAC7C,CAAC,CAAC,QAAQ,CAAC,SAAS,IAAI,IAAA,eAAM,EAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;YACtD,YAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,EAClC;YACA,OAAO,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC;SAChC;QAED,eAAM,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,EAAE,8BAA8B,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;OAKG;IAOI,KAAK,CAAC,SAAS,CACpB,YAAoB,EACpB,gBAAwB,EACxB,GAAW;QAEX,eAAM,CAAC,KAAK,CAAC,aAAa,YAAY,KAAK,gBAAgB,KAAK,GAAG,GAAG,CAAC,CAAC;QACxE,IAAI;YACF,IAAI,MAAM,GAA2B,EAAE,CAAC;YACxC,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,eAAe,CAC7C,YAAY,EACZ,gBAAgB,EAChB,GAAG,CACJ,CAAC;YACF,IAAI,CAAC,YAAY,EAAE;gBACjB,OAAO,EAAE,CAAC;aACX;YAED,MAAM,OAAO,GAAG,MAAM,cAAc,CAClC,IAAI,CAAC,IAAI,EACT,YAAY,EACZ,gBAAgB,CACjB,CAAC;YACF,6CAA6C;YAC7C,IAAI,CAAC,OAAO,EAAE;gBACZ,eAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;gBACjD,OAAO,EAAE,CAAC;aACX;YACD,MAAM,GAAG,GAAG,GAAG,YAAY,OAAO,gBAAgB,UAAU,YAAY,EAAE,CAAC;YAC3E,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;gBAC9C,OAAO;gBACP,MAAM,EAAE,IAAI;aACb,CAAC,CAAC;YACH,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YAEvD,IAAI,MAAM,EAAE;gBACV,eAAM,CAAC,KAAK,CACV;oBACE,MAAM;iBACP,EACD,0BAA0B,CAC3B,CAAC;aACH;YACD,OAAO,MAAM,CAAC;SACf;QAAC,OAAO,GAAG,EAAE,sDAAsD,CAAC;YACnE,IAAI,GAAG,YAAY,uCAAiB,EAAE;gBACpC,MAAM,GAAG,CAAC;aACX;YACD,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;gBACpD,eAAM,CAAC,KAAK,CACV,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG,EAAE,EACvC,4BAA4B,CAC7B,CAAC;aACH;iBAAM,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;gBACjC,eAAM,CAAC,IAAI,CACT;oBACE,GAAG;oBACH,YAAY;oBACZ,gBAAgB;oBAChB,GAAG;iBACJ,EACD,4BAA4B,CAC7B,CAAC;aACH;iBAAM,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,EAAE;gBAC/D,eAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,4CAA4C,CAAC,CAAC;aACpE;iBAAM,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,EAAE;gBACxD,eAAM,CAAC,KAAK,CACV;oBACE,GAAG;oBACH,YAAY;oBACZ,gBAAgB;oBAChB,GAAG;iBACJ,EACD,yCAAyC,CAC1C,CAAC;aACH;iBAAM,IACL,GAAG,CAAC,IAAI,KAAK,8BAA8B;gBAC3C,GAAG,CAAC,IAAI,KAAK,WAAW,EACxB;gBACA,eAAM,CAAC,KAAK,CACV,EAAE,YAAY,EAAE,GAAG,EAAE,EACrB,qCAAqC,CACtC,CAAC;aACH;iBAAM,IAAI,YAAY,KAAK,iBAAiB,EAAE;gBAC7C,uBAAuB;gBACvB,eAAM,CAAC,KAAK,CACV,4DAA4D,CAC7D,CAAC;aACH;iBAAM;gBACL,eAAM,CAAC,IAAI,CACT,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG,EAAE,GAAG,EAAE,EAC5C,qCAAqC,CACtC,CAAC;aACH;YACD,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAEO,KAAK,CAAC,mBAAmB,CAC/B,QAAgB,EAChB,UAAkB;QAElB,IAAI,IAAI,GAAa,EAAE,CAAC;QACxB,MAAM,KAAK,GAAG,GAAG,CAAC;QAElB,MAAM,OAAO,GAAG,CAAC,IAAY,EAAU,EAAE,CACvC,GAAG,QAAQ,sBAAsB,UAAU,eAAe,KAAK,SAAS,IAAI,sBAAsB,CAAC;QAErG,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,GAAG,GAAkB,OAAO,CAAC,IAAI,CAAC,CAAC;QACvC,OAAO,GAAG,IAAI,IAAI,IAAI,EAAE,EAAE;YAQxB,uBAAuB;YACvB,4EAA4E;YAC5E,MAAM,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAClC,GAAG,CACJ,CAAqC,CAAC;YACvC,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACtD,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC7B,IAAI,IAAI,CAAC,CAAC;YACV,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SACtD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,KAAK,CAAC,gBAAgB,CAC5B,YAAoB,EACpB,gBAAwB;QAExB,IAAI,IAAI,GAAa,EAAE,CAAC;QACxB,uDAAuD;QACvD,0IAA0I;QAC1I,MAAM,KAAK,GAAG,gBAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACzD,IAAI,GAAG,GAEI,GAAG,YAAY,IAAI,gBAAgB,gBAAgB,KAAK,EAAE,CAAC;QACtE,GAAG,GAAG,IAAA,sBAAgB,EAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACnC,MAAM,OAAO,GAAG,MAAM,cAAc,CAClC,IAAI,CAAC,IAAI,EACT,YAAY,EACZ,gBAAgB,EAChB,GAAG,CACJ,CAAC;QACF,IAAI,CAAC,OAAO,EAAE;YACZ,eAAM,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;YAC7D,OAAO,IAAI,CAAC;SACb;QACD,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,oBAAoB,GAAG,KAAK,CAAC;QACjC,GAAG;YACD,IAAI,GAAqC,CAAC;YAC1C,IAAI;gBACF,GAAG,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAqB,GAAG,EAAE;oBACrD,OAAO;oBACP,MAAM,EAAE,IAAI;iBACb,CAAC,CAAC;aACJ;YAAC,OAAO,GAAG,EAAE;gBACZ,IACE,CAAC,oBAAoB;oBACrB,GAAG,YAAY,gBAAS;oBACxB,oBAAoB,CAAC,GAAG,CAAC,EACzB;oBACA,MAAM,UAAU,GAAG,IAAI,CAAC;oBACxB,GAAG,GAAG,GAAG,YAAY,IAAI,gBAAgB,gBAAgB,UAAU,EAAE,CAAC;oBACtE,GAAG,GAAG,IAAA,sBAAgB,EAAC,GAAG,EAAE,KAAK,CAAC,CAAC;oBACnC,oBAAoB,GAAG,IAAI,CAAC;oBAC5B,SAAS;iBACV;gBACD,MAAM,GAAG,CAAC;aACX;YACD,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,MAAM,UAAU,GAAG,IAAA,qBAAe,EAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACrD,GAAG,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,aAAG,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACtE,IAAI,IAAI,CAAC,CAAC;SACX,QAAQ,GAAG,IAAI,IAAI,GAAG,EAAE,EAAE;QAC3B,OAAO,IAAI,CAAC;IACd,CAAC;IAOM,KAAK,CAAC,OAAO,CAClB,YAAoB,EACpB,gBAAwB;QAExB,IAAI;YACF,MAAM,MAAM,GAAG,IAAA,aAAK,EAAC,4CAA4C,CAAC,CAAC,IAAI,CACrE,YAAY,CACb,CAAC;YACF,IAAI,IAAqB,CAAC;YAC1B,IAAI,MAAM,EAAE;gBACV,IAAI,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;aACvE;iBAAM;gBACL,IAAI,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;aACpE;YACD,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,GAAG,EAAE,0BAA0B,CAAC;YACvC,IAAI,GAAG,YAAY,uCAAiB,EAAE;gBACpC,MAAM,GAAG,CAAC;aACX;YACD,IACE,CAAC,GAAG,CAAC,UAAU,KAAK,GAAG,IAAI,GAAG,CAAC,OAAO,KAAK,qCAAoB,CAAC;gBAChE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,EAC/B;gBACA,eAAM,CAAC,KAAK,CACV,qBAAqB,YAAY,IAAI,gBAAgB,wBAAwB,CAC9E,CAAC;gBACF,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,UAAU,GAAG,gBAAgB,CAAC,CAAC;aAClE;YACD,kBAAkB;YAClB,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,EAAE;gBACxD,eAAM,CAAC,IAAI,CACT,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG,EAAE,EACvC,4CAA4C,CAC7C,CAAC;gBACF,MAAM,IAAI,uCAAiB,CAAC,GAAG,CAAC,CAAC;aAClC;YACD,kBAAkB;YAClB,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,EAAE;gBACxD,eAAM,CAAC,IAAI,CACT,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG,EAAE,EACvC,uCAAuC,CACxC,CAAC;gBACF,MAAM,IAAI,uCAAiB,CAAC,GAAG,CAAC,CAAC;aAClC;YACD,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,EAAE;gBACjD,eAAM,CAAC,IAAI,CACT,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG,EAAE,EACvC,yCAAyC,CAC1C,CAAC;gBACF,MAAM,IAAI,uCAAiB,CAAC,GAAG,CAAC,CAAC;aAClC;YACD,MAAM,GAAG,CAAC;SACX;IACH,CAAC;IAED;;;;;;;;OAQG;IAeM,KAAK,CAAC,SAAS,CACtB,EAAE,WAAW,EAAE,WAAW,EAAqB,EAC/C,QAAiB;QAEjB,MAAM,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG,qBAAqB,CAC9D,WAAW,EACX,WAAY,CACb,CAAC;QACF,eAAM,CAAC,KAAK;QACV,sBAAsB;QACtB,4EAA4E;QAC5E,aAAa,YAAY,KAAK,gBAAgB,KAAK,QAAQ,GAAG,CAC/D,CAAC;QACF,MAAM,MAAM,GAAG,QAAQ,IAAI,QAAQ,CAAC;QACpC,IAAI,MAAM,GAAkB,IAAI,CAAC;QACjC,IAAI;YACF,IAAI,gBAAgB,GAAG,MAAM,IAAI,CAAC,mBAAmB,CACnD,YAAY,EACZ,gBAAgB,EAChB,MAAM,EACN,MAAM,CACP,CAAC;YACF,IAAI,gBAAgB,EAAE;gBACpB,IAAI,IAAA,eAAM,EAAC,uBAAuB,EAAE,gBAAgB,CAAC,OAAO,CAAC,EAAE;oBAC7D,MAAM;wBACH,gBAAgB,CAAC,OAAO,CAAC,uBAAuB,CAAY;4BAC7D,IAAI,CAAC;iBACR;qBAAM;oBACL,eAAM,CAAC,KAAK,CACV,EAAE,YAAY,EAAE,EAChB,6DAA6D,CAC9D,CAAC;oBACF,gBAAgB,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC/C,YAAY,EACZ,gBAAgB,EAChB,MAAM,CACP,CAAC;oBACF,MAAM,GAAG,6BAA6B,CAAC,gBAAiB,CAAC,CAAC;iBAC3D;gBACD,eAAM,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,EAAE,mBAAmB,CAAC,CAAC;aAC/C;SACF;QAAC,OAAO,GAAG,EAAE,0BAA0B,CAAC;YACvC,IAAI,GAAG,YAAY,uCAAiB,EAAE;gBACpC,MAAM,GAAG,CAAC;aACX;YACD,eAAM,CAAC,KAAK,CACV;gBACE,GAAG;gBACH,WAAW;gBACX,MAAM;aACP,EACD,8CAA8C,CAC/C,CAAC;SACH;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;;;OAUG;IACH,KAAK,CAAC,WAAW,CAAC,EAChB,WAAW,EACX,WAAW,GACO;QAClB,MAAM,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG,qBAAqB,CAC9D,WAAW,EACX,WAAY,CACb,CAAC;QACF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;QAChE,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC;SACb;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;QACtD,MAAM,GAAG,GAAkB;YACzB,WAAW,EAAE,YAAY;YACzB,QAAQ;SACT,CAAC;QAEF,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACvC,CAAC,CAAC,QAAQ;YACV,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAE3B,iCAAiC;QACjC,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,GAAG,CAAC;SACZ;QACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CACjC,YAAY,EACZ,gBAAgB,EAChB,SAAS,CACV,CAAC;QACF,IAAI,MAAM,EAAE;YACV,IAAI,YAAE,CAAC,cAAc,CAAC,MAAM,CAAC,oBAAW,CAAC,CAAC,EAAE;gBAC1C,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,oBAAW,CAAC,CAAC;aAClC;YACD,KAAK,MAAM,KAAK,IAAI,qBAAY,EAAE;gBAChC,IAAI,YAAE,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;oBACpC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;oBAC9B,MAAM;iBACP;aACF;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;;AAhkBe,mBAAE,GAAG,QAAQ,CAAC;AAuM9B;IANC,IAAA,iBAAK,EAAC;QACL,SAAS,EAAE,0BAA0B;QACrC,GAAG,EAAE,CAAC,YAAoB,EAAE,gBAAwB,EAAE,GAAW,EAAE,EAAE,CACnE,GAAG,YAAY,IAAI,gBAAgB,IAAI,GAAG,EAAE;QAC9C,UAAU,EAAE,EAAE;KACf,CAAC;iDAgGD;AA6FD;IALC,IAAA,iBAAK,EAAC;QACL,SAAS,EAAE,wBAAwB;QACnC,GAAG,EAAE,CAAC,YAAoB,EAAE,gBAAwB,EAAE,EAAE,CACtD,GAAG,YAAY,IAAI,gBAAgB,EAAE;KACxC,CAAC;+CAsDD;AAyBD;IAdC,IAAA,iBAAK,EAAC;QACL,SAAS,EAAE,0BAA0B;QACrC,GAAG,EAAE,CACH,EAAE,WAAW,EAAE,WAAW,EAAqB,EAC/C,QAAiB,EACjB,EAAE;YACF,MAAM,MAAM,GAAG,QAAQ,IAAI,QAAQ,CAAC;YACpC,MAAM,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG,qBAAqB,CAC9D,WAAW,EACX,WAAY,CACb,CAAC;YACF,OAAO,GAAG,YAAY,IAAI,gBAAgB,IAAI,MAAM,EAAE,CAAC;QACzD,CAAC;KACF,CAAC;iDAwDD;AAzgBH,4CAkkBC","sourcesContent":["import URL from 'url';\nimport { ECR } from '@aws-sdk/client-ecr';\nimport type { ECRClientConfig } from '@aws-sdk/client-ecr';\nimport is from '@sindresorhus/is';\nimport { parse } from 'auth-header';\nimport hasha from 'hasha';\nimport {\n  HOST_DISABLED,\n  PAGE_NOT_FOUND_ERROR,\n} from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport type { HostRule } from '../../../types';\nimport { ExternalHostError } from '../../../types/errors/external-host-error';\nimport { cache } from '../../../util/cache/package/decorator';\nimport * as hostRules from '../../../util/host-rules';\nimport { Http, HttpError } from '../../../util/http';\nimport type {\n  HttpOptions,\n  HttpResponse,\n  OutgoingHttpHeaders,\n} from '../../../util/http/types';\nimport { hasKey } from '../../../util/object';\nimport { regEx } from '../../../util/regex';\nimport {\n  ensurePathPrefix,\n  ensureTrailingSlash,\n  parseLinkHeader,\n  parseUrl,\n  trimTrailingSlash,\n} from '../../../util/url';\nimport {\n  api as dockerVersioning,\n  id as dockerVersioningId,\n} from '../../versioning/docker';\nimport { Datasource } from '../datasource';\nimport type { GetReleasesConfig, ReleaseResult } from '../types';\nimport { gitRefLabel, sourceLabels } from './common';\nimport {\n  Image,\n  ImageList,\n  MediaType,\n  OciImage,\n  OciImageList,\n  RegistryRepository,\n} from './types';\n\nexport const DOCKER_HUB = 'https://index.docker.io';\n\nexport const ecrRegex = regEx(/\\d+\\.dkr\\.ecr\\.([-a-z0-9]+)\\.amazonaws\\.com/);\n\nfunction isDockerHost(host: string): boolean {\n  const regex = regEx(/(?:^|\\.)docker\\.io$/);\n  return regex.test(host);\n}\n\nexport async function getAuthHeaders(\n  http: Http,\n  registryHost: string,\n  dockerRepository: string,\n  apiCheckUrl = `${registryHost}/v2/`\n): Promise<OutgoingHttpHeaders | null> {\n  try {\n    const options = {\n      throwHttpErrors: false,\n      noAuth: true,\n    };\n    const apiCheckResponse = apiCheckUrl.endsWith('/v2/')\n      ? await http.get(apiCheckUrl, options)\n      : // use json request, as this will be cached for tags, so it returns json\n        // TODO: add cache test\n        await http.getJson(apiCheckUrl, options);\n\n    if (apiCheckResponse.statusCode === 200) {\n      logger.debug({ apiCheckUrl }, 'No registry auth required');\n      return {};\n    }\n    if (apiCheckResponse.statusCode === 404) {\n      logger.debug({ apiCheckUrl }, 'Page Not Found');\n      // throw error up to be caught and potentially retried with library/ prefix\n      throw new Error(PAGE_NOT_FOUND_ERROR);\n    }\n    if (\n      apiCheckResponse.statusCode !== 401 ||\n      !is.nonEmptyString(apiCheckResponse.headers['www-authenticate'])\n    ) {\n      logger.warn(\n        { apiCheckUrl, res: apiCheckResponse },\n        'Invalid registry response'\n      );\n      return null;\n    }\n\n    const authenticateHeader = parse(\n      apiCheckResponse.headers['www-authenticate']\n    );\n\n    const opts: HostRule & HttpOptions = hostRules.find({\n      hostType: DockerDatasource.id,\n      url: apiCheckUrl,\n    });\n    if (ecrRegex.test(registryHost)) {\n      logger.trace(\n        { registryHost, dockerRepository },\n        `Using ecr auth for Docker registry`\n      );\n      const [, region] = ecrRegex.exec(registryHost) ?? [];\n      const auth = await getECRAuthToken(region, opts);\n      if (auth) {\n        opts.headers = { authorization: `Basic ${auth}` };\n      }\n    } else if (opts.username && opts.password) {\n      logger.trace(\n        { registryHost, dockerRepository },\n        `Using basic auth for Docker registry`\n      );\n      const auth = Buffer.from(`${opts.username}:${opts.password}`).toString(\n        'base64'\n      );\n      opts.headers = { authorization: `Basic ${auth}` };\n    } else if (opts.token) {\n      const authType = opts.authType ?? 'Bearer';\n      logger.trace(\n        { registryHost, dockerRepository },\n        `Using ${authType} token for Docker registry`\n      );\n      opts.headers = { authorization: `${authType} ${opts.token}` };\n    }\n    delete opts.username;\n    delete opts.password;\n    delete opts.token;\n\n    // If realm isn't an url, we should directly use auth header\n    // Can happen when we get a Basic auth or some other auth type\n    // * WWW-Authenticate: Basic realm=\"Artifactory Realm\"\n    // * Www-Authenticate: Basic realm=\"https://123456789.dkr.ecr.eu-central-1.amazonaws.com/\",service=\"ecr.amazonaws.com\"\n    // * www-authenticate: Bearer realm=\"https://ghcr.io/token\",service=\"ghcr.io\",scope=\"repository:user/image:pull\"\n    // * www-authenticate: Bearer realm=\"https://auth.docker.io/token\",service=\"registry.docker.io\"\n    if (\n      authenticateHeader.scheme.toUpperCase() !== 'BEARER' ||\n      !is.string(authenticateHeader.params.realm) ||\n      !is.string(authenticateHeader.params.service) ||\n      parseUrl(authenticateHeader.params.realm) === null\n    ) {\n      logger.trace(\n        { registryHost, dockerRepository, authenticateHeader },\n        `Invalid realm, testing direct auth`\n      );\n      return opts.headers ?? null;\n    }\n\n    let scope = `repository:${dockerRepository}:pull`;\n    // repo isn't known to server yet, so causing wrong scope `repository:user/image:pull`\n    if (\n      is.string(authenticateHeader.params.scope) &&\n      !apiCheckUrl.endsWith('/v2/')\n    ) {\n      scope = authenticateHeader.params.scope;\n    }\n\n    const authUrl = `${authenticateHeader.params.realm}?service=${authenticateHeader.params.service}&scope=${scope}`;\n    logger.trace(\n      { registryHost, dockerRepository, authUrl },\n      `Obtaining docker registry token`\n    );\n    opts.noAuth = true;\n    const authResponse = (\n      await http.getJson<{ token?: string; access_token?: string }>(\n        authUrl,\n        opts\n      )\n    ).body;\n\n    const token = authResponse.token ?? authResponse.access_token;\n    // istanbul ignore if\n    if (!token) {\n      logger.warn('Failed to obtain docker registry token');\n      return null;\n    }\n    return {\n      authorization: `Bearer ${token}`,\n    };\n  } catch (err) /* istanbul ignore next */ {\n    if (err.host === 'quay.io') {\n      // TODO: debug why quay throws errors (#9604)\n      return null;\n    }\n    if (err.statusCode === 401) {\n      logger.debug(\n        { registryHost, dockerRepository },\n        'Unauthorized docker lookup'\n      );\n      logger.debug({ err });\n      return null;\n    }\n    if (err.statusCode === 403) {\n      logger.debug(\n        { registryHost, dockerRepository },\n        'Not allowed to access docker registry'\n      );\n      logger.debug({ err });\n      return null;\n    }\n    if (err.name === 'RequestError' && isDockerHost(registryHost)) {\n      throw new ExternalHostError(err);\n    }\n    if (err.statusCode === 429 && isDockerHost(registryHost)) {\n      throw new ExternalHostError(err);\n    }\n    if (err.statusCode >= 500 && err.statusCode < 600) {\n      throw new ExternalHostError(err);\n    }\n    if (err.message === PAGE_NOT_FOUND_ERROR) {\n      throw err;\n    }\n    if (err.message === HOST_DISABLED) {\n      logger.trace({ registryHost, dockerRepository, err }, 'Host disabled');\n      return null;\n    }\n    logger.warn(\n      { registryHost, dockerRepository, err },\n      'Error obtaining docker token'\n    );\n    return null;\n  }\n}\n\nasync function getECRAuthToken(\n  region: string | undefined,\n  opts: HostRule\n): Promise<string | null> {\n  const config: ECRClientConfig = { region };\n  if (opts.username && opts.password) {\n    config.credentials = {\n      accessKeyId: opts.username,\n      secretAccessKey: opts.password,\n      ...(opts.token && { sessionToken: opts.token }),\n    };\n  }\n\n  const ecr = new ECR(config);\n  try {\n    const data = await ecr.getAuthorizationToken({});\n    const authorizationToken = data?.authorizationData?.[0]?.authorizationToken;\n    if (authorizationToken) {\n      return authorizationToken;\n    }\n    logger.warn(\n      'Could not extract authorizationToken from ECR getAuthorizationToken response'\n    );\n  } catch (err) {\n    logger.trace({ err }, 'err');\n    logger.debug('ECR getAuthorizationToken error');\n  }\n  return null;\n}\n\nexport function getRegistryRepository(\n  packageName: string,\n  registryUrl: string\n): RegistryRepository {\n  if (registryUrl !== DOCKER_HUB) {\n    const registryEndingWithSlash = ensureTrailingSlash(\n      registryUrl.replace(regEx(/^https?:\\/\\//), '')\n    );\n    if (packageName.startsWith(registryEndingWithSlash)) {\n      let registryHost = trimTrailingSlash(registryUrl);\n      if (!regEx(/^https?:\\/\\//).test(registryHost)) {\n        registryHost = `https://${registryHost}`;\n      }\n      let dockerRepository = packageName.replace(registryEndingWithSlash, '');\n      const fullUrl = `${registryHost}/${dockerRepository}`;\n      const { origin, pathname } = parseUrl(fullUrl)!;\n      registryHost = origin;\n      dockerRepository = pathname.substring(1);\n      return {\n        registryHost,\n        dockerRepository,\n      };\n    }\n  }\n  let registryHost: string | undefined;\n  const split = packageName.split('/');\n  if (split.length > 1 && (split[0].includes('.') || split[0].includes(':'))) {\n    [registryHost] = split;\n    split.shift();\n  }\n  let dockerRepository = split.join('/');\n  if (!registryHost) {\n    registryHost = registryUrl.replace(\n      'https://docker.io',\n      'https://index.docker.io'\n    );\n  }\n  if (registryHost === 'docker.io') {\n    registryHost = 'index.docker.io';\n  }\n  if (!regEx(/^https?:\\/\\//).exec(registryHost)) {\n    registryHost = `https://${registryHost}`;\n  }\n  const opts = hostRules.find({\n    hostType: DockerDatasource.id,\n    url: registryHost,\n  });\n  if (opts?.insecureRegistry) {\n    registryHost = registryHost.replace('https', 'http');\n  }\n  if (registryHost.endsWith('.docker.io') && !dockerRepository.includes('/')) {\n    dockerRepository = 'library/' + dockerRepository;\n  }\n  return {\n    registryHost,\n    dockerRepository,\n  };\n}\n\nfunction digestFromManifestStr(str: hasha.HashaInput): string {\n  return 'sha256:' + hasha(str, { algorithm: 'sha256' });\n}\n\nexport function extractDigestFromResponseBody(\n  manifestResponse: HttpResponse\n): string {\n  return digestFromManifestStr(manifestResponse.body);\n}\n\nexport function isECRMaxResultsError(err: HttpError): boolean {\n  const resp = err.response as HttpResponse<any> | undefined;\n  return !!(\n    resp?.statusCode === 405 &&\n    resp.headers?.['docker-distribution-api-version'] &&\n    // https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_DescribeRepositories.html#ECR-DescribeRepositories-request-maxResults\n    resp.body?.['errors']?.[0]?.message?.includes(\n      'Member must have value less than or equal to 1000'\n    )\n  );\n}\n\nexport const defaultConfig = {\n  commitMessageTopic: '{{{depName}}} Docker tag',\n  commitMessageExtra:\n    'to v{{#if isMajor}}{{{newMajor}}}{{else}}{{{newVersion}}}{{/if}}',\n  digest: {\n    branchTopic: '{{{depNameSanitized}}}-{{{currentValue}}}',\n    commitMessageExtra: 'to {{newDigestShort}}',\n    commitMessageTopic:\n      '{{{depName}}}{{#if currentValue}}:{{{currentValue}}}{{/if}} Docker digest',\n    group: {\n      commitMessageTopic: '{{{groupName}}}',\n      commitMessageExtra: '',\n    },\n  },\n  pin: {\n    commitMessageExtra: '',\n    groupName: 'Docker digests',\n    group: {\n      commitMessageTopic: '{{{groupName}}}',\n      branchTopic: 'digests-pin',\n    },\n  },\n  group: {\n    commitMessageTopic: '{{{groupName}}} Docker tags',\n  },\n};\n\nfunction findLatestStable(tags: string[]): string | null {\n  const versions = tags\n    .filter((v) => dockerVersioning.isValid(v) && dockerVersioning.isStable(v))\n    .sort((a, b) => dockerVersioning.sortVersions(a, b));\n\n  return versions.pop() ?? tags.slice(-1).pop() ?? null;\n}\n\nexport class DockerDatasource extends Datasource {\n  static readonly id = 'docker';\n\n  override readonly defaultVersioning = dockerVersioningId;\n\n  override readonly defaultRegistryUrls = [DOCKER_HUB];\n\n  constructor() {\n    super(DockerDatasource.id);\n  }\n\n  // TODO: debug why quay throws errors (#9612)\n  private async getManifestResponse(\n    registryHost: string,\n    dockerRepository: string,\n    tag: string,\n    mode: 'head' | 'get' = 'get'\n  ): Promise<HttpResponse | null> {\n    logger.debug(\n      `getManifestResponse(${registryHost}, ${dockerRepository}, ${tag})`\n    );\n    try {\n      const headers = await getAuthHeaders(\n        this.http,\n        registryHost,\n        dockerRepository\n      );\n      if (!headers) {\n        logger.debug('No docker auth found - returning');\n        return null;\n      }\n      headers.accept = [\n        MediaType.manifestListV2,\n        MediaType.manifestV2,\n        MediaType.ociManifestV1,\n        MediaType.ociManifestIndexV1,\n      ].join(', ');\n      const url = `${registryHost}/v2/${dockerRepository}/manifests/${tag}`;\n      const manifestResponse = await this.http[mode](url, {\n        headers,\n        noAuth: true,\n      });\n      return manifestResponse;\n    } catch (err) /* istanbul ignore next */ {\n      if (err instanceof ExternalHostError) {\n        throw err;\n      }\n      if (err.statusCode === 401) {\n        logger.debug(\n          { registryHost, dockerRepository },\n          'Unauthorized docker lookup'\n        );\n        logger.debug({ err });\n        return null;\n      }\n      if (err.statusCode === 404) {\n        logger.debug(\n          {\n            err,\n            registryHost,\n            dockerRepository,\n            tag,\n          },\n          'Docker Manifest is unknown'\n        );\n        return null;\n      }\n      if (err.statusCode === 429 && isDockerHost(registryHost)) {\n        throw new ExternalHostError(err);\n      }\n      if (err.statusCode >= 500 && err.statusCode < 600) {\n        throw new ExternalHostError(err);\n      }\n      if (err.code === 'ETIMEDOUT') {\n        logger.debug(\n          { registryHost },\n          'Timeout when attempting to connect to docker registry'\n        );\n        logger.debug({ err });\n        return null;\n      }\n      logger.debug(\n        {\n          err,\n          registryHost,\n          dockerRepository,\n          tag,\n        },\n        'Unknown Error looking up docker manifest'\n      );\n      return null;\n    }\n  }\n\n  private async getConfigDigest(\n    registry: string,\n    dockerRepository: string,\n    tag: string\n  ): Promise<string | null> {\n    const manifestResponse = await this.getManifestResponse(\n      registry,\n      dockerRepository,\n      tag\n    );\n    // If getting the manifest fails here, then abort\n    // This means that the latest tag doesn't have a manifest, which shouldn't\n    // be possible\n    // istanbul ignore if\n    if (!manifestResponse) {\n      return null;\n    }\n    const manifest = JSON.parse(manifestResponse.body) as\n      | ImageList\n      | Image\n      | OciImageList\n      | OciImage;\n    if (manifest.schemaVersion !== 2) {\n      logger.debug(\n        { registry, dockerRepository, tag },\n        'Manifest schema version is not 2'\n      );\n      return null;\n    }\n\n    if (manifest.mediaType === MediaType.manifestListV2) {\n      if (manifest.manifests.length) {\n        logger.trace(\n          { registry, dockerRepository, tag },\n          'Found manifest list, using first image'\n        );\n        return this.getConfigDigest(\n          registry,\n          dockerRepository,\n          manifest.manifests[0].digest\n        );\n      } else {\n        logger.debug(\n          { manifest },\n          'Invalid manifest list with no manifests - returning'\n        );\n        return null;\n      }\n    }\n\n    if (\n      manifest.mediaType === MediaType.manifestV2 &&\n      is.string(manifest.config?.digest)\n    ) {\n      return manifest.config?.digest;\n    }\n\n    // OCI image lists are not required to specify a mediaType\n    if (\n      manifest.mediaType === MediaType.ociManifestIndexV1 ||\n      (!manifest.mediaType && hasKey('manifests', manifest))\n    ) {\n      if (manifest.manifests.length) {\n        logger.trace(\n          { registry, dockerRepository, tag },\n          'Found manifest index, using first image'\n        );\n        return this.getConfigDigest(\n          registry,\n          dockerRepository,\n          manifest.manifests[0].digest\n        );\n      } else {\n        logger.debug(\n          { manifest },\n          'Invalid manifest index with no manifests - returning'\n        );\n        return null;\n      }\n    }\n\n    // OCI manifests are not required to specify a mediaType\n    if (\n      (manifest.mediaType === MediaType.ociManifestV1 ||\n        (!manifest.mediaType && hasKey('config', manifest))) &&\n      is.string(manifest.config?.digest)\n    ) {\n      return manifest.config?.digest;\n    }\n\n    logger.debug({ manifest }, 'Invalid manifest - returning');\n    return null;\n  }\n\n  /*\n   * docker.getLabels\n   *\n   * This function will:\n   *  - Return the labels for the requested image\n   */\n  @cache({\n    namespace: 'datasource-docker-labels',\n    key: (registryHost: string, dockerRepository: string, tag: string) =>\n      `${registryHost}:${dockerRepository}:${tag}`,\n    ttlMinutes: 60,\n  })\n  public async getLabels(\n    registryHost: string,\n    dockerRepository: string,\n    tag: string\n  ): Promise<Record<string, string>> {\n    logger.debug(`getLabels(${registryHost}, ${dockerRepository}, ${tag})`);\n    try {\n      let labels: Record<string, string> = {};\n      const configDigest = await this.getConfigDigest(\n        registryHost,\n        dockerRepository,\n        tag\n      );\n      if (!configDigest) {\n        return {};\n      }\n\n      const headers = await getAuthHeaders(\n        this.http,\n        registryHost,\n        dockerRepository\n      );\n      // istanbul ignore if: Should never be happen\n      if (!headers) {\n        logger.debug('No docker auth found - returning');\n        return {};\n      }\n      const url = `${registryHost}/v2/${dockerRepository}/blobs/${configDigest}`;\n      const configResponse = await this.http.get(url, {\n        headers,\n        noAuth: true,\n      });\n      labels = JSON.parse(configResponse.body).config.Labels;\n\n      if (labels) {\n        logger.debug(\n          {\n            labels,\n          },\n          'found labels in manifest'\n        );\n      }\n      return labels;\n    } catch (err) /* istanbul ignore next: should be tested in future */ {\n      if (err instanceof ExternalHostError) {\n        throw err;\n      }\n      if (err.statusCode === 400 || err.statusCode === 401) {\n        logger.debug(\n          { registryHost, dockerRepository, err },\n          'Unauthorized docker lookup'\n        );\n      } else if (err.statusCode === 404) {\n        logger.warn(\n          {\n            err,\n            registryHost,\n            dockerRepository,\n            tag,\n          },\n          'Config Manifest is unknown'\n        );\n      } else if (err.statusCode === 429 && isDockerHost(registryHost)) {\n        logger.warn({ err }, 'docker registry failure: too many requests');\n      } else if (err.statusCode >= 500 && err.statusCode < 600) {\n        logger.debug(\n          {\n            err,\n            registryHost,\n            dockerRepository,\n            tag,\n          },\n          'docker registry failure: internal error'\n        );\n      } else if (\n        err.code === 'ERR_TLS_CERT_ALTNAME_INVALID' ||\n        err.code === 'ETIMEDOUT'\n      ) {\n        logger.debug(\n          { registryHost, err },\n          'Error connecting to docker registry'\n        );\n      } else if (registryHost === 'https://quay.io') {\n        // istanbul ignore next\n        logger.debug(\n          'Ignoring quay.io errors until they fully support v2 schema'\n        );\n      } else {\n        logger.info(\n          { registryHost, dockerRepository, tag, err },\n          'Unknown error getting Docker labels'\n        );\n      }\n      return {};\n    }\n  }\n\n  private async getTagsQuayRegistry(\n    registry: string,\n    repository: string\n  ): Promise<string[]> {\n    let tags: string[] = [];\n    const limit = 100;\n\n    const pageUrl = (page: number): string =>\n      `${registry}/api/v1/repository/${repository}/tag/?limit=${limit}&page=${page}&onlyActiveTags=true`;\n\n    let page = 1;\n    let url: string | null = pageUrl(page);\n    while (url && page <= 20) {\n      interface QuayRestDockerTags {\n        tags: {\n          name: string;\n        }[];\n        has_additional: boolean;\n      }\n\n      // typescript issue :-/\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      const res = (await this.http.getJson<QuayRestDockerTags>(\n        url\n      )) as HttpResponse<QuayRestDockerTags>;\n      const pageTags = res.body.tags.map((tag) => tag.name);\n      tags = tags.concat(pageTags);\n      page += 1;\n      url = res.body.has_additional ? pageUrl(page) : null;\n    }\n    return tags;\n  }\n\n  private async getDockerApiTags(\n    registryHost: string,\n    dockerRepository: string\n  ): Promise<string[] | null> {\n    let tags: string[] = [];\n    // AWS ECR limits the maximum number of results to 1000\n    // See https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_DescribeRepositories.html#ECR-DescribeRepositories-request-maxResults\n    const limit = ecrRegex.test(registryHost) ? 1000 : 10000;\n    let url:\n      | string\n      | null = `${registryHost}/${dockerRepository}/tags/list?n=${limit}`;\n    url = ensurePathPrefix(url, '/v2');\n    const headers = await getAuthHeaders(\n      this.http,\n      registryHost,\n      dockerRepository,\n      url\n    );\n    if (!headers) {\n      logger.debug('Failed to get authHeaders for getTags lookup');\n      return null;\n    }\n    let page = 1;\n    let foundMaxResultsError = false;\n    do {\n      let res: HttpResponse<{ tags: string[] }>;\n      try {\n        res = await this.http.getJson<{ tags: string[] }>(url, {\n          headers,\n          noAuth: true,\n        });\n      } catch (err) {\n        if (\n          !foundMaxResultsError &&\n          err instanceof HttpError &&\n          isECRMaxResultsError(err)\n        ) {\n          const maxResults = 1000;\n          url = `${registryHost}/${dockerRepository}/tags/list?n=${maxResults}`;\n          url = ensurePathPrefix(url, '/v2');\n          foundMaxResultsError = true;\n          continue;\n        }\n        throw err;\n      }\n      tags = tags.concat(res.body.tags);\n      const linkHeader = parseLinkHeader(res.headers.link);\n      url = linkHeader?.next ? URL.resolve(url, linkHeader.next.url) : null;\n      page += 1;\n    } while (url && page < 20);\n    return tags;\n  }\n\n  @cache({\n    namespace: 'datasource-docker-tags',\n    key: (registryHost: string, dockerRepository: string) =>\n      `${registryHost}:${dockerRepository}`,\n  })\n  public async getTags(\n    registryHost: string,\n    dockerRepository: string\n  ): Promise<string[] | null> {\n    try {\n      const isQuay = regEx(/^https:\\/\\/quay\\.io(?::[1-9][0-9]{0,4})?$/i).test(\n        registryHost\n      );\n      let tags: string[] | null;\n      if (isQuay) {\n        tags = await this.getTagsQuayRegistry(registryHost, dockerRepository);\n      } else {\n        tags = await this.getDockerApiTags(registryHost, dockerRepository);\n      }\n      return tags;\n    } catch (err) /* istanbul ignore next */ {\n      if (err instanceof ExternalHostError) {\n        throw err;\n      }\n      if (\n        (err.statusCode === 404 || err.message === PAGE_NOT_FOUND_ERROR) &&\n        !dockerRepository.includes('/')\n      ) {\n        logger.debug(\n          `Retrying Tags for ${registryHost}/${dockerRepository} using library/ prefix`\n        );\n        return this.getTags(registryHost, 'library/' + dockerRepository);\n      }\n      // prettier-ignore\n      if (err.statusCode === 429 && isDockerHost(registryHost)) {\n        logger.warn(\n          { registryHost, dockerRepository, err },\n          'docker registry failure: too many requests'\n        );\n        throw new ExternalHostError(err);\n      }\n      // prettier-ignore\n      if (err.statusCode === 401 && isDockerHost(registryHost)) {\n        logger.warn(\n          { registryHost, dockerRepository, err },\n          'docker registry failure: unauthorized'\n        );\n        throw new ExternalHostError(err);\n      }\n      if (err.statusCode >= 500 && err.statusCode < 600) {\n        logger.warn(\n          { registryHost, dockerRepository, err },\n          'docker registry failure: internal error'\n        );\n        throw new ExternalHostError(err);\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * docker.getDigest\n   *\n   * The `newValue` supplied here should be a valid tag for the docker image.\n   *\n   * This function will:\n   *  - Look up a sha256 digest for a tag on its registry\n   *  - Return the digest as a string\n   */\n  @cache({\n    namespace: 'datasource-docker-digest',\n    key: (\n      { registryUrl, packageName }: GetReleasesConfig,\n      newValue?: string\n    ) => {\n      const newTag = newValue ?? 'latest';\n      const { registryHost, dockerRepository } = getRegistryRepository(\n        packageName,\n        registryUrl!\n      );\n      return `${registryHost}:${dockerRepository}:${newTag}`;\n    },\n  })\n  override async getDigest(\n    { registryUrl, packageName }: GetReleasesConfig,\n    newValue?: string\n  ): Promise<string | null> {\n    const { registryHost, dockerRepository } = getRegistryRepository(\n      packageName,\n      registryUrl!\n    );\n    logger.debug(\n      // TODO: types (#7154)\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `getDigest(${registryHost}, ${dockerRepository}, ${newValue})`\n    );\n    const newTag = newValue ?? 'latest';\n    let digest: string | null = null;\n    try {\n      let manifestResponse = await this.getManifestResponse(\n        registryHost,\n        dockerRepository,\n        newTag,\n        'head'\n      );\n      if (manifestResponse) {\n        if (hasKey('docker-content-digest', manifestResponse.headers)) {\n          digest =\n            (manifestResponse.headers['docker-content-digest'] as string) ||\n            null;\n        } else {\n          logger.debug(\n            { registryHost },\n            'Missing docker content digest header, pulling full manifest'\n          );\n          manifestResponse = await this.getManifestResponse(\n            registryHost,\n            dockerRepository,\n            newTag\n          );\n          digest = extractDigestFromResponseBody(manifestResponse!);\n        }\n        logger.debug({ digest }, 'Got docker digest');\n      }\n    } catch (err) /* istanbul ignore next */ {\n      if (err instanceof ExternalHostError) {\n        throw err;\n      }\n      logger.debug(\n        {\n          err,\n          packageName,\n          newTag,\n        },\n        'Unknown Error looking up docker image digest'\n      );\n    }\n    return digest;\n  }\n\n  /**\n   * docker.getReleases\n   *\n   * A docker image usually looks something like this: somehost.io/owner/repo:8.1.0-alpine\n   * In the above:\n   *  - 'somehost.io' is the registry\n   *  - 'owner/repo' is the package name\n   *  - '8.1.0-alpine' is the tag\n   *\n   * This function will filter only tags that contain a semver version\n   */\n  async getReleases({\n    packageName,\n    registryUrl,\n  }: GetReleasesConfig): Promise<ReleaseResult | null> {\n    const { registryHost, dockerRepository } = getRegistryRepository(\n      packageName,\n      registryUrl!\n    );\n    const tags = await this.getTags(registryHost, dockerRepository);\n    if (!tags) {\n      return null;\n    }\n    const releases = tags.map((version) => ({ version }));\n    const ret: ReleaseResult = {\n      registryUrl: registryHost,\n      releases,\n    };\n\n    const latestTag = tags.includes('latest')\n      ? 'latest'\n      : findLatestStable(tags);\n\n    // istanbul ignore if: needs test\n    if (!latestTag) {\n      return ret;\n    }\n    const labels = await this.getLabels(\n      registryHost,\n      dockerRepository,\n      latestTag\n    );\n    if (labels) {\n      if (is.nonEmptyString(labels[gitRefLabel])) {\n        ret.gitRef = labels[gitRefLabel];\n      }\n      for (const label of sourceLabels) {\n        if (is.nonEmptyString(labels[label])) {\n          ret.sourceUrl = labels[label];\n          break;\n        }\n      }\n    }\n    return ret;\n  }\n}\n"]}