{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/go/common.ts"],"names":[],"mappings":";;;AAAA,sDAA4D;AAC5D,sDAA4E;AAC5E,gDAAsD;AACtD,gDAAsD;AACtD,8CAAsE;AAItE,mDAAmD;AACnD,IAAY,eAGX;AAHD,WAAY,eAAe;IACzB,2CAAwB,CAAA;IACxB,+BAAY,CAAA;AACd,CAAC,EAHW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAG1B;AAED,SAAgB,YAAY,CAC1B,UAA8B;IAE9B,IAAI,UAAU,EAAE;QACd,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,UAAU,CAAC;QAE5D,IAAI,UAAU,KAAK,kCAAoB,CAAC,EAAE,EAAE;YAC1C,OAAO,IAAA,qBAAe,EAAC,WAAW,EAAE,WAAW,CAAC,CAAC;SAClD;QAED,IAAI,UAAU,KAAK,kCAAoB,CAAC,EAAE,EAAE;YAC1C,OAAO,IAAA,mBAAe,EAAC,WAAW,EAAE,WAAW,CAAC,CAAC;SAClD;QAED,IAAI,UAAU,KAAK,wCAAuB,CAAC,EAAE,EAAE;YAC7C,OAAO,wCAAuB,CAAC,YAAY,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;SACvE;KACF;IAED,uBAAuB;IACvB,OAAO,SAAS,CAAC;AACnB,CAAC;AArBD,oCAqBC","sourcesContent":["import { BitBucketTagsDatasource } from '../bitbucket-tags';\nimport { getSourceUrl as githubSourceUrl } from '../github-releases/common';\nimport { GithubTagsDatasource } from '../github-tags';\nimport { GitlabTagsDatasource } from '../gitlab-tags';\nimport { getSourceUrl as gitlabSourceUrl } from '../gitlab-tags/util';\n\nimport type { DataSource } from './types';\n\n// eslint-disable-next-line typescript-enum/no-enum\nexport enum GoproxyFallback {\n  WhenNotFoundOrGone = ',',\n  Always = '|',\n}\n\nexport function getSourceUrl(\n  dataSource?: DataSource | null\n): string | undefined {\n  if (dataSource) {\n    const { datasource, registryUrl, packageName } = dataSource;\n\n    if (datasource === GithubTagsDatasource.id) {\n      return githubSourceUrl(packageName, registryUrl);\n    }\n\n    if (datasource === GitlabTagsDatasource.id) {\n      return gitlabSourceUrl(packageName, registryUrl);\n    }\n\n    if (datasource === BitBucketTagsDatasource.id) {\n      return BitBucketTagsDatasource.getSourceUrl(packageName, registryUrl);\n    }\n  }\n\n  // istanbul ignore next\n  return undefined;\n}\n"]}