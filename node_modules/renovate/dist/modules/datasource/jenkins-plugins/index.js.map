{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/jenkins-plugins/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { logger } from '../../../logger';\nimport { cache } from '../../../util/cache/package/decorator';\nimport { clone } from '../../../util/clone';\nimport { Datasource } from '../datasource';\nimport type { GetReleasesConfig, Release, ReleaseResult } from '../types';\nimport type {\n  JenkinsPluginsInfoResponse,\n  JenkinsPluginsVersionsResponse,\n} from './types';\n\nexport class JenkinsPluginsDatasource extends Datasource {\n  static readonly id = 'jenkins-plugins';\n\n  constructor() {\n    super(JenkinsPluginsDatasource.id);\n  }\n\n  override readonly defaultRegistryUrls = ['https://updates.jenkins.io'];\n\n  override readonly registryStrategy = 'hunt';\n\n  private static readonly packageInfoUrl =\n    'https://updates.jenkins.io/current/update-center.actual.json';\n  private static readonly packageVersionsUrl =\n    'https://updates.jenkins.io/current/plugin-versions.json';\n\n  async getReleases({\n    packageName,\n  }: GetReleasesConfig): Promise<ReleaseResult | null> {\n    const plugins = await this.getJenkinsPluginInfo();\n    const plugin = plugins[packageName];\n    if (!plugin) {\n      return null;\n    }\n\n    const result = clone(plugin);\n    const versions = await this.getJenkinsPluginVersions();\n    const releases = versions[packageName];\n    result.releases = releases ? clone(releases) : [];\n    return result;\n  }\n\n  @cache({\n    namespace: JenkinsPluginsDatasource.id,\n    key: 'info',\n    ttlMinutes: 1440,\n  })\n  async getJenkinsPluginInfo(): Promise<Record<string, ReleaseResult>> {\n    const { plugins } =\n      await this.getJenkinsUpdateCenterResponse<JenkinsPluginsInfoResponse>(\n        JenkinsPluginsDatasource.packageInfoUrl\n      );\n\n    const info: Record<string, ReleaseResult> = {};\n    for (const name of Object.keys(plugins ?? [])) {\n      info[name] = {\n        releases: [], // releases\n        sourceUrl: plugins[name]?.scm,\n      };\n    }\n    return info;\n  }\n\n  @cache({ namespace: JenkinsPluginsDatasource.id, key: 'versions' })\n  async getJenkinsPluginVersions(): Promise<Record<string, Release[]>> {\n    const { plugins } =\n      await this.getJenkinsUpdateCenterResponse<JenkinsPluginsVersionsResponse>(\n        JenkinsPluginsDatasource.packageVersionsUrl\n      );\n\n    const versions: Record<string, Release[]> = {};\n    for (const name of Object.keys(plugins ?? [])) {\n      versions[name] = Object.keys(plugins[name]).map((version) => ({\n        version,\n        downloadUrl: plugins[name][version]?.url,\n        releaseTimestamp: plugins[name][version]?.buildDate\n          ? // TODO: types (#7154)\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            new Date(`${plugins[name][version].buildDate} UTC`)\n          : null,\n      }));\n    }\n    return versions;\n  }\n\n  private async getJenkinsUpdateCenterResponse<T>(url: string): Promise<T> {\n    let response: T;\n\n    try {\n      logger.debug(`jenkins-plugins: Fetching Jenkins plugins from ${url}`);\n      const startTime = Date.now();\n      response = (await this.http.getJson<T>(url)).body;\n      const durationMs = Math.round(Date.now() - startTime);\n      logger.debug(\n        { durationMs },\n        `jenkins-plugins: Fetched Jenkins plugins from ${url}`\n      );\n    } catch (err) /* istanbul ignore next */ {\n      this.handleGenericErrors(err);\n    }\n\n    return response;\n  }\n}\n"]}