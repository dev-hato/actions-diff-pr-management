{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/rubygems/index.ts"],"names":[],"mappings":";;;;AAAA,qEAA8D;AAC9D,2CAA6C;AAC7C,8EAAwD;AACxD,8CAA2C;AAE3C,+BAAmD;AACnD,yDAA2D;AAE3D,MAAa,kBAAmB,SAAQ,uBAAU;IAGhD;QACE,KAAK,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;QASb,wBAAmB,GAAG,CAAC,sBAAsB,CAAC,CAAC;QAE/C,sBAAiB,GAAG,cAAc,CAAC,EAAE,CAAC;QAEtC,qBAAgB,GAAG,MAAM,CAAC;QAZ1C,IAAI,CAAC,qBAAqB,GAAG,IAAI,wCAAqB,CACpD,kBAAkB,CAAC,EAAE,CACtB,CAAC;QACF,IAAI,CAAC,0BAA0B,GAAG,IAAI,gCAA0B,CAC9D,kBAAkB,CAAC,EAAE,CACtB,CAAC;IACJ,CAAC;IAmBD,WAAW,CAAC,EACV,WAAW,EACX,WAAW,GACO;QAClB,IAAI,IAAA,cAAQ,EAAC,WAAW,CAAC,EAAE,QAAQ,KAAK,cAAc,EAAE;YACtD,OAAO,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC;SAChE;QACD,OAAO,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC;YACjD,WAAW;YACX,WAAW;SACZ,CAAC,CAAC;IACL,CAAC;;AAxCe,qBAAE,GAAG,UAAU,CAAC;AA6BhC;IAPC,IAAA,iBAAK,EAAC;QACL,SAAS,EAAE,cAAc,kBAAkB,CAAC,EAAE,EAAE;QAChD,GAAG,EAAE,CAAC,EAAE,WAAW,EAAE,WAAW,EAAqB,EAAE,EAAE;QACvD,sBAAsB;QACtB,qEAAqE;QACrE,GAAG,WAAW,IAAI,WAAW,EAAE;KAClC,CAAC;qDAYD;AAzCH,gDA0CC","sourcesContent":["import { cache } from '../../../util/cache/package/decorator';\nimport { parseUrl } from '../../../util/url';\nimport * as rubyVersioning from '../../versioning/ruby';\nimport { Datasource } from '../datasource';\nimport type { GetReleasesConfig, ReleaseResult } from '../types';\nimport { InternalRubyGemsDatasource } from './get';\nimport { RubyGemsOrgDatasource } from './get-rubygems-org';\n\nexport class RubyGemsDatasource extends Datasource {\n  static readonly id = 'rubygems';\n\n  constructor() {\n    super(RubyGemsDatasource.id);\n    this.rubyGemsOrgDatasource = new RubyGemsOrgDatasource(\n      RubyGemsDatasource.id\n    );\n    this.internalRubyGemsDatasource = new InternalRubyGemsDatasource(\n      RubyGemsDatasource.id\n    );\n  }\n\n  override readonly defaultRegistryUrls = ['https://rubygems.org'];\n\n  override readonly defaultVersioning = rubyVersioning.id;\n\n  override readonly registryStrategy = 'hunt';\n\n  private readonly rubyGemsOrgDatasource: RubyGemsOrgDatasource;\n\n  private readonly internalRubyGemsDatasource: InternalRubyGemsDatasource;\n\n  @cache({\n    namespace: `datasource-${RubyGemsDatasource.id}`,\n    key: ({ registryUrl, packageName }: GetReleasesConfig) =>\n      // TODO: types (#7154)\n      /* eslint-disable @typescript-eslint/restrict-template-expressions */\n      `${registryUrl}/${packageName}`,\n  })\n  getReleases({\n    packageName,\n    registryUrl,\n  }: GetReleasesConfig): Promise<ReleaseResult | null> {\n    if (parseUrl(registryUrl)?.hostname === 'rubygems.org') {\n      return this.rubyGemsOrgDatasource.getReleases({ packageName });\n    }\n    return this.internalRubyGemsDatasource.getReleases({\n      packageName,\n      registryUrl,\n    });\n  }\n}\n"]}