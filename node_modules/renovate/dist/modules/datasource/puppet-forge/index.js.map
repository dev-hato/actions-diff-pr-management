{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/puppet-forge/index.ts"],"names":[],"mappings":";;;AAAA,8CAA2C;AAE3C,qCAAwC;AAGxC,MAAa,qBAAsB,SAAQ,uBAAU;IAGnD;QACE,KAAK,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;QAGhB,wBAAmB,GAAG,CAAC,qBAAY,CAAC,CAAC;IAFvD,CAAC;IAID,KAAK,CAAC,WAAW,CAAC,EAChB,WAAW,EACX,WAAW,GACO;QAClB,8BAA8B;QAC9B,MAAM,UAAU,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACjD,sBAAsB;QACtB,+EAA+E;QAC/E,MAAM,GAAG,GAAG,GAAG,WAAW,eAAe,UAAU,iCAAiC,CAAC;QAErF,IAAI,MAAoB,CAAC;QAEzB,IAAI;YACF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAe,GAAG,CAAC,CAAC;YAC5D,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;SACxB;QAAC,OAAO,GAAG,EAAE;YACZ,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;SAC/B;QAED,MAAM,QAAQ,GAAc,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YAC9D,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,WAAW,EAAE,OAAO,CAAC,QAAQ;YAC7B,gBAAgB,EAAE,OAAO,CAAC,UAAU;YACpC,WAAW;SACZ,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE;YACrB,OAAO,IAAI,CAAC;SACb;QAED,OAAO,qBAAqB,CAAC,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACrE,CAAC;IAED,MAAM,CAAC,mBAAmB,CACxB,QAAmB,EACnB,MAAoB;QAEpB,MAAM,MAAM,GAAkB;YAC5B,QAAQ;YACR,QAAQ,EAAE,MAAM,CAAC,YAAY;SAC9B,CAAC;QAEF,IAAI,MAAM,CAAC,cAAc,EAAE;YACzB,MAAM,CAAC,kBAAkB,GAAG,MAAM,CAAC,cAAc,CAAC;SACnD;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;;AAxDH,sDAyDC;AAxDQ,wBAAE,GAAG,cAAc,CAAC","sourcesContent":["import { Datasource } from '../datasource';\nimport type { GetReleasesConfig, Release, ReleaseResult } from '../types';\nimport { PUPPET_FORGE } from './common';\nimport type { PuppetModule } from './types';\n\nexport class PuppetForgeDatasource extends Datasource {\n  static id = 'puppet-forge';\n\n  constructor() {\n    super(PuppetForgeDatasource.id);\n  }\n\n  override readonly defaultRegistryUrls = [PUPPET_FORGE];\n\n  async getReleases({\n    packageName,\n    registryUrl,\n  }: GetReleasesConfig): Promise<ReleaseResult | null> {\n    // https://forgeapi.puppet.com\n    const moduleSlug = packageName.replace('/', '-');\n    // TODO: types (#7154)\n    /* eslint-disable-next-line @typescript-eslint/restrict-template-expressions */\n    const url = `${registryUrl}/v3/modules/${moduleSlug}?exclude_fields=current_release`;\n\n    let module: PuppetModule;\n\n    try {\n      const response = await this.http.getJson<PuppetModule>(url);\n      module = response.body;\n    } catch (err) {\n      this.handleGenericErrors(err);\n    }\n\n    const releases: Release[] = module?.releases?.map((release) => ({\n      version: release.version,\n      downloadUrl: release.file_uri,\n      releaseTimestamp: release.created_at,\n      registryUrl,\n    }));\n\n    if (!releases?.length) {\n      return null;\n    }\n\n    return PuppetForgeDatasource.createReleaseResult(releases, module);\n  }\n\n  static createReleaseResult(\n    releases: Release[],\n    module: PuppetModule\n  ): ReleaseResult {\n    const result: ReleaseResult = {\n      releases,\n      homepage: module.homepage_url,\n    };\n\n    if (module.deprecated_for) {\n      result.deprecationMessage = module.deprecated_for;\n    }\n\n    return result;\n  }\n}\n"]}