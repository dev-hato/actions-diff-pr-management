{"version":3,"file":"v3.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/nuget/v3.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport pAll from 'p-all';\nimport semver from 'semver';\nimport { XmlDocument } from 'xmldoc';\nimport { logger } from '../../../logger';\nimport { ExternalHostError } from '../../../types/errors/external-host-error';\nimport * as packageCache from '../../../util/cache/package';\nimport { Http, HttpError } from '../../../util/http';\nimport { regEx } from '../../../util/regex';\nimport { ensureTrailingSlash } from '../../../util/url';\nimport type { Release, ReleaseResult } from '../types';\nimport { massageUrl, removeBuildMeta } from './common';\nimport type {\n  CatalogEntry,\n  CatalogPage,\n  PackageRegistration,\n  ServicesIndexRaw,\n} from './types';\n\nconst cacheNamespace = 'datasource-nuget';\n\nexport async function getResourceUrl(\n  http: Http,\n  url: string,\n  resourceType = 'RegistrationsBaseUrl'\n): Promise<string | null> {\n  // https://docs.microsoft.com/en-us/nuget/api/service-index\n  const resultCacheKey = `${url}:${resourceType}`;\n  const cachedResult = await packageCache.get<string>(\n    cacheNamespace,\n    resultCacheKey\n  );\n\n  // istanbul ignore if\n  if (cachedResult) {\n    return cachedResult;\n  }\n\n  try {\n    const responseCacheKey = url;\n    let servicesIndexRaw = await packageCache.get<ServicesIndexRaw>(\n      cacheNamespace,\n      responseCacheKey\n    );\n    // istanbul ignore else: currently not testable\n    if (!servicesIndexRaw) {\n      servicesIndexRaw = (await http.getJson<ServicesIndexRaw>(url)).body;\n      await packageCache.set(\n        cacheNamespace,\n        responseCacheKey,\n        servicesIndexRaw,\n        3 * 24 * 60\n      );\n    }\n\n    const services = servicesIndexRaw.resources\n      .map(({ '@id': serviceId, '@type': t }) => ({\n        serviceId,\n        type: t?.split('/')?.shift(),\n        version: t?.split('/')?.pop(),\n      }))\n      .filter(\n        ({ type, version }) => type === resourceType && semver.valid(version)\n      )\n      .sort((x, y) =>\n        x.version && y.version ? semver.compare(x.version, y.version) : 0\n      );\n    const { serviceId, version } = services.pop()!;\n\n    // istanbul ignore if\n    if (\n      resourceType === 'RegistrationsBaseUrl' &&\n      version &&\n      !version.startsWith('3.0.0-') &&\n      !semver.satisfies(version, '^3.0.0')\n    ) {\n      logger.warn(\n        { url, version },\n        `Nuget: Unknown version returned. Only v3 is supported`\n      );\n    }\n\n    await packageCache.set(cacheNamespace, resultCacheKey, serviceId, 60);\n    return serviceId;\n  } catch (err) {\n    // istanbul ignore if: not easy testable with nock\n    if (err instanceof ExternalHostError) {\n      throw err;\n    }\n    logger.debug(\n      { err, url },\n      `nuget registry failure: can't get ${resourceType}`\n    );\n    return null;\n  }\n}\n\nasync function getCatalogEntry(\n  http: Http,\n  catalogPage: CatalogPage\n): Promise<CatalogEntry[]> {\n  let items = catalogPage.items;\n  if (!items) {\n    const url = catalogPage['@id'];\n    const catalogPageFull = await http.getJson<CatalogPage>(url);\n    items = catalogPageFull.body.items;\n  }\n  return items.map(({ catalogEntry }) => catalogEntry);\n}\n\nexport async function getReleases(\n  http: Http,\n  registryUrl: string,\n  feedUrl: string,\n  pkgName: string\n): Promise<ReleaseResult | null> {\n  const baseUrl = feedUrl.replace(regEx(/\\/*$/), '');\n  const url = `${baseUrl}/${pkgName.toLowerCase()}/index.json`;\n  const packageRegistration = await http.getJson<PackageRegistration>(url);\n  const catalogPages = packageRegistration.body.items || [];\n  const catalogPagesQueue = catalogPages.map(\n    (page) => (): Promise<CatalogEntry[]> => getCatalogEntry(http, page)\n  );\n  const catalogEntries = (\n    await pAll(catalogPagesQueue, { concurrency: 5 })\n  ).flat();\n\n  let homepage: string | null = null;\n  let latestStable: string | null = null;\n  const releases = catalogEntries.map(\n    ({ version, published: releaseTimestamp, projectUrl, listed }) => {\n      const release: Release = { version: removeBuildMeta(version) };\n      if (releaseTimestamp) {\n        release.releaseTimestamp = releaseTimestamp;\n      }\n      if (semver.valid(version) && !semver.prerelease(version)) {\n        latestStable = removeBuildMeta(version);\n        homepage = projectUrl ? massageUrl(projectUrl) : homepage;\n      }\n      if (listed === false) {\n        release.isDeprecated = true;\n      }\n      return release;\n    }\n  );\n\n  if (!releases.length) {\n    return null;\n  }\n\n  // istanbul ignore if: only happens when no stable version exists\n  if (latestStable === null && catalogPages.length) {\n    const last = catalogEntries.pop()!;\n    latestStable = removeBuildMeta(last.version);\n    homepage ??= last.projectUrl ?? null;\n  }\n\n  const dep: ReleaseResult = {\n    releases,\n  };\n\n  try {\n    const packageBaseAddress = await getResourceUrl(\n      http,\n      registryUrl,\n      'PackageBaseAddress'\n    );\n    // istanbul ignore else: this is a required v3 api\n    if (is.nonEmptyString(packageBaseAddress)) {\n      const nuspecUrl = `${ensureTrailingSlash(\n        packageBaseAddress\n      )}${pkgName.toLowerCase()}/${\n        // TODO: types (#7154)\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        latestStable\n      }/${pkgName.toLowerCase()}.nuspec`;\n      const metaresult = await http.get(nuspecUrl);\n      const nuspec = new XmlDocument(metaresult.body);\n      const sourceUrl = nuspec.valueWithPath('metadata.repository@url');\n      if (sourceUrl) {\n        dep.sourceUrl = massageUrl(sourceUrl);\n      }\n    }\n  } catch (err) {\n    // istanbul ignore if: not easy testable with nock\n    if (err instanceof ExternalHostError) {\n      throw err;\n    }\n    // ignore / silence 404. Seen on proget, if remote connector is used and package is not yet cached\n    if (err instanceof HttpError && err.response?.statusCode === 404) {\n      logger.debug(\n        { registryUrl, pkgName, pkgVersion: latestStable },\n        `package manifest (.nuspec) not found`\n      );\n      return dep;\n    }\n    logger.debug(\n      { err, registryUrl, pkgName, pkgVersion: latestStable },\n      `Cannot obtain sourceUrl`\n    );\n    return dep;\n  }\n\n  // istanbul ignore else: not easy testable\n  if (homepage) {\n    // only assign if not assigned\n    dep.sourceUrl ??= homepage;\n    dep.homepage ??= homepage;\n  }\n\n  return dep;\n}\n"]}