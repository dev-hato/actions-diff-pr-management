{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/swift/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import { regEx } from '../../../util/regex';\nimport { GitTagsDatasource } from '../../datasource/git-tags';\nimport type { PackageDependency, PackageFile } from '../types';\nimport type { MatchResult } from './types';\n\nconst regExps = {\n  wildcard: regEx(/^.*?/),\n  space: regEx(/(\\s+|\\/\\/[^\\n]*|\\/\\*.*\\*\\/)+/, 's'),\n  depsKeyword: regEx(/dependencies/),\n  colon: regEx(/:/),\n  beginSection: regEx(/\\[/),\n  endSection: regEx(/],?/),\n  package: regEx(/\\s*.\\s*package\\s*\\(\\s*/),\n  urlKey: regEx(/url/),\n  stringLiteral: regEx(/\"[^\"]+\"/),\n  comma: regEx(/,/),\n  from: regEx(/from/),\n  rangeOp: regEx(/\\.\\.[.<]/),\n  exactVersion: regEx(/\\.\\s*exact\\s*\\(\\s*/),\n};\n\nconst WILDCARD = 'wildcard';\nconst SPACE = 'space';\nconst DEPS = 'depsKeyword';\nconst COLON = 'colon';\nconst BEGIN_SECTION = 'beginSection';\nconst END_SECTION = 'endSection';\nconst PACKAGE = 'package';\nconst URL_KEY = 'urlKey';\nconst STRING_LITERAL = 'stringLiteral';\nconst COMMA = 'comma';\nconst FROM = 'from';\nconst RANGE_OP = 'rangeOp';\nconst EXACT_VERSION = 'exactVersion';\n\nconst searchLabels = {\n  wildcard: WILDCARD,\n  space: SPACE,\n  depsKeyword: DEPS,\n  colon: COLON,\n  beginSection: BEGIN_SECTION,\n  endSection: END_SECTION,\n  package: PACKAGE,\n  urlKey: URL_KEY,\n  stringLiteral: STRING_LITERAL,\n  comma: COMMA,\n  from: FROM,\n  rangeOp: RANGE_OP,\n  exactVersion: EXACT_VERSION,\n};\n\nfunction searchKeysForState(state: string | null): (keyof typeof regExps)[] {\n  switch (state) {\n    case 'dependencies':\n      return [SPACE, COLON, WILDCARD];\n    case 'dependencies:':\n      return [SPACE, BEGIN_SECTION, WILDCARD];\n    case 'dependencies: [':\n      return [SPACE, PACKAGE, END_SECTION];\n    case '.package(':\n      return [SPACE, URL_KEY, PACKAGE, END_SECTION];\n    case '.package(url':\n      return [SPACE, COLON, PACKAGE, END_SECTION];\n    case '.package(url:':\n      return [SPACE, STRING_LITERAL, PACKAGE, END_SECTION];\n    case '.package(url: [depName]':\n      return [SPACE, COMMA, PACKAGE, END_SECTION];\n    case '.package(url: [depName],':\n      return [\n        SPACE,\n        FROM,\n        STRING_LITERAL,\n        RANGE_OP,\n        EXACT_VERSION,\n        PACKAGE,\n        END_SECTION,\n      ];\n    case '.package(url: [depName], .exact(':\n      return [SPACE, STRING_LITERAL, PACKAGE, END_SECTION];\n    case '.package(url: [depName], from':\n      return [SPACE, COLON, PACKAGE, END_SECTION];\n    case '.package(url: [depName], from:':\n      return [SPACE, STRING_LITERAL, PACKAGE, END_SECTION];\n    case '.package(url: [depName], [value]':\n      return [SPACE, RANGE_OP, PACKAGE, END_SECTION];\n    case '.package(url: [depName], [rangeFrom][rangeOp]':\n      return [SPACE, STRING_LITERAL, PACKAGE, END_SECTION];\n    default:\n      return [DEPS];\n  }\n}\nfunction getMatch(str: string, state: string | null): MatchResult | null {\n  const keys = searchKeysForState(state);\n  let result: MatchResult | null = null;\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    const regex = regExps[key];\n    const label = searchLabels[key];\n    const match = regex.exec(str);\n    if (match) {\n      const idx = match.index;\n      const substr = match[0];\n      const len = substr.length;\n      if (idx === 0) {\n        return { idx, len, label, substr };\n      }\n      if (!result || idx < result.idx) {\n        result = { idx, len, label, substr };\n      }\n    }\n  }\n  return result;\n}\n\nfunction getDepName(url: string | null): string | null {\n  if (!url) {\n    return null;\n  }\n  try {\n    const { host, pathname } = new URL(url);\n    if (host === 'github.com' || host === 'gitlab.com') {\n      return pathname\n        .replace(regEx(/^\\//), '')\n        .replace(regEx(/\\.git$/), '')\n        .replace(regEx(/\\/$/), '');\n    }\n    return url;\n  } catch (e) {\n    return null;\n  }\n}\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string | null = null\n): PackageFile | null {\n  if (!content) {\n    return null;\n  }\n\n  const deps: PackageDependency[] = [];\n  const result: PackageFile = {\n    packageFile,\n    deps,\n  };\n\n  let restStr = content;\n  let state: string | null = null;\n  let match = getMatch(restStr, state);\n\n  let packageName: string | null = null;\n  let currentValue: string | null = null;\n\n  function yieldDep(): void {\n    const depName = getDepName(packageName);\n    if (depName && currentValue) {\n      const dep: PackageDependency = {\n        datasource: GitTagsDatasource.id,\n        depName,\n        packageName,\n        currentValue,\n      };\n\n      deps.push(dep);\n    }\n    packageName = null;\n    currentValue = null;\n  }\n\n  while (match) {\n    const { idx, len, label, substr } = match;\n\n    switch (state) {\n      case null:\n        if (deps.length) {\n          break;\n        }\n        if (label === DEPS) {\n          state = 'dependencies';\n        }\n        break;\n      case 'dependencies':\n        if (label === COLON) {\n          state = 'dependencies:';\n        } else if (label !== SPACE) {\n          state = null;\n        }\n        break;\n      case 'dependencies:':\n        if (label === BEGIN_SECTION) {\n          state = 'dependencies: [';\n        } else if (label !== SPACE) {\n          state = null;\n        }\n        break;\n      case 'dependencies: [':\n        if (label === END_SECTION) {\n          yieldDep();\n          state = null;\n        } else if (label === PACKAGE) {\n          yieldDep();\n          state = '.package(';\n        }\n        break;\n      case '.package(':\n        if (label === END_SECTION) {\n          yieldDep();\n          state = null;\n        } else if (label === URL_KEY) {\n          state = '.package(url';\n        } else if (label === PACKAGE) {\n          yieldDep();\n        }\n        break;\n      case '.package(url':\n        if (label === END_SECTION) {\n          yieldDep();\n          state = null;\n        } else if (label === COLON) {\n          state = '.package(url:';\n        } else if (label === PACKAGE) {\n          yieldDep();\n          state = '.package(';\n        }\n        break;\n      case '.package(url:':\n        if (label === END_SECTION) {\n          yieldDep();\n          state = null;\n        } else if (label === STRING_LITERAL) {\n          packageName = substr\n            .replace(regEx(/^\"/), '')\n            .replace(regEx(/\"$/), '');\n          state = '.package(url: [depName]';\n        } else if (label === PACKAGE) {\n          yieldDep();\n          state = '.package(';\n        }\n        break;\n      case '.package(url: [depName]':\n        if (label === END_SECTION) {\n          yieldDep();\n          state = null;\n        } else if (label === COMMA) {\n          state = '.package(url: [depName],';\n        } else if (label === PACKAGE) {\n          yieldDep();\n          state = '.package(';\n        }\n        break;\n      case '.package(url: [depName],':\n        if (label === END_SECTION) {\n          yieldDep();\n          state = null;\n        } else if (label === FROM) {\n          currentValue = substr;\n          state = '.package(url: [depName], from';\n        } else if (label === STRING_LITERAL) {\n          currentValue = substr;\n          state = '.package(url: [depName], [value]';\n        } else if (label === RANGE_OP) {\n          currentValue = substr;\n          state = '.package(url: [depName], [rangeFrom][rangeOp]';\n        } else if (label === EXACT_VERSION) {\n          state = '.package(url: [depName], .exact(';\n        } else if (label === PACKAGE) {\n          yieldDep();\n          state = '.package(';\n        }\n        break;\n      case '.package(url: [depName], .exact(':\n        if (label === END_SECTION) {\n          yieldDep();\n          state = null;\n        } else if (label === STRING_LITERAL) {\n          currentValue = substr.slice(1, substr.length - 1);\n          yieldDep();\n        } else if (label === PACKAGE) {\n          yieldDep();\n          state = '.package(';\n        }\n        break;\n      case '.package(url: [depName], from':\n        if (label === END_SECTION) {\n          yieldDep();\n          state = null;\n        } else if (label === COLON) {\n          currentValue += substr;\n          state = '.package(url: [depName], from:';\n        } else if (label === SPACE) {\n          currentValue += substr;\n        } else if (label === PACKAGE) {\n          yieldDep();\n          state = '.package(';\n        }\n        break;\n      case '.package(url: [depName], from:':\n        if (label === END_SECTION) {\n          yieldDep();\n          state = null;\n        } else if (label === STRING_LITERAL) {\n          currentValue += substr;\n          yieldDep();\n          state = 'dependencies: [';\n        } else if (label === SPACE) {\n          currentValue += substr;\n        } else if (label === PACKAGE) {\n          yieldDep();\n          state = '.package(';\n        }\n        break;\n      case '.package(url: [depName], [value]':\n        if (label === END_SECTION) {\n          yieldDep();\n          state = null;\n        } else if (label === RANGE_OP) {\n          currentValue += substr;\n          state = '.package(url: [depName], [rangeFrom][rangeOp]';\n        } else if (label === SPACE) {\n          currentValue += substr;\n        } else if (label === PACKAGE) {\n          yieldDep();\n          state = '.package(';\n        }\n        break;\n      case '.package(url: [depName], [rangeFrom][rangeOp]':\n        if (label === END_SECTION) {\n          yieldDep();\n          state = null;\n        } else if (label === STRING_LITERAL) {\n          currentValue += substr;\n          state = 'dependencies: [';\n        } else if (label === SPACE) {\n          currentValue += substr;\n        } else if (label === PACKAGE) {\n          yieldDep();\n          state = '.package(';\n        }\n        break;\n    }\n    restStr = restStr.slice(idx + len);\n    match = getMatch(restStr, state);\n  }\n  return deps.length ? result : null;\n}\n"]}