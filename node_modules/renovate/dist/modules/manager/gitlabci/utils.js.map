{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/modules/manager/gitlabci/utils.ts"],"names":[],"mappings":";;;AAAA,+CAA4C;AAC5C,mDAA+C;AAG/C,MAAM,EAAE,GAAG,uBAAuB,CAAC;AAEnC;;;;;GAKG;AACH,SAAgB,oBAAoB,CAAC,OAAe;IAClD,MAAM,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACpC,OAAO,GAAG,CAAC;AACb,CAAC;AAHD,oDAGC;AAED,MAAM,UAAU,GAAG,IAAA,aAAK,EACtB,2FAA2F,CAC5F,CAAC;AAEF;;;;GAIG;AACH,SAAgB,YAAY,CAC1B,SAAiB,EACjB,eAAwC;IAExC,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzC,IAAI,KAAK,EAAE,MAAM,EAAE;QACjB,MAAM,GAAG,GAAG,EAAE,GAAG,IAAA,gBAAM,EAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC;QAC1E,sBAAsB;QACtB,4EAA4E;QAC5E,GAAG,CAAC,yBAAyB,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,yBAAyB,EAAE,CAAC;QACzF,OAAO,GAAG,CAAC;KACZ;IACD,OAAO,IAAA,gBAAM,EAAC,SAAS,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;AAClD,CAAC;AAbD,oCAaC","sourcesContent":["import { regEx } from '../../../util/regex';\nimport { getDep } from '../dockerfile/extract';\nimport type { PackageDependency } from '../types';\n\nconst re = /!reference \\[(.*?)\\]/g;\n\n/**\n * Replaces GitLab reference tags before parsing, because our yaml parser cannot process them anyway.\n * @param content pipeline yaml\n * @returns replaced pipeline content\n * https://docs.gitlab.com/ee/ci/yaml/#reference-tags\n */\nexport function replaceReferenceTags(content: string): string {\n  const res = content.replace(re, '');\n  return res;\n}\n\nconst depProxyRe = regEx(\n  `(?<prefix>\\\\$\\\\{?CI_DEPENDENCY_PROXY_(?:DIRECT_)?GROUP_IMAGE_PREFIX\\\\}?\\\\/)(?<depName>.+)`\n);\n\n/**\n * Get image dependencies respecting Gitlab Dependency Proxy\n * @param imageName as used in .gitlab-ci.yml file\n * @return package dependency for the image\n */\nexport function getGitlabDep(\n  imageName: string,\n  registryAliases?: Record<string, string>\n): PackageDependency {\n  const match = depProxyRe.exec(imageName);\n  if (match?.groups) {\n    const dep = { ...getDep(match.groups.depName), replaceString: imageName };\n    // TODO: types (#7154)\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    dep.autoReplaceStringTemplate = `${match.groups.prefix}${dep.autoReplaceStringTemplate}`;\n    return dep;\n  }\n  return getDep(imageName, true, registryAliases);\n}\n"]}