{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/modules/manager/composer/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// TODO: types (#7154)\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { quote } from 'shlex';\nimport { GlobalConfig } from '../../../config/global';\nimport { logger } from '../../../logger';\nimport type { ToolConstraint } from '../../../util/exec/types';\nimport { api, id as composerVersioningId } from '../../versioning/composer';\nimport type { UpdateArtifactsConfig } from '../types';\nimport type { ComposerConfig, ComposerLock } from './types';\n\nexport { composerVersioningId };\n\nconst depRequireInstall = new Set(['symfony/flex']);\n\nexport function getComposerArguments(\n  config: UpdateArtifactsConfig,\n  toolConstraint: ToolConstraint\n): string {\n  let args = '';\n\n  if (config.composerIgnorePlatformReqs) {\n    if (config.composerIgnorePlatformReqs.length === 0) {\n      // TODO: toolConstraint.constraint can be null or undefined? (#7154)\n      const major = api.getMajor(toolConstraint.constraint!);\n      const minor = api.getMinor(toolConstraint.constraint!);\n      args += api.matches(`${major}.${minor}`, '^2.2')\n        ? \" --ignore-platform-req='ext-*' --ignore-platform-req='lib-*'\"\n        : ' --ignore-platform-reqs';\n    } else {\n      config.composerIgnorePlatformReqs.forEach((req) => {\n        args += ' --ignore-platform-req ' + quote(req);\n      });\n    }\n  }\n\n  args += ' --no-ansi --no-interaction';\n  if (!GlobalConfig.get('allowScripts') || config.ignoreScripts) {\n    args += ' --no-scripts --no-autoloader';\n  }\n\n  if (!GlobalConfig.get('allowPlugins') || config.ignorePlugins) {\n    args += ' --no-plugins';\n  }\n\n  return args;\n}\n\nexport function getPhpConstraint(\n  constraints: Record<string, string>\n): string | null {\n  const { php } = constraints;\n\n  if (php) {\n    logger.debug('Using php constraint from config');\n    return php;\n  }\n\n  return null;\n}\n\nexport function requireComposerDependencyInstallation(\n  lock: ComposerLock\n): boolean {\n  return (\n    lock.packages?.some((p) => depRequireInstall.has(p.name)) === true ||\n    lock['packages-dev']?.some((p) => depRequireInstall.has(p.name)) === true\n  );\n}\n\nexport function extractConstraints(\n  composerJson: ComposerConfig,\n  lockParsed: ComposerLock\n): Record<string, string> {\n  const res: Record<string, string> = { composer: '1.*' };\n\n  // extract php\n  if (composerJson.config?.platform?.php) {\n    res.php = composerJson.config.platform.php;\n  } else if (composerJson.require?.php) {\n    res.php = composerJson.require.php;\n  }\n\n  // extract direct composer dependency\n  if (composerJson.require?.['composer/composer']) {\n    res.composer = composerJson.require?.['composer/composer'];\n  } else if (composerJson['require-dev']?.['composer/composer']) {\n    res.composer = composerJson['require-dev']?.['composer/composer'];\n  }\n  // composer platform package\n  else if (composerJson.require?.['composer']) {\n    res.composer = composerJson.require?.['composer'];\n  } else if (composerJson['require-dev']?.['composer']) {\n    res.composer = composerJson['require-dev']?.['composer'];\n  }\n  // check last used composer version\n  else if (lockParsed?.['plugin-api-version']) {\n    const major = api.getMajor(lockParsed?.['plugin-api-version']);\n    const minor = api.getMinor(lockParsed?.['plugin-api-version']);\n    res.composer = `^${major}.${minor}`;\n  }\n  // check composer api dependency\n  else if (composerJson.require?.['composer-runtime-api']) {\n    const major = api.getMajor(composerJson.require?.['composer-runtime-api']);\n    const minor = api.getMinor(composerJson.require?.['composer-runtime-api']);\n    res.composer = `^${major}.${minor}`;\n  }\n  return res;\n}\n"]}