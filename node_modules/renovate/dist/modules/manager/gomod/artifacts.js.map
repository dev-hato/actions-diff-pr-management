{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../../lib/modules/manager/gomod/artifacts.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport upath from 'upath';\nimport { GlobalConfig } from '../../../config/global';\nimport { PlatformId } from '../../../constants';\nimport { TEMPORARY_ERROR } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { exec } from '../../../util/exec';\nimport type { ExecOptions } from '../../../util/exec/types';\nimport {\n  ensureCacheDir,\n  readLocalFile,\n  writeLocalFile,\n} from '../../../util/fs';\nimport { getRepoStatus } from '../../../util/git';\nimport { getGitAuthenticatedEnvironmentVariables } from '../../../util/git/auth';\nimport { find, getAll } from '../../../util/host-rules';\nimport { regEx } from '../../../util/regex';\nimport { createURLFromHostOrURL, validateUrl } from '../../../util/url';\nimport { isValid } from '../../versioning/semver';\nimport type {\n  PackageDependency,\n  UpdateArtifact,\n  UpdateArtifactsConfig,\n  UpdateArtifactsResult,\n} from '../types';\n\nfunction getGitEnvironmentVariables(): NodeJS.ProcessEnv {\n  let environmentVariables: NodeJS.ProcessEnv = {};\n\n  // hard-coded logic to use authentication for github.com based on the githubToken for api.github.com\n  const githubToken = find({\n    hostType: PlatformId.Github,\n    url: 'https://api.github.com/',\n  });\n\n  if (githubToken?.token) {\n    environmentVariables = getGitAuthenticatedEnvironmentVariables(\n      'https://github.com/',\n      githubToken\n    );\n  }\n\n  // get extra host rules for other git-based Go Module hosts\n  const hostRules = getAll() || [];\n\n  const goGitAllowedHostType: (string | undefined)[] = [\n    // All known git platforms\n    PlatformId.Azure,\n    PlatformId.Bitbucket,\n    PlatformId.BitbucketServer,\n    PlatformId.Gitea,\n    PlatformId.Github,\n    PlatformId.Gitlab,\n    // plus all without a host type (=== undefined)\n    undefined,\n  ];\n\n  // for each hostRule we add additional authentication variables to the environmentVariables\n  for (const hostRule of hostRules) {\n    if (\n      hostRule?.token &&\n      hostRule.matchHost &&\n      goGitAllowedHostType.includes(hostRule.hostType)\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      const httpUrl = createURLFromHostOrURL(hostRule.matchHost!)?.toString();\n      if (validateUrl(httpUrl)) {\n        logger.debug(\n          // TODO: types (#7154)\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          `Adding Git authentication for Go Module retrieval for ${httpUrl} using token auth.`\n        );\n        environmentVariables = getGitAuthenticatedEnvironmentVariables(\n          httpUrl!,\n          hostRule,\n          environmentVariables\n        );\n      } else {\n        logger.warn(\n          `Could not parse registryUrl ${hostRule.matchHost} or not using http(s). Ignoring`\n        );\n      }\n    }\n  }\n  return environmentVariables;\n}\n\nfunction getUpdateImportPathCmds(\n  updatedDeps: PackageDependency[],\n  { constraints, newMajor }: UpdateArtifactsConfig\n): string[] {\n  const updateImportCommands = updatedDeps\n    .map((dep) => dep.depName!)\n    .filter((x) => !x.startsWith('gopkg.in'))\n    // TODO: types (#7154)\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    .map((depName) => `mod upgrade --mod-name=${depName} -t=${newMajor}`);\n\n  if (updateImportCommands.length > 0) {\n    let installMarwanModArgs =\n      'install github.com/marwan-at-work/mod/cmd/mod@latest';\n    const gomodModCompatibility = constraints?.gomodMod;\n    if (gomodModCompatibility) {\n      if (\n        gomodModCompatibility.startsWith('v') &&\n        isValid(gomodModCompatibility.replace(regEx(/^v/), ''))\n      ) {\n        installMarwanModArgs = installMarwanModArgs.replace(\n          regEx(/@latest$/),\n          `@${gomodModCompatibility}`\n        );\n      } else {\n        logger.debug(\n          { gomodModCompatibility },\n          'marwan-at-work/mod compatibility range is not valid - skipping'\n        );\n      }\n    } else {\n      logger.debug(\n        'No marwan-at-work/mod compatibility range found - installing marwan-at-work/mod latest'\n      );\n    }\n    updateImportCommands.unshift(`go ${installMarwanModArgs}`);\n  }\n\n  return updateImportCommands;\n}\n\nfunction useModcacherw(goVersion: string | undefined): boolean {\n  if (!is.string(goVersion)) {\n    return true;\n  }\n\n  const [, majorPart, minorPart] = regEx(/(\\d+)\\.(\\d+)/).exec(goVersion) ?? [];\n  const [major, minor] = [majorPart, minorPart].map((x) => parseInt(x, 10));\n\n  return (\n    !Number.isNaN(major) &&\n    !Number.isNaN(minor) &&\n    (major > 1 || (major === 1 && minor >= 14))\n  );\n}\n\nexport async function updateArtifacts({\n  packageFileName: goModFileName,\n  updatedDeps,\n  newPackageFileContent: newGoModContent,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  logger.debug(`gomod.updateArtifacts(${goModFileName})`);\n\n  const sumFileName = goModFileName.replace(regEx(/\\.mod$/), '.sum');\n  const existingGoSumContent = await readLocalFile(sumFileName);\n  if (!existingGoSumContent) {\n    logger.debug('No go.sum found');\n    return null;\n  }\n\n  const vendorDir = upath.join(upath.dirname(goModFileName), 'vendor/');\n  const vendorModulesFileName = upath.join(vendorDir, 'modules.txt');\n  const useVendor = (await readLocalFile(vendorModulesFileName)) !== null;\n\n  let massagedGoMod = newGoModContent;\n\n  if (config.postUpdateOptions?.includes('gomodMassage')) {\n    // Regex match inline replace directive, example:\n    // replace golang.org/x/net v1.2.3 => example.com/fork/net v1.4.5\n    // https://go.dev/ref/mod#go-mod-file-replace\n\n    // replace bracket after comments, so it doesn't break the regex, doing a complex regex causes problems\n    // when there's a comment and \")\" after it, the regex will read replace block until comment.. and stop.\n    massagedGoMod = massagedGoMod\n      .split('\\n')\n      .map((line) => {\n        if (line.trim().startsWith('//')) {\n          return line.replace(')', 'renovate-replace-bracket');\n        }\n        return line;\n      })\n      .join('\\n');\n\n    const inlineReplaceRegEx = regEx(\n      /(\\r?\\n)(replace\\s+[^\\s]+\\s+=>\\s+\\.\\.\\/.*)/g\n    );\n\n    // $1 will be matched with the (\\r?n) group\n    // $2 will be matched with the inline replace match, example\n    // \"// renovate-replace replace golang.org/x/net v1.2.3 => example.com/fork/net v1.4.5\"\n    const inlineCommentOut = '$1// renovate-replace $2';\n\n    // Regex match replace directive block, example:\n    // replace (\n    //     golang.org/x/net v1.2.3 => example.com/fork/net v1.4.5\n    // )\n    const blockReplaceRegEx = regEx(/(\\r?\\n)replace\\s*\\([^)]+\\s*\\)/g);\n\n    /**\n     * replacerFunction for commenting out replace blocks\n     * @param match A string representing a golang replace directive block\n     * @returns A commented out block with // renovate-replace\n     */\n    const blockCommentOut = (match: string): string =>\n      match.replace(/(\\r?\\n)/g, '$1// renovate-replace ');\n\n    // Comment out golang replace directives\n    massagedGoMod = massagedGoMod\n      .replace(inlineReplaceRegEx, inlineCommentOut)\n      .replace(blockReplaceRegEx, blockCommentOut);\n\n    if (massagedGoMod !== newGoModContent) {\n      logger.debug(\n        'Removed some relative replace statements and comments from go.mod'\n      );\n    }\n  }\n  try {\n    await writeLocalFile(goModFileName, massagedGoMod);\n\n    const cmd = 'go';\n    const execOptions: ExecOptions = {\n      cwdFile: goModFileName,\n      extraEnv: {\n        GOPATH: await ensureCacheDir('go'),\n        GOPROXY: process.env.GOPROXY,\n        GOPRIVATE: process.env.GOPRIVATE,\n        GONOPROXY: process.env.GONOPROXY,\n        GONOSUMDB: process.env.GONOSUMDB,\n        GOSUMDB: process.env.GOSUMDB,\n        GOINSECURE: process.env.GOINSECURE,\n        GOFLAGS: useModcacherw(config.constraints?.go) ? '-modcacherw' : null,\n        CGO_ENABLED: GlobalConfig.get('binarySource') === 'docker' ? '0' : null,\n        ...getGitEnvironmentVariables(),\n      },\n      docker: {\n        image: 'go',\n        tagConstraint: config.constraints?.go,\n        tagScheme: 'npm',\n      },\n    };\n\n    const execCommands: string[] = [];\n\n    let args = 'get -d -t ./...';\n    logger.debug({ cmd, args }, 'go get command included');\n    execCommands.push(`${cmd} ${args}`);\n\n    // Update import paths on major updates above v1\n    const isImportPathUpdateRequired =\n      config.postUpdateOptions?.includes('gomodUpdateImportPaths') &&\n      config.updateType === 'major' &&\n      config.newMajor! > 1;\n    if (isImportPathUpdateRequired) {\n      const updateImportCmds = getUpdateImportPathCmds(updatedDeps, config);\n      if (updateImportCmds.length > 0) {\n        logger.debug(updateImportCmds, 'update import path commands included');\n        // The updates\n        execCommands.push(...updateImportCmds);\n      }\n    }\n\n    const mustSkipGoModTidy =\n      !config.postUpdateOptions?.includes('gomodUpdateImportPaths') &&\n      config.updateType === 'major';\n    if (mustSkipGoModTidy) {\n      logger.debug({ cmd, args }, 'go mod tidy command skipped');\n    }\n\n    const tidyOpts = config.postUpdateOptions?.includes('gomodTidy1.17')\n      ? ' -compat=1.17'\n      : '';\n    const isGoModTidyRequired =\n      !mustSkipGoModTidy &&\n      (config.postUpdateOptions?.includes('gomodTidy') ||\n        config.postUpdateOptions?.includes('gomodTidy1.17') ||\n        (config.updateType === 'major' && isImportPathUpdateRequired));\n    if (isGoModTidyRequired) {\n      args = 'mod tidy' + tidyOpts;\n      logger.debug({ cmd, args }, 'go mod tidy command included');\n      execCommands.push(`${cmd} ${args}`);\n    }\n\n    if (useVendor) {\n      args = 'mod vendor';\n      logger.debug({ cmd, args }, 'go mod vendor command included');\n      execCommands.push(`${cmd} ${args}`);\n      if (isGoModTidyRequired) {\n        args = 'mod tidy' + tidyOpts;\n        logger.debug({ cmd, args }, 'go mod tidy command included');\n        execCommands.push(`${cmd} ${args}`);\n      }\n    }\n\n    // We tidy one more time as a solution for #6795\n    if (isGoModTidyRequired) {\n      args = 'mod tidy' + tidyOpts;\n      logger.debug({ cmd, args }, 'additional go mod tidy command included');\n      execCommands.push(`${cmd} ${args}`);\n    }\n\n    await exec(execCommands, execOptions);\n\n    const status = await getRepoStatus();\n    if (!status.modified.includes(sumFileName)) {\n      return null;\n    }\n\n    logger.debug('Returning updated go.sum');\n    const res: UpdateArtifactsResult[] = [\n      {\n        file: {\n          type: 'addition',\n          path: sumFileName,\n          contents: await readLocalFile(sumFileName),\n        },\n      },\n    ];\n\n    // Include all the .go file import changes\n    if (isImportPathUpdateRequired) {\n      logger.debug('Returning updated go source files for import path changes');\n      for (const f of status.modified) {\n        if (f.endsWith('.go')) {\n          res.push({\n            file: {\n              type: 'addition',\n              path: f,\n              contents: await readLocalFile(f),\n            },\n          });\n        }\n      }\n    }\n\n    if (useVendor) {\n      for (const f of status.modified.concat(status.not_added)) {\n        if (f.startsWith(vendorDir)) {\n          res.push({\n            file: {\n              type: 'addition',\n              path: f,\n              contents: await readLocalFile(f),\n            },\n          });\n        }\n      }\n      for (const f of status.deleted || []) {\n        res.push({\n          file: {\n            type: 'deletion',\n            path: f,\n          },\n        });\n      }\n    }\n\n    // TODO #7154\n    const finalGoModContent = (await readLocalFile(goModFileName, 'utf8'))!\n      .replace(regEx(/\\/\\/ renovate-replace /g), '')\n      .replace(regEx(/renovate-replace-bracket/g), ')');\n    if (finalGoModContent !== newGoModContent) {\n      logger.debug('Found updated go.mod after go.sum update');\n      res.push({\n        file: {\n          type: 'addition',\n          path: goModFileName,\n          contents: finalGoModContent,\n        },\n      });\n    }\n    return res;\n  } catch (err) {\n    // istanbul ignore if\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    logger.debug({ err }, 'Failed to update go.sum');\n    return [\n      {\n        artifactError: {\n          lockFile: sumFileName,\n          stderr: err.message,\n        },\n      },\n    ];\n  }\n}\n"]}