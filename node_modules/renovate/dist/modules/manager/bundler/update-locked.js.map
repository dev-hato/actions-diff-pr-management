{"version":3,"file":"update-locked.js","sourceRoot":"","sources":["../../../../lib/modules/manager/bundler/update-locked.ts"],"names":[],"mappings":";;;AAAA,4CAAyC;AAEzC,qDAA0D;AAE1D,uDAAuD;AAEvD,SAAgB,sBAAsB,CACpC,MAA0B;IAE1B,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,UAAU,EAAE,QAAQ,EAAE,eAAe,EAAE,GACtE,MAAM,CAAC;IACT,eAAM,CAAC,KAAK;IACV,sBAAsB;IACtB,4EAA4E;IAC5E,mCAAmC,OAAO,IAAI,cAAc,OAAO,UAAU,KAAK,QAAQ,GAAG,CAC9F,CAAC;IACF,IAAI;QACF,MAAM,MAAM,GAAG,IAAA,uCAAsB,EACnC,eAAe,IAAI,+CAA+C,CAAC,EAAE,CACtE,CAAC;QACF,IACE,MAAM,CAAC,GAAG,CACR,OAAO,IAAI,+CAA+C,CAAC,EAAE,CAC9D,KAAK,UAAU,EAChB;YACA,OAAO,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC;SACtC;QACD,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC;KAClC;IAAC,OAAO,GAAG,EAAE,0BAA0B,CAAC;QACvC,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,wCAAwC,CAAC,CAAC;QAChE,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,CAAC;KACpC;AACH,CAAC;AA1BD,wDA0BC","sourcesContent":["import { logger } from '../../../logger';\nimport type { UpdateLockedConfig, UpdateLockedResult } from '../types';\nimport { extractLockFileEntries } from './locked-version';\n\n// TODO: fix coverage after strict null checks finished\n\nexport function updateLockedDependency(\n  config: UpdateLockedConfig\n): UpdateLockedResult {\n  const { depName, currentVersion, newVersion, lockFile, lockFileContent } =\n    config;\n  logger.debug(\n    // TODO: types (#7154)\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    `bundler.updateLockedDependency: ${depName}@${currentVersion} -> ${newVersion} [${lockFile}]`\n  );\n  try {\n    const locked = extractLockFileEntries(\n      lockFileContent ?? /* istanbul ignore next: should never happen */ ''\n    );\n    if (\n      locked.get(\n        depName ?? /* istanbul ignore next: should never happen */ ''\n      ) === newVersion\n    ) {\n      return { status: 'already-updated' };\n    }\n    return { status: 'unsupported' };\n  } catch (err) /* istanbul ignore next */ {\n    logger.debug({ err }, 'bundler.updateLockedDependency() error');\n    return { status: 'update-failed' };\n  }\n}\n"]}