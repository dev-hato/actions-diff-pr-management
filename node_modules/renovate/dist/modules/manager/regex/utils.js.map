{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/modules/manager/regex/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { URL } from 'url';\nimport is from '@sindresorhus/is';\nimport type { RegexManagerTemplates } from '../../../config/types';\nimport { logger } from '../../../logger';\nimport * as template from '../../../util/template';\nimport type { CustomExtractConfig, PackageDependency } from '../types';\nimport type { ExtractionTemplate } from './types';\n\nexport const validMatchFields = [\n  'depName',\n  'packageName',\n  'currentValue',\n  'currentDigest',\n  'datasource',\n  'versioning',\n  'extractVersion',\n  'registryUrl',\n  'depType',\n] as const;\n\ntype ValidMatchFields = typeof validMatchFields[number];\n\nexport function createDependency(\n  extractionTemplate: ExtractionTemplate,\n  config: CustomExtractConfig,\n  dep?: PackageDependency\n): PackageDependency | null {\n  const dependency = dep ?? {};\n  const { groups, replaceString } = extractionTemplate;\n\n  function updateDependency(field: ValidMatchFields, value: string): void {\n    switch (field) {\n      case 'registryUrl':\n        // check if URL is valid and pack inside an array\n        try {\n          const url = new URL(value).toString();\n          dependency.registryUrls = [url];\n        } catch (err) {\n          logger.warn({ value }, 'Invalid regex manager registryUrl');\n        }\n        break;\n      default:\n        dependency[field] = value;\n        break;\n    }\n  }\n\n  for (const field of validMatchFields) {\n    const fieldTemplate = `${field}Template` as keyof RegexManagerTemplates;\n    const tmpl = config[fieldTemplate];\n    if (tmpl) {\n      try {\n        const compiled = template.compile(tmpl, groups, false);\n        updateDependency(field, compiled);\n      } catch (err) {\n        logger.warn(\n          { template: tmpl },\n          'Error compiling template for custom manager'\n        );\n        return null;\n      }\n    } else if (groups[field]) {\n      updateDependency(field, groups[field]);\n    }\n  }\n  dependency.replaceString = replaceString;\n  return dependency;\n}\n\nexport function regexMatchAll(\n  regex: RegExp,\n  content: string\n): RegExpMatchArray[] {\n  const matches: RegExpMatchArray[] = [];\n  let matchResult: RegExpMatchArray | null;\n  do {\n    matchResult = regex.exec(content);\n    if (matchResult) {\n      matches.push(matchResult);\n    }\n  } while (matchResult);\n  return matches;\n}\n\nexport function mergeGroups(\n  mergedGroup: Record<string, string>,\n  secondGroup: Record<string, string>\n): Record<string, string> {\n  return { ...mergedGroup, ...secondGroup };\n}\n\nexport function mergeExtractionTemplate(\n  base: ExtractionTemplate,\n  addition: ExtractionTemplate\n): ExtractionTemplate {\n  return {\n    groups: mergeGroups(base.groups, addition.groups),\n    replaceString: addition.replaceString ?? base.replaceString,\n  };\n}\n\nexport function isValidDependency({\n  depName,\n  currentValue,\n  currentDigest,\n}: PackageDependency): boolean {\n  // check if all the fields are set\n  return (\n    is.nonEmptyStringAndNotWhitespace(depName) &&\n    (is.nonEmptyStringAndNotWhitespace(currentDigest) ||\n      is.nonEmptyStringAndNotWhitespace(currentValue))\n  );\n}\n"]}