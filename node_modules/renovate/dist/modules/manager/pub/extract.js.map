{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pub/extract.ts"],"names":[],"mappings":";;;AAAA,qCAA+B;AAC/B,4CAAyC;AACzC,gDAAuD;AAGvD,SAAS,OAAO,CACd,OAA6B,EAC7B,MAA2B;IAE3B,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,EAAE,CAAC;KACX;IACD,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE;QAClD,IAAI,OAAO,KAAK,MAAM,EAAE;YACtB,OAAO,GAAG,CAAC;SACZ;QAED,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QAEjC,IAAI,YAAY,GAAkB,IAAI,CAAC;QACvC,IAAI,OAAO,EAAE,OAAO,EAAE;YACpB,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;SAC3C;aAAM,IAAI,OAAO,EAAE;YAClB,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAC/B,YAAY,GAAG,OAAO,CAAC;aACxB;YACD,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAC/B,YAAY,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;aACnC;SACF;QAED,MAAM,GAAG,GAAsB,EAAE,GAAG,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;QAEpE,OAAO,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;IACvB,CAAC,EAAE,EAAyB,CAAC,CAAC;AAChC,CAAC;AAED,SAAgB,kBAAkB,CAChC,OAAe,EACf,WAAmB;IAEnB,IAAI;QACF,uBAAuB;QACvB,MAAM,GAAG,GAAG,IAAA,cAAI,EAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAQ,CAAC;QACjD,MAAM,IAAI,GAAG;YACX,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE;gBAC3B,OAAO,EAAE,cAAc;aACxB,CAAC;YACF,GAAG,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE;gBAC/B,OAAO,EAAE,kBAAkB;aAC5B,CAAC;SACH,CAAC;QAEF,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO;gBACL,WAAW;gBACX,UAAU,EAAE,qBAAc,CAAC,EAAE;gBAC7B,IAAI;aACL,CAAC;SACH;KACF;IAAC,OAAO,CAAC,EAAE;QACV,eAAM,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,EAAE,0BAA0B,CAAC,CAAC;KAC3D;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AA3BD,gDA2BC","sourcesContent":["import { load } from 'js-yaml';\nimport { logger } from '../../../logger';\nimport { DartDatasource } from '../../datasource/dart';\nimport type { PackageDependency, PackageFile } from '../types';\n\nfunction getDeps(\n  depsObj: { [x: string]: any },\n  preset: { depType: string }\n): PackageDependency[] {\n  if (!depsObj) {\n    return [];\n  }\n  return Object.keys(depsObj).reduce((acc, depName) => {\n    if (depName === 'meta') {\n      return acc;\n    }\n\n    const section = depsObj[depName];\n\n    let currentValue: string | null = null;\n    if (section?.version) {\n      currentValue = section.version.toString();\n    } else if (section) {\n      if (typeof section === 'string') {\n        currentValue = section;\n      }\n      if (typeof section === 'number') {\n        currentValue = section.toString();\n      }\n    }\n\n    const dep: PackageDependency = { ...preset, depName, currentValue };\n\n    return [...acc, dep];\n  }, [] as PackageDependency[]);\n}\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string\n): PackageFile | null {\n  try {\n    // TODO: fix me (#9610)\n    const doc = load(content, { json: true }) as any;\n    const deps = [\n      ...getDeps(doc.dependencies, {\n        depType: 'dependencies',\n      }),\n      ...getDeps(doc.dev_dependencies, {\n        depType: 'dev_dependencies',\n      }),\n    ];\n\n    if (deps.length) {\n      return {\n        packageFile,\n        datasource: DartDatasource.id,\n        deps,\n      };\n    }\n  } catch (e) {\n    logger.debug({ packageFile }, 'Can not parse dependency');\n  }\n  return null;\n}\n"]}