{"version":3,"file":"update.js","sourceRoot":"","sources":["../../../../lib/modules/manager/sbt/update.ts"],"names":[],"mappings":";;;;AAAA,4DAA6C;AAC7C,4CAAyC;AACzC,+CAA4C;AAG5C,SAAgB,kBAAkB,CAChC,OAAe,EACf,YAAoB,EACpB,WAAiC;IAEjC,eAAM,CAAC,KAAK,CACV,EAAE,WAAW,EAAE,YAAY,EAAE,EAC7B,8CAA8C,CAC/C,CAAC;IACF,IAAI,aAAa,GAAG,OAAO,CAAC;IAC5B,MAAM,aAAa,GAAG,gBAAM,CAAC,GAAG,CAAC,YAAY,EAAE,WAA0B,CAAC,CAAC;IAC3E,IAAI,CAAC,aAAa,EAAE;QAClB,eAAM,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QAC1C,OAAO,EAAE,aAAa,EAAE,CAAC;KAC1B;IACD,aAAa,GAAG,OAAO,CAAC,OAAO,CAC7B,IAAA,aAAK,EAAC,wBAAwB,CAAC,EAC/B,MAAM,aAAa,GAAG,CACvB,CAAC;IAEF,IAAI,aAAa,KAAK,OAAO,EAAE;QAC7B,eAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;KAC5C;SAAM;QACL,eAAM,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,EAAE,0BAA0B,CAAC,CAAC;KAC7D;IAED,OAAO,EAAE,aAAa,EAAE,CAAC;AAC3B,CAAC;AA3BD,gDA2BC","sourcesContent":["import semver, { ReleaseType } from 'semver';\nimport { logger } from '../../../logger';\nimport { regEx } from '../../../util/regex';\nimport type { BumpPackageVersionResult } from '../types';\n\nexport function bumpPackageVersion(\n  content: string,\n  currentValue: string,\n  bumpVersion: ReleaseType | string\n): BumpPackageVersionResult {\n  logger.debug(\n    { bumpVersion, currentValue },\n    'Checking if we should bump build.sbt version'\n  );\n  let bumpedContent = content;\n  const bumpedVersion = semver.inc(currentValue, bumpVersion as ReleaseType);\n  if (!bumpedVersion) {\n    logger.warn('Version incremental failed');\n    return { bumpedContent };\n  }\n  bumpedContent = content.replace(\n    regEx(/^(version\\s*:=\\s*).*$/m),\n    `$1\"${bumpedVersion}\"`\n  );\n\n  if (bumpedContent === content) {\n    logger.debug('Version was already bumped');\n  } else {\n    logger.debug({ bumpedVersion }, 'Bumped build.sbt version');\n  }\n\n  return { bumpedContent };\n}\n"]}