"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const ansible = tslib_1.__importStar(require("./ansible"));
const ansibleGalaxy = tslib_1.__importStar(require("./ansible-galaxy"));
const argoCD = tslib_1.__importStar(require("./argocd"));
const azurePipelines = tslib_1.__importStar(require("./azure-pipelines"));
const batect = tslib_1.__importStar(require("./batect"));
const batectWrapper = tslib_1.__importStar(require("./batect-wrapper"));
const bazel = tslib_1.__importStar(require("./bazel"));
const bazelisk = tslib_1.__importStar(require("./bazelisk"));
const bitbucketPipelines = tslib_1.__importStar(require("./bitbucket-pipelines"));
const buildkite = tslib_1.__importStar(require("./buildkite"));
const bundler = tslib_1.__importStar(require("./bundler"));
const cake = tslib_1.__importStar(require("./cake"));
const cargo = tslib_1.__importStar(require("./cargo"));
const cdnurl = tslib_1.__importStar(require("./cdnurl"));
const circleci = tslib_1.__importStar(require("./circleci"));
const cloudbuild = tslib_1.__importStar(require("./cloudbuild"));
const cocoapods = tslib_1.__importStar(require("./cocoapods"));
const composer = tslib_1.__importStar(require("./composer"));
const conan = tslib_1.__importStar(require("./conan"));
const depsEdn = tslib_1.__importStar(require("./deps-edn"));
const dockerCompose = tslib_1.__importStar(require("./docker-compose"));
const dockerfile = tslib_1.__importStar(require("./dockerfile"));
const droneci = tslib_1.__importStar(require("./droneci"));
const fleet = tslib_1.__importStar(require("./fleet"));
const flux = tslib_1.__importStar(require("./flux"));
const fvm = tslib_1.__importStar(require("./fvm"));
const gitSubmodules = tslib_1.__importStar(require("./git-submodules"));
const githubActions = tslib_1.__importStar(require("./github-actions"));
const gitlabci = tslib_1.__importStar(require("./gitlabci"));
const gitlabciInclude = tslib_1.__importStar(require("./gitlabci-include"));
const gomod = tslib_1.__importStar(require("./gomod"));
const gradle = tslib_1.__importStar(require("./gradle"));
const gradleWrapper = tslib_1.__importStar(require("./gradle-wrapper"));
const helmRequirements = tslib_1.__importStar(require("./helm-requirements"));
const helmValues = tslib_1.__importStar(require("./helm-values"));
const helmfile = tslib_1.__importStar(require("./helmfile"));
const helmsman = tslib_1.__importStar(require("./helmsman"));
const helmv3 = tslib_1.__importStar(require("./helmv3"));
const hermit = tslib_1.__importStar(require("./hermit"));
const homebrew = tslib_1.__importStar(require("./homebrew"));
const html = tslib_1.__importStar(require("./html"));
const jenkins = tslib_1.__importStar(require("./jenkins"));
const jsonnetBundler = tslib_1.__importStar(require("./jsonnet-bundler"));
const kotlinScript = tslib_1.__importStar(require("./kotlin-script"));
const kubernetes = tslib_1.__importStar(require("./kubernetes"));
const kustomize = tslib_1.__importStar(require("./kustomize"));
const leiningen = tslib_1.__importStar(require("./leiningen"));
const maven = tslib_1.__importStar(require("./maven"));
const meteor = tslib_1.__importStar(require("./meteor"));
const mix = tslib_1.__importStar(require("./mix"));
const nodenv = tslib_1.__importStar(require("./nodenv"));
const npm = tslib_1.__importStar(require("./npm"));
const nuget = tslib_1.__importStar(require("./nuget"));
const nvm = tslib_1.__importStar(require("./nvm"));
const pipCompile = tslib_1.__importStar(require("./pip-compile"));
const pip_requirements = tslib_1.__importStar(require("./pip_requirements"));
const pip_setup = tslib_1.__importStar(require("./pip_setup"));
const pipenv = tslib_1.__importStar(require("./pipenv"));
const poetry = tslib_1.__importStar(require("./poetry"));
const preCommit = tslib_1.__importStar(require("./pre-commit"));
const pub = tslib_1.__importStar(require("./pub"));
const puppet = tslib_1.__importStar(require("./puppet"));
const pyenv = tslib_1.__importStar(require("./pyenv"));
const regex = tslib_1.__importStar(require("./regex"));
const rubyVersion = tslib_1.__importStar(require("./ruby-version"));
const sbt = tslib_1.__importStar(require("./sbt"));
const setupCfg = tslib_1.__importStar(require("./setup-cfg"));
const swift = tslib_1.__importStar(require("./swift"));
const terraform = tslib_1.__importStar(require("./terraform"));
const terraformVersion = tslib_1.__importStar(require("./terraform-version"));
const terragrunt = tslib_1.__importStar(require("./terragrunt"));
const terragruntVersion = tslib_1.__importStar(require("./terragrunt-version"));
const travis = tslib_1.__importStar(require("./travis"));
const velaci = tslib_1.__importStar(require("./velaci"));
const api = new Map();
exports.default = api;
api.set('ansible', ansible);
api.set('ansible-galaxy', ansibleGalaxy);
api.set('argocd', argoCD);
api.set('azure-pipelines', azurePipelines);
api.set('batect', batect);
api.set('batect-wrapper', batectWrapper);
api.set('bazel', bazel);
api.set('bazelisk', bazelisk);
api.set('bitbucket-pipelines', bitbucketPipelines);
api.set('buildkite', buildkite);
api.set('bundler', bundler);
api.set('cake', cake);
api.set('cargo', cargo);
api.set('cdnurl', cdnurl);
api.set('circleci', circleci);
api.set('cloudbuild', cloudbuild);
api.set('cocoapods', cocoapods);
api.set('composer', composer);
api.set('conan', conan);
api.set('deps-edn', depsEdn);
api.set('docker-compose', dockerCompose);
api.set('dockerfile', dockerfile);
api.set('droneci', droneci);
api.set('fleet', fleet);
api.set('flux', flux);
api.set('fvm', fvm);
api.set('git-submodules', gitSubmodules);
api.set('github-actions', githubActions);
api.set('gitlabci', gitlabci);
api.set('gitlabci-include', gitlabciInclude);
api.set('gomod', gomod);
api.set('gradle', gradle);
api.set('gradle-wrapper', gradleWrapper);
api.set('helm-requirements', helmRequirements);
api.set('helm-values', helmValues);
api.set('helmfile', helmfile);
api.set('helmsman', helmsman);
api.set('helmv3', helmv3);
api.set('hermit', hermit);
api.set('homebrew', homebrew);
api.set('html', html);
api.set('jenkins', jenkins);
api.set('jsonnet-bundler', jsonnetBundler);
api.set('kotlin-script', kotlinScript);
api.set('kubernetes', kubernetes);
api.set('kustomize', kustomize);
api.set('leiningen', leiningen);
api.set('maven', maven);
api.set('meteor', meteor);
api.set('mix', mix);
api.set('nodenv', nodenv);
api.set('npm', npm);
api.set('nuget', nuget);
api.set('nvm', nvm);
api.set('pip-compile', pipCompile);
api.set('pip_requirements', pip_requirements);
api.set('pip_setup', pip_setup);
api.set('pipenv', pipenv);
api.set('poetry', poetry);
api.set('pre-commit', preCommit);
api.set('pub', pub);
api.set('puppet', puppet);
api.set('pyenv', pyenv);
api.set('regex', regex);
api.set('ruby-version', rubyVersion);
api.set('sbt', sbt);
api.set('setup-cfg', setupCfg);
api.set('swift', swift);
api.set('terraform', terraform);
api.set('terraform-version', terraformVersion);
api.set('terragrunt', terragrunt);
api.set('terragrunt-version', terragruntVersion);
api.set('travis', travis);
api.set('velaci', velaci);
//# sourceMappingURL=api.js.map