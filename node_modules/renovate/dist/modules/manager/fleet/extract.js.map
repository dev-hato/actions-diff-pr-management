{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/fleet/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { loadAll } from 'js-yaml';\nimport { logger } from '../../../logger';\nimport { regEx } from '../../../util/regex';\nimport { GitTagsDatasource } from '../../datasource/git-tags';\nimport { HelmDatasource } from '../../datasource/helm';\nimport { checkIfStringIsPath } from '../terraform/util';\nimport type { PackageDependency, PackageFile } from '../types';\nimport type { FleetFile, FleetFileHelm, GitRepo } from './types';\n\nfunction extractGitRepo(doc: GitRepo): PackageDependency {\n  const dep: PackageDependency = {\n    depType: 'git_repo',\n    datasource: GitTagsDatasource.id,\n  };\n\n  const repo = doc.spec?.repo;\n  if (!repo) {\n    return {\n      ...dep,\n      skipReason: 'missing-depname',\n    };\n  }\n  dep.sourceUrl = repo;\n  dep.depName = repo;\n\n  const currentValue = doc.spec.revision;\n  if (!currentValue) {\n    return {\n      ...dep,\n      skipReason: 'no-version',\n    };\n  }\n\n  return {\n    ...dep,\n    currentValue,\n  };\n}\n\nfunction extractFleetFile(doc: FleetFileHelm): PackageDependency {\n  const dep: PackageDependency = {\n    depType: 'fleet',\n    datasource: HelmDatasource.id,\n  };\n\n  if (!doc.chart) {\n    return {\n      ...dep,\n      skipReason: 'missing-depname',\n    };\n  }\n  dep.depName = doc.chart;\n\n  if (!doc.repo) {\n    if (checkIfStringIsPath(doc.chart)) {\n      return {\n        ...dep,\n        skipReason: 'local-chart',\n      };\n    }\n    return {\n      ...dep,\n      skipReason: 'no-repository',\n    };\n  }\n  dep.registryUrls = [doc.repo];\n\n  const currentValue = doc.version;\n  if (!doc.version) {\n    return {\n      ...dep,\n      skipReason: 'no-version',\n    };\n  }\n\n  return {\n    ...dep,\n    currentValue,\n  };\n}\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string\n): PackageFile | null {\n  if (!content) {\n    return null;\n  }\n  const deps: PackageDependency[] = [];\n\n  try {\n    if (regEx('fleet.ya?ml').test(packageFile)) {\n      // TODO: fix me (#9610)\n      const docs = loadAll(content, null, { json: true }) as FleetFile[];\n      const fleetDeps = docs\n        .filter((doc) => is.truthy(doc?.helm))\n        .flatMap((doc) => extractFleetFile(doc.helm));\n\n      deps.push(...fleetDeps);\n    } else {\n      // TODO: fix me (#9610)\n      const docs = loadAll(content, null, { json: true }) as GitRepo[];\n      const gitRepoDeps = docs\n        .filter((doc) => doc.kind === 'GitRepo') // ensure only GitRepo manifests are processed\n        .flatMap((doc) => extractGitRepo(doc));\n      deps.push(...gitRepoDeps);\n    }\n  } catch (err) {\n    logger.error({ error: err, packageFile }, 'Failed to parse fleet YAML');\n  }\n\n  return deps.length ? { deps } : null;\n}\n"]}