{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pip_requirements/extract.ts"],"names":[],"mappings":"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","sourcesContent":["// based on https://www.python.org/dev/peps/pep-0508/#names\nimport { RANGE_PATTERN } from '@renovatebot/pep440';\nimport is from '@sindresorhus/is';\nimport { GlobalConfig } from '../../../config/global';\nimport { logger } from '../../../logger';\nimport { isSkipComment } from '../../../util/ignore';\nimport { newlineRegex, regEx } from '../../../util/regex';\nimport { GitTagsDatasource } from '../../datasource/git-tags';\nimport { PypiDatasource } from '../../datasource/pypi';\nimport type { PackageDependency, PackageFile } from '../types';\n\nexport const packagePattern =\n  '[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9]';\nconst extrasPattern = '(?:\\\\s*\\\\[[^\\\\]]+\\\\])?';\nconst packageGitRegex = regEx(\n  /(?<source>(?:git\\+)(?<protocol>git|ssh|https):\\/\\/(?<gitUrl>(?:(?<user>[^@]+)@)?(?<hostname>[\\w.-]+)(?<delimiter>\\/)(?<scmPath>.*\\/(?<depName>[\\w/-]+))(\\.git)?(?:@(?<version>.*))))/\n);\n\nconst rangePattern: string = RANGE_PATTERN;\nconst specifierPartPattern = `\\\\s*${rangePattern.replace(\n  regEx(/\\?<\\w+>/g),\n  '?:'\n)}`;\nconst specifierPattern = `${specifierPartPattern}(?:\\\\s*,${specifierPartPattern})*`;\nexport const dependencyPattern = `(${packagePattern})(${extrasPattern})(${specifierPattern})`;\n\nexport function cleanRegistryUrls(registryUrls: string[]): string[] {\n  return registryUrls.map((url) => {\n    // handle the optional quotes in eg. `--extra-index-url \"https://foo.bar\"`\n    const cleaned = url.replace(regEx(/^\"/), '').replace(regEx(/\"$/), '');\n    if (!GlobalConfig.get('exposeAllEnv')) {\n      return cleaned;\n    }\n    // interpolate any environment variables\n    return cleaned.replace(\n      regEx(/(\\$[A-Za-z\\d_]+)|(\\${[A-Za-z\\d_]+})/g),\n      (match) => {\n        const envvar = match\n          .substring(1)\n          .replace(regEx(/^{/), '')\n          .replace(regEx(/}$/), '');\n        const sub = process.env[envvar];\n        return sub ?? match;\n      }\n    );\n  });\n}\n\nexport function extractPackageFile(content: string): PackageFile | null {\n  logger.trace('pip_requirements.extractPackageFile()');\n\n  let registryUrls: string[] = [];\n  const additionalRegistryUrls: string[] = [];\n  content.split(newlineRegex).forEach((line) => {\n    if (line.startsWith('--index-url ')) {\n      registryUrls = [line.substring('--index-url '.length).split(' ')[0]];\n    }\n    if (line.startsWith('--extra-index-url ')) {\n      const extraUrl = line\n        .substring('--extra-index-url '.length)\n        .split(' ')[0];\n      additionalRegistryUrls.push(extraUrl);\n    }\n  });\n\n  const pkgRegex = regEx(`^(${packagePattern})$`);\n  const pkgValRegex = regEx(`^${dependencyPattern}$`);\n  const deps = content\n    .split(newlineRegex)\n    .map((rawline) => {\n      let dep: PackageDependency = {};\n      const [line, comment] = rawline.split('#').map((part) => part.trim());\n      if (isSkipComment(comment)) {\n        dep.skipReason = 'ignored';\n      }\n      const [lineNoEnvMarkers] = line.split(';').map((part) => part.trim());\n      const lineNoHashes = lineNoEnvMarkers.split(' \\\\')[0];\n      const packageMatches =\n        pkgValRegex.exec(lineNoHashes) ?? pkgRegex.exec(lineNoHashes);\n      const gitPackageMatches = packageGitRegex.exec(lineNoHashes);\n      if (!packageMatches && !gitPackageMatches) {\n        return null;\n      }\n      if (gitPackageMatches?.groups) {\n        const currentVersion = gitPackageMatches.groups.version;\n        const depName = gitPackageMatches.groups.depName;\n        let packageName: string;\n        if (gitPackageMatches.groups.protocol === 'https') {\n          packageName = 'https://'\n            .concat(gitPackageMatches.groups.gitUrl)\n            .replace(`@${currentVersion}`, '');\n        } else {\n          // we need to replace the / with a :\n          const scmPath = gitPackageMatches.groups.scmPath;\n          const delimiter = gitPackageMatches.groups.delimiter;\n          packageName = gitPackageMatches.groups.gitUrl\n            .replace(`${delimiter}${scmPath}`, `:${scmPath}`)\n            .replace(`@${currentVersion}`, '');\n        }\n        dep = {\n          ...dep,\n          depName,\n          currentValue: currentVersion,\n          currentVersion,\n          packageName,\n          datasource: GitTagsDatasource.id,\n        };\n        return dep;\n      }\n\n      // validated above\n      const [, depName, , currVal] = packageMatches!;\n      const currentValue = currVal?.trim();\n      dep = {\n        ...dep,\n        depName,\n        currentValue,\n        datasource: PypiDatasource.id,\n      };\n      if (currentValue?.startsWith('==')) {\n        dep.currentVersion = currentValue.replace(/^==\\s*/, '');\n      }\n      return dep;\n    })\n    .filter(is.truthy);\n  if (!deps.length) {\n    return null;\n  }\n  const res: PackageFile = { deps };\n  if (registryUrls.length > 0) {\n    res.registryUrls = cleanRegistryUrls(registryUrls);\n  }\n  if (additionalRegistryUrls.length) {\n    res.additionalRegistryUrls = cleanRegistryUrls(additionalRegistryUrls);\n  }\n  return res;\n}\n"]}