{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../../lib/modules/manager/batect-wrapper/artifacts.ts"],"names":[],"mappings":";;;AAAA,4CAAyC;AACzC,6CAA0C;AAG1C,MAAM,IAAI,GAAG,IAAI,WAAI,CAAC,gBAAgB,CAAC,CAAC;AAExC,KAAK,UAAU,cAAc,CAC3B,IAAY,EACZ,QAAgB,EAChB,OAAe;IAEf,MAAM,GAAG,GAAG,sDAAsD,OAAO,IAAI,QAAQ,EAAE,CAAC;IAExF,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrC,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;QAE/B,OAAO;YACL,IAAI,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE;SAC3C,CAAC;KACH;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,gBAAgB,GAAW,GAAG,CAAC,QAAQ,EAAE,CAAC;QAEhD,OAAO;YACL,aAAa,EAAE;gBACb,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,YAAY,GAAG,YAAY,gBAAgB,EAAE;aACtD;SACF,CAAC;KACH;AACH,CAAC;AAEM,KAAK,UAAU,eAAe,CAAC,EACpC,eAAe,EACf,MAAM,GACS;IACf,MAAM,OAAO,GAAG,MAAM,CAAC,UAAW,CAAC;IAEnC,eAAM,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,EAAE,iCAAiC,CAAC,CAAC;IAE9E,OAAO;QACL,MAAM,cAAc,CAAC,eAAe,EAAE,QAAQ,EAAE,OAAO,CAAC;QACxD,MAAM,cAAc,CAAC,GAAG,eAAe,MAAM,EAAE,YAAY,EAAE,OAAO,CAAC;KACtE,CAAC;AACJ,CAAC;AAZD,0CAYC","sourcesContent":["import { logger } from '../../../logger';\nimport { Http } from '../../../util/http';\nimport type { UpdateArtifact, UpdateArtifactsResult } from '../types';\n\nconst http = new Http('batect-wrapper');\n\nasync function updateArtifact(\n  path: string,\n  fileName: string,\n  version: string\n): Promise<UpdateArtifactsResult> {\n  const url = `https://github.com/batect/batect/releases/download/${version}/${fileName}`;\n\n  try {\n    const response = await http.get(url);\n    const contents = response.body;\n\n    return {\n      file: { type: 'addition', path, contents },\n    };\n  } catch (err) {\n    const errorDescription: string = err.toString();\n\n    return {\n      artifactError: {\n        lockFile: path,\n        stderr: `HTTP GET ${url} failed: ${errorDescription}`,\n      },\n    };\n  }\n}\n\nexport async function updateArtifacts({\n  packageFileName,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  const version = config.newVersion!;\n\n  logger.debug({ version, packageFileName }, 'Updating Batect wrapper scripts');\n\n  return [\n    await updateArtifact(packageFileName, 'batect', version),\n    await updateArtifact(`${packageFileName}.cmd`, 'batect.cmd', version),\n  ];\n}\n"]}