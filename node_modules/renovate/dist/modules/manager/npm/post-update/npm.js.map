{"version":3,"file":"npm.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/npm/post-update/npm.ts"],"names":[],"mappings":"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","sourcesContent":["import upath from 'upath';\nimport { GlobalConfig } from '../../../../config/global';\nimport {\n  SYSTEM_INSUFFICIENT_DISK_SPACE,\n  TEMPORARY_ERROR,\n} from '../../../../constants/error-messages';\nimport { logger } from '../../../../logger';\nimport { exec } from '../../../../util/exec';\nimport type {\n  ExecOptions,\n  ExtraEnv,\n  ToolConstraint,\n} from '../../../../util/exec/types';\nimport {\n  deleteLocalFile,\n  localPathExists,\n  readLocalFile,\n  renameLocalFile,\n} from '../../../../util/fs';\nimport type { PostUpdateConfig, Upgrade } from '../../types';\nimport { composeLockFile, parseLockFile } from '../utils';\nimport { getNodeConstraint, getNodeUpdate } from './node-version';\nimport type { GenerateLockFileResult } from './types';\n\nexport async function generateLockFile(\n  lockFileDir: string,\n  env: NodeJS.ProcessEnv,\n  filename: string,\n  config: Partial<PostUpdateConfig> = {},\n  upgrades: Upgrade[] = []\n): Promise<GenerateLockFileResult> {\n  // TODO: don't assume package-lock.json is in the same directory\n  const lockFileName = upath.join(lockFileDir, filename);\n\n  logger.debug(`Spawning npm install to create ${lockFileDir}/${filename}`);\n  const { skipInstalls, postUpdateOptions } = config;\n\n  let lockFile: string | null = null;\n  try {\n    const npmToolConstraint: ToolConstraint = {\n      toolName: 'npm',\n      constraint: config.constraints?.npm,\n    };\n    const commands: string[] = [];\n    let cmdOptions = '';\n    if (postUpdateOptions?.includes('npmDedupe') || skipInstalls === false) {\n      logger.debug('Performing node_modules install');\n      cmdOptions += '--no-audit';\n    } else {\n      logger.debug('Updating lock file only');\n      cmdOptions += '--package-lock-only --no-audit';\n    }\n\n    if (!GlobalConfig.get('allowScripts') || config.ignoreScripts) {\n      cmdOptions += ' --ignore-scripts';\n    }\n\n    const tagConstraint =\n      getNodeUpdate(upgrades) ?? (await getNodeConstraint(config));\n    const extraEnv: ExtraEnv = {\n      NPM_CONFIG_CACHE: env.NPM_CONFIG_CACHE,\n      npm_config_store: env.npm_config_store,\n    };\n    const execOptions: ExecOptions = {\n      cwdFile: lockFileName,\n      extraEnv,\n      toolConstraints: [npmToolConstraint],\n      docker: {\n        image: 'node',\n        tagScheme: 'node',\n        tagConstraint,\n      },\n    };\n    // istanbul ignore if\n    if (GlobalConfig.get('exposeAllEnv')) {\n      extraEnv.NPM_AUTH = env.NPM_AUTH;\n      extraEnv.NPM_EMAIL = env.NPM_EMAIL;\n    }\n\n    if (!upgrades.every((upgrade) => upgrade.isLockfileUpdate)) {\n      // This command updates the lock file based on package.json\n      commands.push(`npm install ${cmdOptions}`.trim());\n    }\n\n    // rangeStrategy = update-lockfile\n    const lockUpdates = upgrades.filter((upgrade) => upgrade.isLockfileUpdate);\n    if (lockUpdates.length) {\n      logger.debug('Performing lockfileUpdate (npm)');\n      const updateCmd =\n        `npm install ${cmdOptions}` +\n        lockUpdates\n          // TODO: types (#7154)\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          .map((update) => ` ${update.depName}@${update.newVersion}`)\n          .join('');\n      commands.push(updateCmd);\n    }\n\n    if (upgrades.some((upgrade) => upgrade.isRemediation)) {\n      // We need to run twice to get the correct lock file\n      commands.push(`npm install ${cmdOptions}`.trim());\n    }\n\n    // postUpdateOptions\n    if (config.postUpdateOptions?.includes('npmDedupe')) {\n      logger.debug('Performing npm dedupe');\n      commands.push('npm dedupe');\n    }\n\n    if (upgrades.find((upgrade) => upgrade.isLockFileMaintenance)) {\n      logger.debug(\n        `Removing ${lockFileName} first due to lock file maintenance upgrade`\n      );\n      try {\n        await deleteLocalFile(lockFileName);\n      } catch (err) /* istanbul ignore next */ {\n        logger.debug(\n          { err, lockFileName },\n          'Error removing package-lock.json for lock file maintenance'\n        );\n      }\n    }\n\n    // Run the commands\n    await exec(commands, execOptions);\n\n    // massage to shrinkwrap if necessary\n    if (\n      filename === 'npm-shrinkwrap.json' &&\n      (await localPathExists(upath.join(lockFileDir, 'package-lock.json')))\n    ) {\n      await renameLocalFile(\n        upath.join(lockFileDir, 'package-lock.json'),\n        upath.join(lockFileDir, 'npm-shrinkwrap.json')\n      );\n    }\n\n    // Read the result\n    // TODO #7154\n    lockFile = (await readLocalFile(\n      upath.join(lockFileDir, filename),\n      'utf8'\n    ))!;\n\n    // Massage lockfile counterparts of package.json that were modified\n    // because npm install was called with an explicit version for rangeStrategy=update-lockfile\n    if (lockUpdates.length) {\n      const { detectedIndent, lockFileParsed } = parseLockFile(lockFile);\n      if (lockFileParsed?.lockfileVersion === 2) {\n        lockUpdates.forEach((lockUpdate) => {\n          const depType = lockUpdate.depType as\n            | 'dependencies'\n            | 'optionalDependencies';\n\n          // TODO #7154\n          if (lockFileParsed.packages?.['']?.[depType]?.[lockUpdate.depName!]) {\n            lockFileParsed.packages[''][depType]![lockUpdate.depName!] =\n              lockUpdate.newValue!;\n          }\n        });\n        lockFile = composeLockFile(lockFileParsed, detectedIndent);\n      }\n    }\n  } catch (err) /* istanbul ignore next */ {\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    logger.debug(\n      {\n        err,\n        type: 'npm',\n      },\n      'lock file error'\n    );\n    if (err.stderr?.includes('ENOSPC: no space left on device')) {\n      throw new Error(SYSTEM_INSUFFICIENT_DISK_SPACE);\n    }\n    return { error: true, stderr: err.stderr };\n  }\n  return { lockFile };\n}\n"]}