{"version":3,"file":"pnpm.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/npm/post-update/pnpm.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { load } from 'js-yaml';\nimport upath from 'upath';\nimport { GlobalConfig } from '../../../../config/global';\nimport { TEMPORARY_ERROR } from '../../../../constants/error-messages';\nimport { logger } from '../../../../logger';\nimport { exec } from '../../../../util/exec';\nimport type {\n  ExecOptions,\n  ExtraEnv,\n  ToolConstraint,\n} from '../../../../util/exec/types';\nimport { deleteLocalFile, readLocalFile } from '../../../../util/fs';\nimport type { PostUpdateConfig, Upgrade } from '../../types';\nimport type { NpmPackage } from '../extract/types';\nimport { getNodeConstraint, getNodeUpdate } from './node-version';\nimport type { GenerateLockFileResult, PnpmLockFile } from './types';\n\nexport async function generateLockFile(\n  lockFileDir: string,\n  env: NodeJS.ProcessEnv,\n  config: PostUpdateConfig,\n  upgrades: Upgrade[] = []\n): Promise<GenerateLockFileResult> {\n  const lockFileName = upath.join(lockFileDir, 'pnpm-lock.yaml');\n  logger.debug(`Spawning pnpm install to create ${lockFileName}`);\n  let lockFile: string | null = null;\n  let stdout: string | undefined;\n  let stderr: string | undefined;\n  let cmd = 'pnpm';\n  try {\n    const pnpmToolConstraint: ToolConstraint = {\n      toolName: 'pnpm',\n      constraint:\n        config.constraints?.pnpm ?? (await getPnpmConstraint(lockFileDir)),\n    };\n    const tagConstraint =\n      getNodeUpdate(upgrades) ?? (await getNodeConstraint(config));\n    const extraEnv: ExtraEnv = {\n      NPM_CONFIG_CACHE: env.NPM_CONFIG_CACHE,\n      npm_config_store: env.npm_config_store,\n    };\n    const execOptions: ExecOptions = {\n      cwdFile: lockFileName,\n      extraEnv,\n      docker: {\n        image: 'node',\n        tagScheme: 'node',\n        tagConstraint,\n      },\n      toolConstraints: [pnpmToolConstraint],\n    };\n    // istanbul ignore if\n    if (GlobalConfig.get('exposeAllEnv')) {\n      extraEnv.NPM_AUTH = env.NPM_AUTH;\n      extraEnv.NPM_EMAIL = env.NPM_EMAIL;\n    }\n    cmd = 'pnpm';\n    let args = 'install --recursive --lockfile-only';\n    if (!GlobalConfig.get('allowScripts') || config.ignoreScripts) {\n      args += ' --ignore-scripts';\n      args += ' --ignore-pnpmfile';\n    }\n    logger.debug({ cmd, args }, 'pnpm command');\n\n    if (upgrades.find((upgrade) => upgrade.isLockFileMaintenance)) {\n      logger.debug(\n        `Removing ${lockFileName} first due to lock file maintenance upgrade`\n      );\n      try {\n        await deleteLocalFile(lockFileName);\n      } catch (err) /* istanbul ignore next */ {\n        logger.debug(\n          { err, lockFileName },\n          'Error removing yarn.lock for lock file maintenance'\n        );\n      }\n    }\n\n    await exec(`${cmd} ${args}`, execOptions);\n    lockFile = await readLocalFile(lockFileName, 'utf8');\n  } catch (err) /* istanbul ignore next */ {\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    logger.debug(\n      {\n        cmd,\n        err,\n        stdout,\n        stderr,\n        type: 'pnpm',\n      },\n      'lock file error'\n    );\n    return { error: true, stderr: err.stderr, stdout: err.stdout };\n  }\n  return { lockFile };\n}\n\nasync function getPnpmConstraint(\n  lockFileDir: string\n): Promise<string | undefined> {\n  let result: string | undefined;\n  const rootPackageJson = upath.join(lockFileDir, 'package.json');\n  const content = await readLocalFile(rootPackageJson, 'utf8');\n  if (content) {\n    const packageJson: NpmPackage = JSON.parse(content);\n    const packageManager = packageJson?.packageManager;\n    if (packageManager?.includes('@')) {\n      const nameAndVersion = packageManager.split('@');\n      const name = nameAndVersion[0];\n      if (name === 'pnpm') {\n        result = nameAndVersion[1];\n      }\n    } else {\n      const engines = packageJson?.engines;\n      if (engines) {\n        result = engines['pnpm'];\n      }\n    }\n  }\n  if (!result) {\n    const lockFileName = upath.join(lockFileDir, 'pnpm-lock.yaml');\n    const content = await readLocalFile(lockFileName, 'utf8');\n    if (content) {\n      const pnpmLock = load(content) as PnpmLockFile;\n      if (\n        is.number(pnpmLock.lockfileVersion) &&\n        pnpmLock.lockfileVersion < 5.4\n      ) {\n        result = '<7';\n      }\n    }\n  }\n  return result;\n}\n"]}