{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/npm/post-update/index.ts"],"names":[],"mappings":"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","sourcesContent":["// TODO: types (#7154)\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport is from '@sindresorhus/is';\nimport deepmerge from 'deepmerge';\nimport detectIndent from 'detect-indent';\nimport { dump, load } from 'js-yaml';\nimport upath from 'upath';\nimport { SYSTEM_INSUFFICIENT_DISK_SPACE } from '../../../../constants/error-messages';\nimport { logger } from '../../../../logger';\nimport { ExternalHostError } from '../../../../types/errors/external-host-error';\nimport { getChildProcessEnv } from '../../../../util/exec/env';\nimport {\n  deleteLocalFile,\n  ensureCacheDir,\n  getParentDir,\n  getSiblingFileName,\n  readLocalFile,\n  writeLocalFile,\n} from '../../../../util/fs';\nimport { branchExists, getFile, getRepoStatus } from '../../../../util/git';\nimport type { FileChange } from '../../../../util/git/types';\nimport * as hostRules from '../../../../util/host-rules';\nimport { newlineRegex, regEx } from '../../../../util/regex';\nimport { ensureTrailingSlash } from '../../../../util/url';\nimport { NpmDatasource } from '../../../datasource/npm';\nimport type { PackageFile, PostUpdateConfig, Upgrade } from '../../types';\nimport { getZeroInstallPaths } from '../extract/yarn';\nimport type { NpmDepType, NpmManagerData } from '../types';\nimport { composeLockFile, parseLockFile } from '../utils';\nimport * as lerna from './lerna';\nimport * as npm from './npm';\nimport * as pnpm from './pnpm';\nimport { processHostRules } from './rules';\nimport type {\n  AdditionalPackageFiles,\n  ArtifactError,\n  DetermineLockFileDirsResult,\n  WriteExistingFilesResult,\n} from './types';\nimport * as yarn from './yarn';\n\n// Strips empty values, deduplicates, and returns the directories from filenames\nconst getDirs = (arr: (string | null | undefined)[]): string[] =>\n  Array.from(new Set(arr.filter(is.string)));\n\nexport function determineLockFileDirs(\n  config: PostUpdateConfig,\n  packageFiles: AdditionalPackageFiles\n): DetermineLockFileDirsResult {\n  const npmLockDirs: (string | undefined)[] = [];\n  const yarnLockDirs: (string | undefined)[] = [];\n  const pnpmShrinkwrapDirs: (string | undefined)[] = [];\n  const lernaJsonFiles: (string | undefined)[] = [];\n\n  for (const upgrade of config.upgrades) {\n    if (upgrade.updateType === 'lockFileMaintenance' || upgrade.isRemediation) {\n      // Return every directory that contains a lockfile\n      if (upgrade.managerData?.lernaJsonFile && upgrade.npmLock) {\n        lernaJsonFiles.push(upgrade.managerData.lernaJsonFile);\n      } else {\n        yarnLockDirs.push(upgrade.yarnLock);\n        npmLockDirs.push(upgrade.npmLock);\n        pnpmShrinkwrapDirs.push(upgrade.pnpmShrinkwrap);\n      }\n      continue;\n    }\n    if (upgrade.isLockfileUpdate) {\n      yarnLockDirs.push(upgrade.yarnLock);\n      npmLockDirs.push(upgrade.npmLock);\n    }\n  }\n\n  if (\n    config.upgrades.every(\n      (upgrade: Upgrade) =>\n        upgrade.updateType === 'lockFileMaintenance' || upgrade.isLockfileUpdate\n    )\n  ) {\n    return {\n      yarnLockDirs: getDirs(yarnLockDirs),\n      npmLockDirs: getDirs(npmLockDirs),\n      pnpmShrinkwrapDirs: getDirs(pnpmShrinkwrapDirs),\n      lernaJsonFiles: getDirs(lernaJsonFiles),\n    };\n  }\n\n  function getPackageFile(fileName: string): Partial<PackageFile> {\n    logger.trace('Looking for packageFile: ' + fileName);\n\n    for (const packageFile of packageFiles.npm!) {\n      if (packageFile.packageFile === fileName) {\n        logger.trace({ packageFile }, 'Found packageFile');\n        return packageFile;\n      }\n      logger.trace('No match');\n    }\n    return {};\n  }\n\n  // TODO #7154\n  for (const p of config.updatedPackageFiles!) {\n    logger.trace(`Checking ${String(p.path)} for lock files`);\n    const packageFile = getPackageFile(p.path);\n    // lerna first\n    if (packageFile.managerData?.lernaJsonFile && packageFile.npmLock) {\n      logger.debug(`${packageFile.packageFile} has lerna lock file`);\n      lernaJsonFiles.push(packageFile.managerData.lernaJsonFile);\n    } else if (\n      packageFile.managerData?.lernaJsonFile &&\n      packageFile.yarnLock &&\n      !packageFile.hasYarnWorkspaces\n    ) {\n      lernaJsonFiles.push(packageFile.managerData.lernaJsonFile);\n    } else {\n      // push full lock file names and convert them later\n      yarnLockDirs.push(packageFile.yarnLock);\n      npmLockDirs.push(packageFile.npmLock);\n      pnpmShrinkwrapDirs.push(packageFile.pnpmShrinkwrap);\n    }\n  }\n\n  return {\n    yarnLockDirs: getDirs(yarnLockDirs),\n    npmLockDirs: getDirs(npmLockDirs),\n    pnpmShrinkwrapDirs: getDirs(pnpmShrinkwrapDirs),\n    lernaJsonFiles: getDirs(lernaJsonFiles),\n  };\n}\n\nexport async function writeExistingFiles(\n  config: PostUpdateConfig,\n  packageFiles: AdditionalPackageFiles\n): Promise<void> {\n  if (!packageFiles.npm) {\n    return;\n  }\n  const npmFiles = packageFiles.npm;\n  logger.debug(\n    { packageFiles: npmFiles.map((n) => n.packageFile) },\n    'Writing package.json files'\n  );\n  for (const packageFile of npmFiles) {\n    // TODO #7154\n    const basedir = upath.dirname(packageFile.packageFile!);\n    const npmrc: string = packageFile.npmrc ?? config.npmrc;\n    const npmrcFilename = upath.join(basedir, '.npmrc');\n    if (is.string(npmrc)) {\n      try {\n        await writeLocalFile(npmrcFilename, `${npmrc}\\n`);\n      } catch (err) /* istanbul ignore next */ {\n        logger.warn({ npmrcFilename, err }, 'Error writing .npmrc');\n      }\n    }\n    const { npmLock } = packageFile;\n    if (npmLock) {\n      const npmLockPath = npmLock;\n      if (\n        process.env.RENOVATE_REUSE_PACKAGE_LOCK === 'false' ||\n        config.reuseLockFiles === false\n      ) {\n        logger.debug(`Ensuring ${npmLock} is removed`);\n        await deleteLocalFile(npmLockPath);\n      } else {\n        logger.debug(`Writing ${npmLock}`);\n        let existingNpmLock: string;\n        try {\n          existingNpmLock = (await getFile(npmLock)) ?? '';\n        } catch (err) /* istanbul ignore next */ {\n          logger.warn({ err }, 'Error reading npm lock file');\n          existingNpmLock = '';\n        }\n        const { detectedIndent, lockFileParsed: npmLockParsed } =\n          parseLockFile(existingNpmLock);\n        if (npmLockParsed) {\n          const packageNames =\n            'packages' in npmLockParsed\n              ? Object.keys(npmLockParsed.packages)\n              : [];\n          const widens: string[] = [];\n          let lockFileChanged = false;\n          for (const upgrade of config.upgrades) {\n            if (\n              upgrade.rangeStrategy === 'widen' &&\n              upgrade.npmLock === npmLock\n            ) {\n              // TODO #7154\n              widens.push(upgrade.depName!);\n            }\n            const { depName } = upgrade;\n            for (const packageName of packageNames) {\n              if (\n                'packages' in npmLockParsed &&\n                (packageName === `node_modules/${depName}` ||\n                  packageName.startsWith(`node_modules/${depName}/`))\n              ) {\n                logger.trace({ packageName }, 'Massaging out package name');\n                lockFileChanged = true;\n                delete npmLockParsed.packages[packageName];\n              }\n            }\n          }\n          if (widens.length) {\n            logger.debug(\n              `Removing ${String(widens)} from ${npmLock} to force an update`\n            );\n            lockFileChanged = true;\n            try {\n              if (\n                'dependencies' in npmLockParsed &&\n                npmLockParsed.dependencies\n              ) {\n                widens.forEach((depName) => {\n                  // TODO #7154\n                  delete npmLockParsed.dependencies![depName];\n                });\n              }\n            } catch (err) /* istanbul ignore next */ {\n              logger.warn(\n                { npmLock },\n                'Error massaging package-lock.json for widen'\n              );\n            }\n          }\n          if (lockFileChanged) {\n            logger.debug('Massaging npm lock file before writing to disk');\n            existingNpmLock = composeLockFile(npmLockParsed, detectedIndent);\n          }\n          await writeLocalFile(npmLockPath, existingNpmLock);\n        }\n      }\n    }\n    const { yarnLock } = packageFile;\n    if (yarnLock && config.reuseLockFiles === false) {\n      await deleteLocalFile(yarnLock);\n    }\n    // istanbul ignore next\n    if (packageFile.pnpmShrinkwrap && config.reuseLockFiles === false) {\n      await deleteLocalFile(packageFile.pnpmShrinkwrap);\n    }\n  }\n}\n\nexport async function writeUpdatedPackageFiles(\n  config: PostUpdateConfig\n): Promise<void> {\n  logger.trace({ config }, 'writeUpdatedPackageFiles');\n  logger.debug('Writing any updated package files');\n  if (!config.updatedPackageFiles) {\n    logger.debug('No files found');\n    return;\n  }\n  const supportedLockFiles = ['package-lock.json', 'yarn.lock'];\n  for (const packageFile of config.updatedPackageFiles) {\n    if (packageFile.type !== 'addition') {\n      continue;\n    }\n    if (\n      supportedLockFiles.some((fileName) => packageFile.path.endsWith(fileName))\n    ) {\n      logger.debug(`Writing lock file: ${packageFile.path}`);\n      // TODO #7154\n\n      await writeLocalFile(packageFile.path, packageFile.contents!);\n      continue;\n    }\n    if (!packageFile.path.endsWith('package.json')) {\n      continue;\n    }\n    logger.debug(`Writing ${packageFile.path}`);\n    const detectedIndent =\n      // TODO #7154\n\n      detectIndent(packageFile.contents!.toString()).indent || '  ';\n\n    // TODO #7154\n\n    const massagedFile = JSON.parse(packageFile.contents!.toString());\n    try {\n      const { token } = hostRules.find({\n        hostType: 'github',\n        url: 'https://api.github.com/',\n      });\n      for (const upgrade of config.upgrades) {\n        // istanbul ignore if: test me\n        if (upgrade.gitRef && upgrade.packageFile === packageFile.path) {\n          massagedFile[upgrade.depType as NpmDepType][upgrade.depName!] =\n            massagedFile[upgrade.depType as NpmDepType][\n              upgrade.depName!\n            ].replace(\n              'git+https://github.com',\n              `git+https://${token}@github.com`\n            );\n        }\n      }\n    } catch (err) /* istanbul ignore next */ {\n      logger.warn({ err }, 'Error adding token to package files');\n    }\n    await writeLocalFile(\n      packageFile.path,\n      JSON.stringify(massagedFile, null, detectedIndent)\n    );\n  }\n}\n\nasync function getNpmrcContent(dir: string): Promise<string | null> {\n  const npmrcFilePath = upath.join(dir, '.npmrc');\n  let originalNpmrcContent: string | null = null;\n  try {\n    originalNpmrcContent = await readLocalFile(npmrcFilePath, 'utf8');\n    logger.debug('npmrc file found in repository');\n  } catch /* istanbul ignore next */ {\n    logger.debug('No npmrc file found in repository');\n    originalNpmrcContent = null;\n  }\n\n  return originalNpmrcContent;\n}\n\nasync function updateNpmrcContent(\n  dir: string,\n  originalContent: string | null,\n  additionalLines: string[]\n): Promise<void> {\n  const npmrcFilePath = upath.join(dir, '.npmrc');\n  const newNpmrc = originalContent\n    ? [originalContent, ...additionalLines]\n    : additionalLines;\n  try {\n    const newContent = newNpmrc.join('\\n');\n    if (newContent !== originalContent) {\n      logger.debug(`Writing updated .npmrc file to ${npmrcFilePath}`);\n      await writeLocalFile(npmrcFilePath, `${newContent}\\n`);\n    }\n  } catch /* istanbul ignore next */ {\n    logger.warn('Unable to write custom npmrc file');\n  }\n}\n\nasync function resetNpmrcContent(\n  dir: string,\n  originalContent: string | null\n): Promise<void> {\n  const npmrcFilePath = upath.join(dir, '.npmrc');\n  if (originalContent) {\n    try {\n      await writeLocalFile(npmrcFilePath, originalContent);\n    } catch /* istanbul ignore next */ {\n      logger.warn('Unable to reset npmrc to original contents');\n    }\n  } else {\n    try {\n      await deleteLocalFile(npmrcFilePath);\n    } catch /* istanbul ignore next */ {\n      logger.warn('Unable to delete custom npmrc');\n    }\n  }\n}\n\n// istanbul ignore next\nasync function updateYarnOffline(\n  lockFileDir: string,\n  updatedArtifacts: FileChange[]\n): Promise<void> {\n  try {\n    const resolvedPaths: string[] = [];\n    const yarnrcYml = await getFile(upath.join(lockFileDir, '.yarnrc.yml'));\n    const yarnrc = await getFile(upath.join(lockFileDir, '.yarnrc'));\n\n    // As .yarnrc.yml overrides .yarnrc in Yarn 1 (https://git.io/JUcco)\n    // both files may exist, so check for .yarnrc.yml first\n    if (yarnrcYml) {\n      // Yarn 2 (offline cache and zero-installs)\n      const paths = getZeroInstallPaths(yarnrcYml);\n      resolvedPaths.push(...paths.map((p) => upath.join(lockFileDir, p)));\n    } else if (yarnrc) {\n      // Yarn 1 (offline mirror)\n      const mirrorLine = yarnrc\n        .split(newlineRegex)\n        .find((line) => line.startsWith('yarn-offline-mirror '));\n      if (mirrorLine) {\n        const mirrorPath = ensureTrailingSlash(\n          mirrorLine.split(' ')[1].replace(regEx(/\"/g), '')\n        );\n        resolvedPaths.push(upath.join(lockFileDir, mirrorPath));\n      }\n    }\n    logger.debug({ resolvedPaths }, 'updateYarnOffline resolvedPaths');\n\n    if (resolvedPaths.length) {\n      const status = await getRepoStatus();\n      for (const f of status.modified.concat(status.not_added)) {\n        if (resolvedPaths.some((p) => f.startsWith(p))) {\n          updatedArtifacts.push({\n            type: 'addition',\n            path: f,\n            contents: await readLocalFile(f),\n          });\n        }\n      }\n      for (const f of status.deleted || []) {\n        if (resolvedPaths.some((p) => f.startsWith(p))) {\n          updatedArtifacts.push({ type: 'deletion', path: f });\n        }\n      }\n    }\n  } catch (err) {\n    logger.error({ err }, 'Error updating yarn offline packages');\n  }\n}\n\n// exported for testing\nexport async function updateYarnBinary(\n  lockFileDir: string,\n  updatedArtifacts: FileChange[],\n  existingYarnrcYmlContent: string | undefined | null\n): Promise<string | undefined | null> {\n  let yarnrcYml = existingYarnrcYmlContent;\n  try {\n    const yarnrcYmlFilename = upath.join(lockFileDir, '.yarnrc.yml');\n    yarnrcYml ||= (await getFile(yarnrcYmlFilename)) ?? undefined;\n    const newYarnrcYml = await readLocalFile(yarnrcYmlFilename, 'utf8');\n    if (!is.string(yarnrcYml) || !is.string(newYarnrcYml)) {\n      return existingYarnrcYmlContent;\n    }\n\n    const oldYarnPath = (load(yarnrcYml) as Record<string, string>).yarnPath;\n    const newYarnPath = (load(newYarnrcYml) as Record<string, string>).yarnPath;\n    const oldYarnFullPath = upath.join(lockFileDir, oldYarnPath);\n    const newYarnFullPath = upath.join(lockFileDir, newYarnPath);\n    logger.debug({ oldYarnPath, newYarnPath }, 'Found updated Yarn binary');\n\n    yarnrcYml = yarnrcYml.replace(oldYarnPath, newYarnPath);\n    updatedArtifacts.push(\n      {\n        type: 'addition',\n        path: yarnrcYmlFilename,\n        contents: yarnrcYml,\n      },\n      {\n        type: 'deletion',\n        path: oldYarnFullPath,\n      },\n      {\n        type: 'addition',\n        path: newYarnFullPath,\n        contents: await readLocalFile(newYarnFullPath, 'utf8'),\n        isExecutable: true,\n      }\n    );\n  } catch (err) /* istanbul ignore next */ {\n    logger.error({ err }, 'Error updating Yarn binary');\n  }\n  return existingYarnrcYmlContent && yarnrcYml;\n}\n\nexport async function getAdditionalFiles(\n  config: PostUpdateConfig<NpmManagerData>,\n  packageFiles: AdditionalPackageFiles\n): Promise<WriteExistingFilesResult> {\n  logger.trace({ config }, 'getAdditionalFiles');\n  const artifactErrors: ArtifactError[] = [];\n  const updatedArtifacts: FileChange[] = [];\n  if (!packageFiles.npm?.length) {\n    return { artifactErrors, updatedArtifacts };\n  }\n  if (!config.updateLockFiles) {\n    logger.debug('Skipping lock file generation');\n    return { artifactErrors, updatedArtifacts };\n  }\n  if (\n    !config.updatedPackageFiles?.length &&\n    config.transitiveRemediation &&\n    config.upgrades?.every(\n      (upgrade) => upgrade.isRemediation ?? upgrade.isVulnerabilityAlert\n    )\n  ) {\n    logger.debug('Skipping lock file generation for remediations');\n    return { artifactErrors, updatedArtifacts };\n  }\n  if (\n    config.reuseExistingBranch &&\n    !config.updatedPackageFiles?.length &&\n    config.upgrades?.every((upgrade) => upgrade.isLockfileUpdate)\n  ) {\n    logger.debug('Existing branch contains all necessary lock file updates');\n    return { artifactErrors, updatedArtifacts };\n  }\n  logger.debug('Getting updated lock files');\n  if (\n    config.updateType === 'lockFileMaintenance' &&\n    config.reuseExistingBranch &&\n    branchExists(config.branchName)\n  ) {\n    logger.debug('Skipping lockFileMaintenance update');\n    return { artifactErrors, updatedArtifacts };\n  }\n  const dirs = determineLockFileDirs(config, packageFiles);\n  logger.trace({ dirs }, 'lock file dirs');\n  await writeExistingFiles(config, packageFiles);\n  await writeUpdatedPackageFiles(config);\n\n  const { additionalNpmrcContent, additionalYarnRcYml } = processHostRules();\n\n  const env = {\n    ...getChildProcessEnv(),\n    NPM_CONFIG_CACHE: await ensureCacheDir('npm'),\n    YARN_CACHE_FOLDER: await ensureCacheDir('yarn'),\n    YARN_GLOBAL_FOLDER: await ensureCacheDir('berry'),\n    npm_config_store: await ensureCacheDir('pnpm'),\n    NODE_ENV: 'dev',\n  };\n\n  let token: string | undefined;\n  try {\n    ({ token } = hostRules.find({\n      hostType: 'github',\n      url: 'https://api.github.com/',\n    }));\n    token = token ? /* istanbul ignore next */ `${token}@` : token;\n  } catch (err) /* istanbul ignore next */ {\n    logger.warn({ err }, 'Error getting token for packageFile');\n  }\n  const tokenRe = regEx(`${token ?? ''}`, 'g', false);\n  for (const npmLock of dirs.npmLockDirs) {\n    const lockFileDir = upath.dirname(npmLock);\n    const npmrcContent = await getNpmrcContent(lockFileDir);\n    await updateNpmrcContent(lockFileDir, npmrcContent, additionalNpmrcContent);\n    const fileName = upath.basename(npmLock);\n    logger.debug(`Generating ${fileName} for ${lockFileDir}`);\n    const upgrades = config.upgrades.filter(\n      (upgrade) => upgrade.npmLock === npmLock\n    );\n    const res = await npm.generateLockFile(\n      lockFileDir,\n      env,\n      fileName,\n      config,\n      upgrades\n    );\n    if (res.error) {\n      // istanbul ignore if\n      if (res.stderr?.includes('No matching version found for')) {\n        for (const upgrade of config.upgrades) {\n          if (\n            res.stderr.includes(\n              `No matching version found for ${upgrade.depName}`\n            )\n          ) {\n            logger.debug(\n              { dependency: upgrade.depName, type: 'npm' },\n              'lock file failed for the dependency being updated - skipping branch creation'\n            );\n            const err = new Error(\n              'lock file failed for the dependency being updated - skipping branch creation'\n            );\n            throw new ExternalHostError(err, NpmDatasource.id);\n          }\n        }\n      }\n      artifactErrors.push({\n        lockFile: npmLock,\n        stderr: res.stderr,\n      });\n    } else {\n      const existingContent = await getFile(\n        npmLock,\n        config.reuseExistingBranch ? config.branchName : config.baseBranch\n      );\n      if (res.lockFile === existingContent) {\n        logger.debug(`${npmLock} hasn't changed`);\n      } else {\n        logger.debug(`${npmLock} needs updating`);\n        updatedArtifacts.push({\n          type: 'addition',\n          path: npmLock,\n          // TODO: can this be undefined? (#7154)\n\n          contents: res.lockFile!.replace(tokenRe, ''),\n        });\n      }\n    }\n    await resetNpmrcContent(lockFileDir, npmrcContent);\n  }\n\n  for (const yarnLock of dirs.yarnLockDirs) {\n    const lockFileDir = upath.dirname(yarnLock);\n    const npmrcContent = await getNpmrcContent(lockFileDir);\n    await updateNpmrcContent(lockFileDir, npmrcContent, additionalNpmrcContent);\n    let yarnRcYmlFilename: string | undefined;\n    let existingYarnrcYmlContent: string | undefined | null;\n    // istanbul ignore if: needs test\n    if (additionalYarnRcYml) {\n      yarnRcYmlFilename = getSiblingFileName(yarnLock, '.yarnrc.yml');\n      existingYarnrcYmlContent = await readLocalFile(yarnRcYmlFilename, 'utf8');\n      if (existingYarnrcYmlContent) {\n        try {\n          const existingYarnrRcYml = load(existingYarnrcYmlContent) as Record<\n            string,\n            unknown\n          >;\n          const updatedYarnYrcYml = deepmerge(\n            existingYarnrRcYml,\n            additionalYarnRcYml\n          );\n          await writeLocalFile(yarnRcYmlFilename, dump(updatedYarnYrcYml));\n          logger.debug('Added authentication to .yarnrc.yml');\n        } catch (err) {\n          logger.warn({ err }, 'Error appending .yarnrc.yml content');\n        }\n      }\n    }\n    logger.debug(`Generating yarn.lock for ${lockFileDir}`);\n    const lockFileName = upath.join(lockFileDir, 'yarn.lock');\n    const upgrades = config.upgrades.filter(\n      (upgrade) => upgrade.yarnLock === yarnLock\n    );\n    const res = await yarn.generateLockFile(lockFileDir, env, config, upgrades);\n    if (res.error) {\n      // istanbul ignore if\n      if (res.stderr?.includes(`Couldn't find any versions for`)) {\n        for (const upgrade of config.upgrades) {\n          /* eslint-disable no-useless-escape */\n          if (\n            res.stderr.includes(\n              `Couldn't find any versions for \\\\\\\"${upgrade.depName}\\\\\\\"`\n            )\n          ) {\n            logger.debug(\n              { dependency: upgrade.depName, type: 'yarn' },\n              'lock file failed for the dependency being updated - skipping branch creation'\n            );\n            throw new ExternalHostError(\n              new Error(\n                'lock file failed for the dependency being updated - skipping branch creation'\n              ),\n              NpmDatasource.id\n            );\n          }\n          /* eslint-enable no-useless-escape */\n        }\n      }\n      artifactErrors.push({\n        lockFile: yarnLock,\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        stderr: res.stderr || res.stdout,\n      });\n    } else {\n      const existingContent = await getFile(\n        lockFileName,\n        config.reuseExistingBranch ? config.branchName : config.baseBranch\n      );\n      if (res.lockFile === existingContent) {\n        logger.debug(\"yarn.lock hasn't changed\");\n      } else {\n        logger.debug('yarn.lock needs updating');\n        updatedArtifacts.push({\n          type: 'addition',\n          path: lockFileName,\n          // TODO #7154\n          contents: res.lockFile!,\n        });\n        await updateYarnOffline(lockFileDir, updatedArtifacts);\n      }\n\n      // istanbul ignore if: already tested seperately, needs additional test?\n      if (upgrades.some(yarn.isYarnUpdate)) {\n        existingYarnrcYmlContent = await updateYarnBinary(\n          lockFileDir,\n          updatedArtifacts,\n          existingYarnrcYmlContent\n        );\n      }\n    }\n    await resetNpmrcContent(lockFileDir, npmrcContent);\n    // istanbul ignore if: needs test\n    if (existingYarnrcYmlContent) {\n      // TODO #7154\n      await writeLocalFile(yarnRcYmlFilename!, existingYarnrcYmlContent);\n    }\n  }\n\n  for (const pnpmShrinkwrap of dirs.pnpmShrinkwrapDirs) {\n    const lockFileDir = upath.dirname(pnpmShrinkwrap);\n    const npmrcContent = await getNpmrcContent(lockFileDir);\n    await updateNpmrcContent(lockFileDir, npmrcContent, additionalNpmrcContent);\n    logger.debug(`Generating pnpm-lock.yaml for ${lockFileDir}`);\n    const upgrades = config.upgrades.filter(\n      (upgrade) => upgrade.pnpmShrinkwrap === pnpmShrinkwrap\n    );\n    const res = await pnpm.generateLockFile(lockFileDir, env, config, upgrades);\n    if (res.error) {\n      // istanbul ignore if\n      if (res.stdout?.includes(`No compatible version found:`)) {\n        for (const upgrade of config.upgrades) {\n          if (\n            res.stdout.includes(\n              `No compatible version found: ${upgrade.depName}`\n            )\n          ) {\n            logger.debug(\n              { dependency: upgrade.depName, type: 'pnpm' },\n              'lock file failed for the dependency being updated - skipping branch creation'\n            );\n            throw new ExternalHostError(\n              Error(\n                'lock file failed for the dependency being updated - skipping branch creation'\n              ),\n              NpmDatasource.id\n            );\n          }\n        }\n      }\n      artifactErrors.push({\n        lockFile: pnpmShrinkwrap,\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        stderr: res.stderr || res.stdout,\n      });\n    } else {\n      const existingContent = await getFile(\n        pnpmShrinkwrap,\n        config.reuseExistingBranch ? config.branchName : config.baseBranch\n      );\n      if (res.lockFile === existingContent) {\n        logger.debug(\"pnpm-lock.yaml hasn't changed\");\n      } else {\n        logger.debug('pnpm-lock.yaml needs updating');\n        updatedArtifacts.push({\n          type: 'addition',\n          path: pnpmShrinkwrap,\n          // TODO: can be undefined? (#7154)\n          contents: res.lockFile!,\n        });\n      }\n    }\n    await resetNpmrcContent(lockFileDir, npmrcContent);\n  }\n\n  for (const lernaJsonFile of dirs.lernaJsonFiles) {\n    let lockFile: string;\n    logger.debug(`Finding package.json for lerna location \"${lernaJsonFile}\"`);\n    const lernaPackageFile = packageFiles.npm.find(\n      // TODO #7154\n      (p) => getParentDir(p.packageFile!) === getParentDir(lernaJsonFile)\n    );\n    // istanbul ignore if: not sure how to test\n    if (!lernaPackageFile) {\n      logger.debug('No matching package.json found');\n      throw new Error('lerna-no-lockfile');\n    }\n    if (lernaPackageFile.lernaClient === 'npm') {\n      lockFile = config.npmLock ?? 'package-lock.json';\n    } else {\n      lockFile = config.yarnLock ?? 'yarn.lock';\n    }\n    const skipInstalls =\n      lockFile === 'npm-shrinkwrap.json' ? false : config.skipInstalls;\n    const learnaFileDir = getParentDir(lernaJsonFile);\n    const npmrcContent = await getNpmrcContent(learnaFileDir);\n    await updateNpmrcContent(\n      learnaFileDir,\n      npmrcContent,\n      additionalNpmrcContent\n    );\n    const res = await lerna.generateLockFiles(\n      lernaPackageFile,\n      getParentDir(lernaJsonFile),\n      config,\n      env,\n      skipInstalls\n    );\n    if (res.stderr) {\n      // istanbul ignore if\n      if (res.stderr.includes('ENOSPC: no space left on device')) {\n        throw new Error(SYSTEM_INSUFFICIENT_DISK_SPACE);\n      }\n      for (const upgrade of config.upgrades) {\n        /* eslint-disable no-useless-escape */\n        // istanbul ignore if: needs test\n        if (\n          res.stderr.includes(\n            `Couldn't find any versions for \\\\\\\"${upgrade.depName}\\\\\\\"`\n          )\n        ) {\n          logger.debug(\n            { dependency: upgrade.depName, type: 'yarn' },\n            'lock file failed for the dependency being updated - skipping branch creation'\n          );\n          throw new ExternalHostError(\n            Error(\n              'lock file failed for the dependency being updated - skipping branch creation'\n            ),\n            NpmDatasource.id\n          );\n        }\n        /* eslint-enable no-useless-escape */\n        // istanbul ignore if: needs test\n        if (\n          res.stderr.includes(\n            `No matching version found for ${upgrade.depName}`\n          )\n        ) {\n          logger.debug(\n            { dependency: upgrade.depName, type: 'npm' },\n            'lock file failed for the dependency being updated - skipping branch creation'\n          );\n          throw new ExternalHostError(\n            Error(\n              'lock file failed for the dependency being updated - skipping branch creation'\n            ),\n            NpmDatasource.id\n          );\n        }\n      }\n      artifactErrors.push({\n        lockFile,\n        stderr: res.stderr,\n      });\n    } else {\n      for (const packageFile of packageFiles.npm) {\n        const filename = packageFile.npmLock ?? packageFile.yarnLock;\n        logger.trace(`Checking for ${filename}`);\n        const existingContent = await getFile(\n          // TODO #7154\n          filename!,\n          config.reuseExistingBranch ? config.branchName : config.baseBranch\n        );\n        if (existingContent) {\n          logger.trace('Found lock file');\n          // TODO #7154\n          const lockFilePath = filename!;\n          logger.trace('Checking against ' + lockFilePath);\n          try {\n            const newContent =\n              (await readLocalFile(lockFilePath, 'utf8')) ??\n              (await readLocalFile(\n                lockFilePath.replace(\n                  'npm-shrinkwrap.json',\n                  'package-lock.json'\n                ),\n                'utf8'\n              ));\n            // istanbul ignore if: needs test\n            if (newContent === existingContent) {\n              logger.trace('File is unchanged');\n            } else {\n              logger.debug('File is updated: ' + lockFilePath);\n              updatedArtifacts.push({\n                type: 'addition',\n                // TODO #7154\n                path: filename!,\n                contents: newContent,\n              });\n            }\n          } catch (err) /* istanbul ignore next */ {\n            if (config.updateType === 'lockFileMaintenance') {\n              logger.debug(\n                { packageFile, lockFilePath },\n                'No lock file found after lerna lockFileMaintenance'\n              );\n            } else {\n              logger.warn(\n                { packageFile, lockFilePath },\n                'No lock file found after lerna bootstrap'\n              );\n            }\n          }\n        } else {\n          logger.trace('No lock file found');\n        }\n      }\n    }\n    await resetNpmrcContent(learnaFileDir, npmrcContent);\n  }\n\n  return { artifactErrors, updatedArtifacts };\n}\n"]}