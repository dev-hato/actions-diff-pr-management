{"version":3,"file":"range.js","sourceRoot":"","sources":["../../../../lib/modules/manager/npm/range.ts"],"names":[],"mappings":";;;AAAA,+CAA0C;AAC1C,4CAAyC;AAIzC,SAAgB,gBAAgB,CAAC,MAAmB;IAClD,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE,YAAY,EAAE,aAAa,EAAE,GACtE,MAAM,CAAC;IACT,aAAa;IACb,MAAM,cAAc,GAAG,IAAA,yBAAU,EAAC,YAAa,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5D,IAAI,aAAa,KAAK,MAAM,IAAI,cAAc,EAAE;QAC9C,eAAM,CAAC,KAAK,CACV,EAAE,YAAY,EAAE,EAChB,sDAAsD,CACvD,CAAC;QACF,OAAO,OAAO,CAAC;KAChB;IACD,IAAI,aAAa,KAAK,MAAM,EAAE;QAC5B,OAAO,aAAa,CAAC;KACtB;IACD,IAAI,OAAO,KAAK,iBAAiB,EAAE;QACjC,6BAA6B;QAC7B,eAAM,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,EAAE,uBAAuB,CAAC,CAAC;QAC/D,OAAO,KAAK,CAAC;KACd;IACD,IAAI,OAAO,KAAK,cAAc,IAAI,eAAe,KAAK,KAAK,EAAE;QAC3D,mEAAmE;QACnE,eAAM,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,EAAE,wBAAwB,CAAC,CAAC;QAChE,OAAO,KAAK,CAAC;KACd;IACD,IAAI,OAAO,KAAK,kBAAkB,EAAE;QAClC,0BAA0B;QAC1B,eAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAC3C,OAAO,OAAO,CAAC;KAChB;IACD,IAAI,cAAc,EAAE;QAClB,OAAO,OAAO,CAAC;KAChB;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAlCD,4CAkCC","sourcesContent":["import { parseRange } from 'semver-utils';\nimport { logger } from '../../../logger';\nimport type { RangeStrategy } from '../../../types';\nimport type { RangeConfig } from '../types';\n\nexport function getRangeStrategy(config: RangeConfig): RangeStrategy {\n  const { depType, depName, packageJsonType, currentValue, rangeStrategy } =\n    config;\n  // TODO #7154\n  const isComplexRange = parseRange(currentValue!).length > 1;\n  if (rangeStrategy === 'bump' && isComplexRange) {\n    logger.debug(\n      { currentValue },\n      'Replacing bump strategy for complex range with widen'\n    );\n    return 'widen';\n  }\n  if (rangeStrategy !== 'auto') {\n    return rangeStrategy;\n  }\n  if (depType === 'devDependencies') {\n    // Always pin devDependencies\n    logger.trace({ dependency: depName }, 'Pinning devDependency');\n    return 'pin';\n  }\n  if (depType === 'dependencies' && packageJsonType === 'app') {\n    // Pin dependencies if we're pretty sure it's not a browser library\n    logger.trace({ dependency: depName }, 'Pinning app dependency');\n    return 'pin';\n  }\n  if (depType === 'peerDependencies') {\n    // Widen peer dependencies\n    logger.debug('Widening peer dependencies');\n    return 'widen';\n  }\n  if (isComplexRange) {\n    return 'widen';\n  }\n  return 'replace';\n}\n"]}