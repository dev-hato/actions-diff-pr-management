{"version":3,"file":"npm.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/npm/extract/npm.ts"],"names":[],"mappings":";;;AAAA,+CAA4C;AAC5C,4CAAoD;AAG7C,KAAK,UAAU,UAAU,CAAC,QAAgB;IAC/C,aAAa;IACb,MAAM,OAAO,GAAG,CAAC,MAAM,IAAA,kBAAa,EAAC,QAAQ,EAAE,MAAM,CAAC,CAAE,CAAC;IACzD,IAAI;QACF,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvC,MAAM,cAAc,GAA2B,EAAE,CAAC;QAClD,KAAK,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CACvC,CAAC,UAAU,CAAC,YAAY,IAAI,EAAE,CAAkB,CACjD,EAAE;YACD,eAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC9C,cAAc,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC;SACrC;QACD,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,UAAU,CAAC,eAAe,EAAE,CAAC;KACxE;IAAC,OAAO,GAAG,EAAE;QACZ,eAAM,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,0CAA0C,CAAC,CAAC;QAC5E,OAAO,EAAE,cAAc,EAAE,EAAE,EAAE,CAAC;KAC/B;AACH,CAAC;AAjBD,gCAiBC","sourcesContent":["import { logger } from '../../../../logger';\nimport { readLocalFile } from '../../../../util/fs';\nimport type { LockFile, LockFileEntry } from './types';\n\nexport async function getNpmLock(filePath: string): Promise<LockFile> {\n  // TODO #7154\n  const lockRaw = (await readLocalFile(filePath, 'utf8'))!;\n  try {\n    const lockParsed = JSON.parse(lockRaw);\n    const lockedVersions: Record<string, string> = {};\n    for (const [entry, val] of Object.entries(\n      (lockParsed.dependencies || {}) as LockFileEntry\n    )) {\n      logger.trace({ entry, version: val.version });\n      lockedVersions[entry] = val.version;\n    }\n    return { lockedVersions, lockfileVersion: lockParsed.lockfileVersion };\n  } catch (err) {\n    logger.debug({ filePath, err }, 'Warning: Exception parsing npm lock file');\n    return { lockedVersions: {} };\n  }\n}\n"]}