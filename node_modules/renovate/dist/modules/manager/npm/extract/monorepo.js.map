{"version":3,"file":"monorepo.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/npm/extract/monorepo.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { logger } from '../../../../logger';\nimport { getParentDir, getSiblingFileName } from '../../../../util/fs';\nimport type { PackageFile } from '../../types';\nimport { detectPnpmWorkspaces } from './pnpm';\nimport { matchesAnyPattern } from './utils';\n\nexport async function detectMonorepos(\n  packageFiles: Partial<PackageFile>[]\n): Promise<void> {\n  await detectPnpmWorkspaces(packageFiles);\n  logger.debug('Detecting Lerna and Yarn Workspaces');\n  for (const p of packageFiles) {\n    const {\n      packageFile,\n      npmLock,\n      yarnLock,\n      npmrc,\n      managerData = {},\n      lernaClient,\n      lernaPackages,\n      yarnWorkspacesPackages,\n      skipInstalls,\n    } = p;\n    const { lernaJsonFile, yarnZeroInstall, hasPackageManager } = managerData;\n\n    const packages = yarnWorkspacesPackages ?? lernaPackages;\n    if (packages?.length) {\n      const internalPackagePatterns = (\n        is.array(packages) ? packages : [packages]\n      ).map((pattern) => getSiblingFileName(packageFile!, pattern));\n      const internalPackageFiles = packageFiles.filter((sp) =>\n        matchesAnyPattern(\n          getParentDir(sp.packageFile!),\n          internalPackagePatterns\n        )\n      );\n      const internalPackageNames = internalPackageFiles\n        .map((sp) => sp.packageJsonName)\n        .filter(Boolean);\n\n      p.deps?.forEach((dep) => {\n        if (internalPackageNames.includes(dep.depName)) {\n          dep.isInternal = true;\n        }\n      });\n\n      for (const subPackage of internalPackageFiles) {\n        subPackage.managerData = subPackage.managerData ?? {};\n        subPackage.managerData.lernaJsonFile = lernaJsonFile;\n        subPackage.managerData.yarnZeroInstall = yarnZeroInstall;\n        subPackage.managerData.hasPackageManager = hasPackageManager;\n        subPackage.lernaClient = lernaClient;\n        subPackage.yarnLock = subPackage.yarnLock ?? yarnLock;\n        subPackage.npmLock = subPackage.npmLock ?? npmLock;\n        subPackage.skipInstalls = skipInstalls && subPackage.skipInstalls; // skip if both are true\n        if (subPackage.yarnLock) {\n          subPackage.hasYarnWorkspaces = !!yarnWorkspacesPackages;\n          subPackage.npmrc = subPackage.npmrc ?? npmrc;\n        }\n\n        if (p.constraints) {\n          subPackage.constraints = {\n            ...p.constraints,\n            ...subPackage.constraints,\n          };\n        }\n\n        subPackage.deps?.forEach((dep) => {\n          if (internalPackageNames.includes(dep.depName)) {\n            dep.isInternal = true;\n          }\n        });\n      }\n    }\n  }\n}\n"]}