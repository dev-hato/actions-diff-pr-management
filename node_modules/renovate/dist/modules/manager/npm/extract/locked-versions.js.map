{"version":3,"file":"locked-versions.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/npm/extract/locked-versions.ts"],"names":[],"mappings":"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","sourcesContent":["import semver from 'semver';\nimport { logger } from '../../../../logger';\nimport type { PackageFile } from '../../types';\nimport { getNpmLock } from './npm';\nimport type { LockFile } from './types';\nimport { getYarnLock } from './yarn';\n\nexport async function getLockedVersions(\n  packageFiles: PackageFile[]\n): Promise<void> {\n  const lockFileCache: Record<string, LockFile> = {};\n  logger.debug('Finding locked versions');\n  for (const packageFile of packageFiles) {\n    const { yarnLock, npmLock, pnpmShrinkwrap } = packageFile;\n    const lockFiles: string[] = [];\n    if (yarnLock) {\n      logger.trace('Found yarnLock');\n      lockFiles.push(yarnLock);\n      if (!lockFileCache[yarnLock]) {\n        logger.trace('Retrieving/parsing ' + yarnLock);\n        lockFileCache[yarnLock] = await getYarnLock(yarnLock);\n      }\n      const { lockfileVersion, isYarn1 } = lockFileCache[yarnLock];\n      if (!isYarn1 && !packageFile.constraints?.yarn) {\n        if (lockfileVersion && lockfileVersion >= 8) {\n          // https://github.com/yarnpkg/berry/commit/9bcd27ae34aee77a567dd104947407532fa179b3\n          packageFile.constraints!.yarn = '^3.0.0';\n        } else if (lockfileVersion && lockfileVersion >= 6) {\n          // https://github.com/yarnpkg/berry/commit/f753790380cbda5b55d028ea84b199445129f9ba\n          packageFile.constraints!.yarn = '^2.2.0';\n        } else {\n          packageFile.constraints!.yarn = '^2.0.0';\n        }\n      }\n      for (const dep of packageFile.deps) {\n        dep.lockedVersion =\n          lockFileCache[yarnLock].lockedVersions[\n            // TODO: types (#7154)\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            `${dep.depName}@${dep.currentValue}`\n          ];\n        if (\n          (dep.depType === 'engines' || dep.depType === 'packageManager') &&\n          dep.depName === 'yarn' &&\n          !isYarn1\n        ) {\n          dep.packageName = '@yarnpkg/cli';\n        }\n      }\n    } else if (npmLock) {\n      // TODO: types (#7154)\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      logger.debug(`Found ${npmLock} for ${packageFile.packageFile}`);\n      lockFiles.push(npmLock);\n      if (!lockFileCache[npmLock]) {\n        logger.trace('Retrieving/parsing ' + npmLock);\n        lockFileCache[npmLock] = await getNpmLock(npmLock);\n      }\n      const { lockfileVersion } = lockFileCache[npmLock];\n      if (lockfileVersion === 1) {\n        if (packageFile.constraints?.npm) {\n          // Add a <7 constraint if it's not already a fixed version\n          if (!semver.valid(packageFile.constraints.npm)) {\n            packageFile.constraints.npm += ' <7';\n          }\n        } else {\n          packageFile.constraints!.npm = '<7';\n        }\n      }\n      for (const dep of packageFile.deps) {\n        dep.lockedVersion = semver.valid(\n          lockFileCache[npmLock].lockedVersions[dep.depName!]\n        );\n      }\n    } else if (pnpmShrinkwrap) {\n      logger.debug('TODO: implement pnpm-lock.yaml parsing of lockVersion');\n      lockFiles.push(pnpmShrinkwrap);\n    }\n    if (lockFiles.length) {\n      packageFile.lockFiles = lockFiles;\n    }\n  }\n}\n"]}