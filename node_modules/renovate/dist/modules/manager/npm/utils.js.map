{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/modules/manager/npm/utils.ts"],"names":[],"mappings":";;;;AAAA,0EAAyC;AACzC,4CAAyC;AAGzC,SAAgB,aAAa,CAAC,QAAgB;IAC5C,MAAM,cAAc,GAAG,IAAA,uBAAY,EAAC,QAAQ,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC;IAE7D,IAAI,cAAoC,CAAC;IACzC,IAAI;QACF,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;KACvC;IAAC,OAAO,GAAG,EAAE;QACZ,eAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,6BAA6B,CAAC,CAAC;KACrD;IAED,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC;AAC5C,CAAC;AAXD,sCAWC;AAED,SAAgB,eAAe,CAAC,QAAkB,EAAE,MAAc;IAChE,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AACvD,CAAC;AAFD,0CAEC","sourcesContent":["import detectIndent from 'detect-indent';\nimport { logger } from '../../../logger';\nimport type { LockFile, ParseLockFileResult } from './types';\n\nexport function parseLockFile(lockFile: string): ParseLockFileResult {\n  const detectedIndent = detectIndent(lockFile).indent || '  ';\n\n  let lockFileParsed: LockFile | undefined;\n  try {\n    lockFileParsed = JSON.parse(lockFile);\n  } catch (err) {\n    logger.warn({ err }, 'Error parsing npm lock file');\n  }\n\n  return { detectedIndent, lockFileParsed };\n}\n\nexport function composeLockFile(lockFile: LockFile, indent: string): string {\n  return JSON.stringify(lockFile, null, indent) + '\\n';\n}\n"]}