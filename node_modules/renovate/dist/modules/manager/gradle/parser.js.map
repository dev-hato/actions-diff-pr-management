{"version":3,"file":"parser.js","sourceRoot":"","sources":["../../../../lib/modules/manager/gradle/parser.ts"],"names":[],"mappings":"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","sourcesContent":["import url from 'url';\nimport is from '@sindresorhus/is';\nimport upath from 'upath';\nimport { logger } from '../../../logger';\nimport { getSiblingFileName, readLocalFile } from '../../../util/fs';\nimport { newlineRegex, regEx } from '../../../util/regex';\nimport type { PackageDependency } from '../types';\nimport {\n  GOOGLE_REPO,\n  GRADLE_PLUGIN_PORTAL_REPO,\n  JCENTER_REPO,\n  MAVEN_REPO,\n  TokenType,\n} from './common';\nimport { tokenize } from './tokenizer';\nimport type {\n  GradleManagerData,\n  MatchConfig,\n  PackageVariables,\n  ParseGradleResult,\n  StringInterpolation,\n  SyntaxHandlerInput,\n  SyntaxHandlerOutput,\n  SyntaxMatchConfig,\n  SyntaxMatcher,\n  Token,\n  TokenMap,\n  VariableData,\n} from './types';\nimport {\n  interpolateString,\n  isDependencyString,\n  parseDependencyString,\n} from './utils';\n\nfunction matchTokens(\n  tokens: Token[],\n  matchers: SyntaxMatcher[]\n): TokenMap | null {\n  let lookaheadCount = 0;\n  const result: TokenMap = {};\n  for (let idx = 0; idx < matchers.length; idx += 1) {\n    const token = tokens[idx];\n    const matcher = matchers[idx];\n\n    if (!token) {\n      if (matcher.lookahead) {\n        break;\n      }\n      return null;\n    }\n\n    const typeMatches = is.string(matcher.matchType)\n      ? matcher.matchType === token.type\n      : matcher.matchType.includes(token.type);\n    if (!typeMatches) {\n      return null;\n    }\n\n    if (is.string(matcher.matchValue) && token.value !== matcher.matchValue) {\n      return null;\n    }\n\n    if (\n      is.array<string>(matcher.matchValue) &&\n      !matcher.matchValue.includes(token.value)\n    ) {\n      return null;\n    }\n\n    lookaheadCount = matcher.lookahead ? lookaheadCount + 1 : 0;\n\n    if (matcher.tokenMapKey) {\n      result[matcher.tokenMapKey] = token;\n    }\n  }\n\n  tokens.splice(0, matchers.length - lookaheadCount);\n  return result;\n}\n\nconst endOfInstruction: SyntaxMatcher = {\n  // Ensure we skip assignments of complex expressions (not strings)\n  matchType: [\n    TokenType.Semicolon,\n    TokenType.RightBrace,\n    TokenType.Word,\n    TokenType.String,\n    TokenType.StringInterpolation,\n  ],\n  lookahead: true,\n};\n\nconst potentialStringTypes = [TokenType.String, TokenType.Word];\n\nfunction coercePotentialString(\n  token: Token,\n  variables: PackageVariables\n): string | null {\n  const tokenType = token?.type;\n  if (tokenType === TokenType.String) {\n    return token?.value;\n  }\n  if (\n    tokenType === TokenType.Word &&\n    typeof variables[token?.value] !== 'undefined'\n  ) {\n    return variables[token.value].value;\n  }\n  return null;\n}\n\nfunction handleAssignment({\n  packageFile,\n  tokenMap,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const { objectToken, keyToken, valToken } = tokenMap;\n  const obj = objectToken?.value;\n  const key = obj ? `${obj}.${keyToken.value}` : keyToken.value;\n\n  const dep = parseDependencyString(valToken.value);\n  if (dep) {\n    dep.groupName = key;\n    dep.managerData = {\n      fileReplacePosition: valToken.offset + dep.depName!.length + 1,\n      packageFile,\n    };\n  }\n\n  const varData: VariableData = {\n    key,\n    value: valToken.value,\n    fileReplacePosition: valToken.offset,\n    packageFile,\n  };\n\n  const result: SyntaxHandlerOutput = {\n    vars: { [key]: varData },\n    deps: dep ? [dep] : [],\n  };\n\n  return result;\n}\n\nfunction processDepString({\n  packageFile,\n  tokenMap,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const { token } = tokenMap;\n  const dep = parseDependencyString(token.value);\n  if (dep) {\n    dep.managerData = {\n      fileReplacePosition: token.offset + dep.depName!.length + 1,\n      packageFile,\n    };\n    return { deps: [dep] };\n  }\n  return null;\n}\n\nfunction processDepInterpolation({\n  tokenMap,\n  variables,\n  packageFile: packageFileOrig,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const token = tokenMap.depInterpolation as StringInterpolation;\n  const interpolationResult = interpolateString(token.children, variables);\n  if (interpolationResult && isDependencyString(interpolationResult)) {\n    const dep = parseDependencyString(interpolationResult);\n    if (dep) {\n      let packageFile: string | undefined;\n      let fileReplacePosition: number | undefined;\n      token.children.forEach((child) => {\n        const variable = variables[child.value];\n        if (child?.type === TokenType.Variable && variable) {\n          packageFile = variable.packageFile;\n          fileReplacePosition = variable.fileReplacePosition;\n          if (variable?.value === dep.currentValue) {\n            dep.managerData = { fileReplacePosition, packageFile };\n            dep.groupName = variable.key;\n          }\n        }\n      });\n      if (!dep.managerData) {\n        const lastToken = token.children[token.children.length - 1];\n        if (\n          lastToken.type === TokenType.String &&\n          // TODO: types (#7154)\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          lastToken.value.startsWith(`:${dep.currentValue}`)\n        ) {\n          packageFile = packageFileOrig;\n          fileReplacePosition = lastToken.offset + 1;\n          delete dep.groupName;\n        } else {\n          dep.skipReason = 'contains-variable';\n        }\n        dep.managerData = { fileReplacePosition, packageFile };\n      }\n      return { deps: [dep] };\n    }\n  }\n  return null;\n}\n\nfunction processPlugin({\n  tokenMap,\n  packageFile,\n  variables,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const { pluginName, pluginVersion, methodName } = tokenMap;\n  const plugin = pluginName.value;\n  const depName =\n    methodName.value === 'kotlin' ? `org.jetbrains.kotlin.${plugin}` : plugin;\n  const packageName =\n    methodName.value === 'kotlin'\n      ? `org.jetbrains.kotlin.${plugin}:org.jetbrains.kotlin.${plugin}.gradle.plugin`\n      : `${plugin}:${plugin}.gradle.plugin`;\n\n  const dep: PackageDependency<GradleManagerData> = {\n    depType: 'plugin',\n    depName,\n    packageName,\n    registryUrls: ['https://plugins.gradle.org/m2/'],\n    commitMessageTopic: `plugin ${depName}`,\n  };\n\n  if (pluginVersion.type === TokenType.Word) {\n    const varData = variables[pluginVersion.value];\n    if (varData) {\n      const currentValue = varData.value;\n      const fileReplacePosition = varData.fileReplacePosition;\n      dep.currentValue = currentValue;\n      dep.managerData = {\n        fileReplacePosition,\n        packageFile: varData.packageFile,\n      };\n    } else {\n      const currentValue = pluginVersion.value;\n      const fileReplacePosition = pluginVersion.offset;\n      dep.currentValue = currentValue;\n      dep.managerData = { fileReplacePosition, packageFile };\n      dep.skipReason = 'unknown-version';\n    }\n  } else if (pluginVersion.type === TokenType.StringInterpolation) {\n    const versionTpl = pluginVersion as StringInterpolation;\n    const children = versionTpl.children;\n    const [child] = children;\n    if (child?.type === TokenType.Variable && children.length === 1) {\n      const varData = variables[child.value];\n      if (varData) {\n        const currentValue = varData.value;\n        const fileReplacePosition = varData.fileReplacePosition;\n        dep.currentValue = currentValue;\n        dep.managerData = {\n          fileReplacePosition,\n          packageFile: varData.packageFile,\n        };\n      } else {\n        const currentValue = child.value;\n        const fileReplacePosition = child.offset;\n        dep.currentValue = currentValue;\n        dep.managerData = { fileReplacePosition, packageFile };\n        dep.skipReason = 'unknown-version';\n      }\n    } else {\n      const fileReplacePosition = versionTpl.offset;\n      dep.managerData = { fileReplacePosition, packageFile };\n      dep.skipReason = 'unknown-version';\n    }\n  } else {\n    const currentValue = pluginVersion.value;\n    const fileReplacePosition = pluginVersion.offset;\n    dep.currentValue = currentValue;\n    dep.managerData = { fileReplacePosition, packageFile };\n  }\n\n  return { deps: [dep] };\n}\n\nfunction processCustomRegistryUrl({\n  tokenMap,\n  variables,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  let localVariables = variables;\n  if (tokenMap.keyToken?.value === 'name') {\n    localVariables = {\n      ...variables,\n      name: {\n        key: 'name',\n        value: tokenMap.valToken.value,\n      },\n    };\n  }\n\n  let registryUrl: string | null = tokenMap.registryUrl?.value;\n  if (tokenMap.registryUrl?.type === TokenType.StringInterpolation) {\n    const token = tokenMap.registryUrl as StringInterpolation;\n    registryUrl = interpolateString(token.children, localVariables);\n  }\n\n  try {\n    if (registryUrl) {\n      registryUrl = registryUrl.replace(regEx(/\\\\/g), '');\n      const { host, protocol } = url.parse(registryUrl);\n      if (host && protocol) {\n        return { urls: [registryUrl] };\n      }\n    }\n  } catch (e) {\n    // no-op\n  }\n  return null;\n}\n\nfunction processPredefinedRegistryUrl({\n  tokenMap,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const registryName = tokenMap.registryName?.value;\n  const registryUrl = {\n    mavenCentral: MAVEN_REPO,\n    jcenter: JCENTER_REPO,\n    google: GOOGLE_REPO,\n    gradlePluginPortal: GRADLE_PLUGIN_PORTAL_REPO,\n  }[registryName];\n  return { urls: [registryUrl!] };\n}\n\nconst annoyingMethods = new Set([\n  'createXmlValueRemover',\n  'events',\n  'args',\n  'arrayOf',\n  'listOf',\n  'mutableListOf',\n  'setOf',\n  'mutableSetOf',\n  'stages', // https://github.com/ajoberstar/reckon\n]);\n\nfunction processLongFormDep({\n  tokenMap,\n  variables,\n  packageFile,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const groupId = coercePotentialString(tokenMap.groupId, variables);\n  const artifactId = coercePotentialString(tokenMap.artifactId, variables);\n  const version = coercePotentialString(tokenMap.version, variables);\n  const dep = parseDependencyString([groupId, artifactId, version].join(':'));\n  if (dep) {\n    const versionToken: Token = tokenMap.version;\n    if (versionToken.type === TokenType.Word) {\n      const variable = variables[versionToken.value];\n      dep.groupName = variable.key;\n      dep.managerData = {\n        fileReplacePosition: variable.fileReplacePosition,\n        packageFile: variable.packageFile,\n      };\n    } else {\n      dep.managerData = {\n        fileReplacePosition: versionToken.offset,\n        packageFile,\n      };\n    }\n    const methodName = tokenMap.methodName?.value;\n    if (annoyingMethods.has(methodName)) {\n      dep.skipReason = 'ignored';\n    }\n\n    return { deps: [dep] };\n  }\n  return null;\n}\n\nfunction processLibraryDep(input: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const { tokenMap } = input;\n\n  const varNameToken = tokenMap.varName;\n  const key = varNameToken.value;\n  const fileReplacePosition = varNameToken.offset;\n  const packageFile = input.packageFile;\n\n  const groupId = tokenMap.groupId?.value;\n  const artifactId = tokenMap.artifactId?.value;\n  const value = `${groupId}:${artifactId}`;\n  const res: SyntaxHandlerOutput = {};\n\n  if (groupId && artifactId) {\n    res.vars = { [key]: { key, value, fileReplacePosition, packageFile } };\n    const version = tokenMap.version;\n    if (version) {\n      if (tokenMap.versionType?.value === 'versionRef') {\n        version.type = TokenType.Word;\n      }\n      const depRes = processLongFormDep({\n        ...input,\n        tokenMap: { ...input.tokenMap, version },\n      });\n      return { ...depRes, ...res };\n    }\n  }\n  return res;\n}\n\nfunction processApplyFrom({\n  tokenMap,\n  variables,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  let scriptFile: string | null = tokenMap.scriptFile?.value ?? null;\n  if (tokenMap.scriptFile?.type === TokenType.StringInterpolation) {\n    const token = tokenMap.scriptFile as StringInterpolation;\n    scriptFile = interpolateString(token.children, variables);\n  }\n\n  if (tokenMap.parentPath) {\n    let parentPath: string | null = tokenMap.parentPath.value ?? null;\n    if (tokenMap.parentPath.type === TokenType.Word) {\n      parentPath = coercePotentialString(tokenMap.parentPath, variables);\n    } else if (tokenMap.parentPath.type === TokenType.StringInterpolation) {\n      const token = tokenMap.parentPath as StringInterpolation;\n      parentPath = interpolateString(token.children, variables);\n    }\n    if (parentPath && scriptFile) {\n      scriptFile = upath.join(parentPath, scriptFile);\n    }\n  }\n\n  return { scriptFile };\n}\n\nconst matcherConfigs: SyntaxMatchConfig[] = [\n  {\n    // ext.foo = 'baz'\n    // project.foo = 'baz'\n    // rootProject.foo = 'baz'\n    matchers: [\n      {\n        matchType: TokenType.Word,\n        matchValue: ['ext', 'project', 'rootProject'],\n      },\n      { matchType: TokenType.Dot },\n      { matchType: TokenType.Word, tokenMapKey: 'keyToken' },\n      { matchType: TokenType.Assignment },\n      { matchType: TokenType.String, tokenMapKey: 'valToken' },\n      endOfInstruction,\n    ],\n    handler: handleAssignment,\n  },\n  {\n    // foo.bar = 'baz'\n    matchers: [\n      { matchType: TokenType.Word, tokenMapKey: 'objectToken' },\n      { matchType: TokenType.Dot },\n      { matchType: TokenType.Word, tokenMapKey: 'keyToken' },\n      { matchType: TokenType.Assignment },\n      { matchType: TokenType.String, tokenMapKey: 'valToken' },\n      endOfInstruction,\n    ],\n    handler: handleAssignment,\n  },\n  {\n    // foo = 'bar'\n    matchers: [\n      { matchType: TokenType.Word, tokenMapKey: 'keyToken' },\n      { matchType: TokenType.Assignment },\n      { matchType: TokenType.String, tokenMapKey: 'valToken' },\n      endOfInstruction,\n    ],\n    handler: handleAssignment,\n  },\n  {\n    // set('foo', 'bar')\n    matchers: [\n      { matchType: TokenType.Word, matchValue: ['set', 'version'] },\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.String, tokenMapKey: 'keyToken' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.String, tokenMapKey: 'valToken' },\n      { matchType: TokenType.RightParen },\n      endOfInstruction,\n    ],\n    handler: handleAssignment,\n  },\n  {\n    // 'foo.bar:baz:1.2.3'\n    // 'foo.bar:baz:1.2.3@ext'\n    matchers: [\n      {\n        matchType: TokenType.String,\n        tokenMapKey: 'token',\n      },\n    ],\n    handler: processDepString,\n  },\n  {\n    // \"foo.bar:baz:${bazVersion}\"\n    // \"foo.bar:baz:${bazVersion}@ext\"\n    matchers: [\n      {\n        matchType: TokenType.StringInterpolation,\n        tokenMapKey: 'depInterpolation',\n      },\n    ],\n    handler: processDepInterpolation,\n  },\n  {\n    // id 'foo.bar' version '1.2.3'\n    // id 'foo.bar' version fooBarVersion\n    // id 'foo.bar' version \"$fooBarVersion\"\n    matchers: [\n      {\n        matchType: TokenType.Word,\n        matchValue: ['id', 'kotlin'],\n        tokenMapKey: 'methodName',\n      },\n      { matchType: TokenType.String, tokenMapKey: 'pluginName' },\n      { matchType: TokenType.Word, matchValue: 'version' },\n      {\n        matchType: [\n          TokenType.String,\n          TokenType.Word,\n          TokenType.StringInterpolation,\n        ],\n        tokenMapKey: 'pluginVersion',\n      },\n      endOfInstruction,\n    ],\n    handler: processPlugin,\n  },\n  {\n    // id('foo.bar') version '1.2.3'\n    // id('foo.bar') version fooBarVersion\n    // id('foo.bar') version \"$fooBarVersion\"\n    matchers: [\n      {\n        matchType: TokenType.Word,\n        matchValue: ['id', 'kotlin'],\n        tokenMapKey: 'methodName',\n      },\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.String, tokenMapKey: 'pluginName' },\n      { matchType: TokenType.RightParen },\n      { matchType: TokenType.Word, matchValue: 'version' },\n      {\n        matchType: [\n          TokenType.String,\n          TokenType.Word,\n          TokenType.StringInterpolation,\n        ],\n        tokenMapKey: 'pluginVersion',\n      },\n      endOfInstruction,\n    ],\n    handler: processPlugin,\n  },\n  {\n    // mavenCentral()\n    matchers: [\n      {\n        matchType: TokenType.Word,\n        matchValue: ['mavenCentral', 'jcenter', 'google', 'gradlePluginPortal'],\n        tokenMapKey: 'registryName',\n      },\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.RightParen },\n      endOfInstruction,\n    ],\n    handler: processPredefinedRegistryUrl,\n  },\n  {\n    // mavenCentral { content {\n    matchers: [\n      {\n        matchType: TokenType.Word,\n        matchValue: ['mavenCentral', 'jcenter', 'google', 'gradlePluginPortal'],\n        tokenMapKey: 'registryName',\n      },\n      { matchType: TokenType.LeftBrace },\n      {\n        matchType: TokenType.Word,\n        matchValue: ['content'],\n      },\n      {\n        matchType: TokenType.LeftBrace,\n        lookahead: true,\n      },\n    ],\n    handler: processPredefinedRegistryUrl,\n  },\n  {\n    // maven(\"https://repository.mycompany.com/m2/repository\")\n    matchers: [\n      {\n        matchType: TokenType.Word,\n        matchValue: 'maven',\n      },\n      { matchType: TokenType.LeftParen },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'registryUrl',\n      },\n      { matchType: TokenType.RightParen },\n      endOfInstruction,\n    ],\n    handler: processCustomRegistryUrl,\n  },\n  {\n    // maven { name = \"baz\"; url = \"https://maven.springframework.org/${name}\" }\n    matchers: [\n      {\n        matchType: TokenType.Word,\n        matchValue: 'maven',\n      },\n      { matchType: TokenType.LeftBrace },\n      {\n        matchType: TokenType.Word,\n        matchValue: 'name',\n        tokenMapKey: 'keyToken',\n      },\n      { matchType: TokenType.Assignment },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'valToken',\n      },\n      {\n        matchType: TokenType.Word,\n        matchValue: 'url',\n      },\n      { matchType: TokenType.Assignment },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'registryUrl',\n      },\n      endOfInstruction,\n    ],\n    handler: processCustomRegistryUrl,\n  },\n  {\n    // maven { url = \"https://maven.springframework.org/release\"\n    matchers: [\n      {\n        matchType: TokenType.Word,\n        matchValue: 'maven',\n      },\n      { matchType: TokenType.LeftBrace },\n      {\n        matchType: TokenType.Word,\n        matchValue: 'url',\n      },\n      { matchType: TokenType.Assignment },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'registryUrl',\n      },\n      endOfInstruction,\n    ],\n    handler: processCustomRegistryUrl,\n  },\n  {\n    // maven { url = uri(\"https://maven.springframework.org/release\")\n    matchers: [\n      {\n        matchType: TokenType.Word,\n        matchValue: 'maven',\n      },\n      { matchType: TokenType.LeftBrace },\n      {\n        matchType: TokenType.Word,\n        matchValue: 'url',\n      },\n      { matchType: TokenType.Assignment },\n      {\n        matchType: TokenType.Word,\n        matchValue: 'uri',\n      },\n      { matchType: TokenType.LeftParen },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'registryUrl',\n      },\n      { matchType: TokenType.RightParen },\n      endOfInstruction,\n    ],\n    handler: processCustomRegistryUrl,\n  },\n  {\n    // maven { url \"https://maven.springframework.org/release\"\n    matchers: [\n      {\n        matchType: TokenType.Word,\n        matchValue: 'maven',\n      },\n      { matchType: TokenType.LeftBrace },\n      {\n        matchType: TokenType.Word,\n        matchValue: 'url',\n      },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'registryUrl',\n      },\n      endOfInstruction,\n    ],\n    handler: processCustomRegistryUrl,\n  },\n  {\n    // url 'https://repo.spring.io/snapshot/'\n    matchers: [\n      { matchType: TokenType.Word, matchValue: ['uri', 'url'] },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'registryUrl',\n      },\n      endOfInstruction,\n    ],\n    handler: processCustomRegistryUrl,\n  },\n  {\n    // url('https://repo.spring.io/snapshot/')\n    matchers: [\n      { matchType: TokenType.Word, matchValue: ['uri', 'url'] },\n      { matchType: TokenType.LeftParen },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'registryUrl',\n      },\n      { matchType: TokenType.RightParen },\n      endOfInstruction,\n    ],\n    handler: processCustomRegistryUrl,\n  },\n  {\n    // library(\"foobar\", \"foo\", \"bar\").versionRef(\"foo.bar\")\n    // library(\"foobar\", \"foo\", \"bar\").version(\"1.2.3\")\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'library' },\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.String, tokenMapKey: 'varName' },\n      { matchType: TokenType.Comma },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.RightParen },\n      { matchType: TokenType.Dot },\n      {\n        matchType: TokenType.Word,\n        matchValue: ['versionRef', 'version'],\n        tokenMapKey: 'versionType',\n      },\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.String, tokenMapKey: 'version' },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processLibraryDep,\n  },\n  {\n    // library(\"foobar\", \"foo\", \"bar\")\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'library' },\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.String, tokenMapKey: 'varName' },\n      { matchType: TokenType.Comma },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processLibraryDep,\n  },\n  {\n    // group: \"com.example\", name: \"my.dependency\", version: \"1.2.3\"\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'group' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'name' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'version' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'version' },\n      endOfInstruction,\n    ],\n    handler: processLongFormDep,\n  },\n  {\n    // (group: \"com.example\", name: \"my.dependency\", version: \"1.2.3\")\n    matchers: [\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.Word, matchValue: 'group' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'name' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'version' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'version' },\n      { matchType: TokenType.RightParen },\n      endOfInstruction,\n    ],\n    handler: processLongFormDep,\n  },\n  {\n    // group: \"com.example\", name: \"my.dependency\", version: \"1.2.3\", classifier:\"class\"\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'group' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'name' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'version' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'version' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'classifier' },\n      { matchType: TokenType.Colon },\n      endOfInstruction,\n    ],\n    handler: processLongFormDep,\n  },\n  {\n    // (group: \"com.example\", name: \"my.dependency\", version: \"1.2.3\", classifier:\"class\")\n    matchers: [\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.Word, matchValue: 'group' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'name' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'version' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'version' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'classifier' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'classifier' },\n      { matchType: TokenType.RightParen },\n      endOfInstruction,\n    ],\n    handler: processLongFormDep,\n  },\n  {\n    // group: \"com.example\", name: \"my.dependency\", version: \"1.2.3\"{\n    //        exclude module: 'exclude'\n    //     }\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'group' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'name' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'version' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'version' },\n      { matchType: TokenType.LeftBrace },\n      { matchType: TokenType.Word, matchValue: 'exclude' },\n      { matchType: TokenType.Word, matchValue: 'module' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'exclude' },\n      { matchType: TokenType.RightBrace },\n      endOfInstruction,\n    ],\n    handler: processLongFormDep,\n  },\n  {\n    // (group: \"com.example\", name: \"my.dependency\", version: \"1.2.3\"){\n    //        exclude module: 'exclude'\n    //     }\n    matchers: [\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.Word, matchValue: 'group' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'name' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'version' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'version' },\n      { matchType: TokenType.RightParen },\n      { matchType: TokenType.LeftBrace },\n      { matchType: TokenType.Word, matchValue: 'exclude' },\n      { matchType: TokenType.Word, matchValue: 'module' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'exclude' },\n      { matchType: TokenType.RightBrace },\n      endOfInstruction,\n    ],\n    handler: processLongFormDep,\n  },\n  {\n    // fooBarBaz(\"com.example\", \"my.dependency\", \"1.2.3\")\n    matchers: [\n      { matchType: TokenType.Word, tokenMapKey: 'methodName' },\n      { matchType: TokenType.LeftParen },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.Comma },\n      { matchType: potentialStringTypes, tokenMapKey: 'version' },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processLongFormDep,\n  },\n  {\n    // (\"com.example\", \"my.dependency\", \"1.2.3\")\n    matchers: [\n      { matchType: TokenType.LeftParen },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.Comma },\n      { matchType: potentialStringTypes, tokenMapKey: 'version' },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processLongFormDep,\n  },\n  {\n    // (group = \"com.example\", name = \"my.dependency\", version = \"1.2.3\")\n    matchers: [\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.Word, matchValue: 'group' },\n      { matchType: TokenType.Assignment },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'name' },\n      { matchType: TokenType.Assignment },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'version' },\n      { matchType: TokenType.Assignment },\n      { matchType: potentialStringTypes, tokenMapKey: 'version' },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processLongFormDep,\n  },\n  {\n    // apply from: 'foo.gradle'\n    // apply from: \"${somedir}/foo.gradle\"\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'apply' },\n      { matchType: TokenType.Word, matchValue: 'from' },\n      { matchType: TokenType.Colon },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'scriptFile',\n      },\n    ],\n    handler: processApplyFrom,\n  },\n  {\n    // apply from: file(\"${somedir}/foo.gradle\")\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'apply' },\n      { matchType: TokenType.Word, matchValue: 'from' },\n      { matchType: TokenType.Colon },\n      { matchType: TokenType.Word, matchValue: 'file' },\n      { matchType: TokenType.LeftParen },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'scriptFile',\n      },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processApplyFrom,\n  },\n  {\n    // apply from: new File(\"${somedir}/foo.gradle\")\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'apply' },\n      { matchType: TokenType.Word, matchValue: 'from' },\n      { matchType: TokenType.Colon },\n      { matchType: TokenType.Word, matchValue: 'new' },\n      { matchType: TokenType.Word, matchValue: 'File' },\n      { matchType: TokenType.LeftParen },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'scriptFile',\n      },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processApplyFrom,\n  },\n  {\n    // apply from: new File(somedir, \"${otherdir}/foo.gradle\")\n    // apply from: new File(\"${somedir}\", \"${otherdir}/foo.gradle\")\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'apply' },\n      { matchType: TokenType.Word, matchValue: 'from' },\n      { matchType: TokenType.Colon },\n      { matchType: TokenType.Word, matchValue: 'new' },\n      { matchType: TokenType.Word, matchValue: 'File' },\n      { matchType: TokenType.LeftParen },\n      {\n        matchType: [\n          TokenType.Word,\n          TokenType.String,\n          TokenType.StringInterpolation,\n        ],\n        tokenMapKey: 'parentPath',\n      },\n      { matchType: TokenType.Comma },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'scriptFile',\n      },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processApplyFrom,\n  },\n  {\n    // apply from: project.file(\"${somedir}/foo.gradle\")\n    // apply from: rootProject.file(\"${somedir}/foo.gradle\")\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'apply' },\n      { matchType: TokenType.Word, matchValue: 'from' },\n      { matchType: TokenType.Colon },\n      { matchType: TokenType.Word, matchValue: ['project', 'rootProject'] },\n      { matchType: TokenType.Dot },\n      { matchType: TokenType.Word, matchValue: 'file' },\n      { matchType: TokenType.LeftParen },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'scriptFile',\n      },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processApplyFrom,\n  },\n  {\n    // apply(from = 'foo.gradle')\n    // apply(from = \"${somedir}/foo.gradle\")\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'apply' },\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.Word, matchValue: 'from' },\n      { matchType: TokenType.Assignment },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'scriptFile',\n      },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processApplyFrom,\n  },\n  {\n    // apply(from = File(\"${somedir}/foo.gradle\"))\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'apply' },\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.Word, matchValue: 'from' },\n      { matchType: TokenType.Assignment },\n      { matchType: TokenType.Word, matchValue: 'File' },\n      { matchType: TokenType.LeftParen },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'scriptFile',\n      },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processApplyFrom,\n  },\n  {\n    // apply(from = File(somedir, \"${otherdir}/foo.gradle\"))\n    // apply(from = File(\"${somedir}\", \"${otherdir}/foo.gradle\")\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'apply' },\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.Word, matchValue: 'from' },\n      { matchType: TokenType.Assignment },\n      { matchType: TokenType.Word, matchValue: 'File' },\n      { matchType: TokenType.LeftParen },\n      {\n        matchType: [\n          TokenType.Word,\n          TokenType.String,\n          TokenType.StringInterpolation,\n        ],\n        tokenMapKey: 'parentPath',\n      },\n      { matchType: TokenType.Comma },\n      {\n        matchType: [TokenType.String, TokenType.StringInterpolation],\n        tokenMapKey: 'scriptFile',\n      },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processApplyFrom,\n  },\n];\n\nfunction tryMatch({\n  tokens,\n  variables,\n  packageFile,\n}: MatchConfig): SyntaxHandlerOutput {\n  for (const { matchers, handler } of matcherConfigs) {\n    const tokenMap = matchTokens(tokens, matchers);\n    if (tokenMap) {\n      const result = handler({\n        packageFile,\n        variables,\n        tokenMap,\n      });\n      if (result !== null) {\n        return result;\n      }\n    }\n  }\n  tokens.shift();\n  return null;\n}\n\nasync function parseInlineScriptFile(\n  scriptFile: string,\n  variables: PackageVariables,\n  recursionDepth: number,\n  packageFile = ''\n): Promise<SyntaxHandlerOutput> {\n  if (recursionDepth > 2) {\n    logger.debug({ scriptFile }, `Max recursion depth reached`);\n    return null;\n  }\n\n  if (!regEx(/\\.gradle(\\.kts)?$/).test(scriptFile)) {\n    logger.warn({ scriptFile }, `Only Gradle files can be included`);\n    return null;\n  }\n\n  const scriptFilePath = getSiblingFileName(packageFile, scriptFile);\n  const scriptFileContent = await readLocalFile(scriptFilePath, 'utf8');\n  if (!scriptFileContent) {\n    logger.debug({ scriptFilePath }, `Failed to process included Gradle file`);\n    return null;\n  }\n\n  return parseGradle(\n    scriptFileContent,\n    variables,\n    scriptFilePath,\n    recursionDepth + 1\n  );\n}\n\nexport async function parseGradle(\n  input: string,\n  initVars: PackageVariables = {},\n  packageFile?: string,\n  recursionDepth = 0\n): Promise<ParseGradleResult> {\n  let vars: PackageVariables = { ...initVars };\n  const deps: PackageDependency<GradleManagerData>[] = [];\n  const urls: string[] = [];\n\n  const tokens = tokenize(input);\n  let prevTokensLength = tokens.length;\n  while (tokens.length) {\n    let matchResult = tryMatch({ tokens, variables: vars, packageFile });\n    if (matchResult?.scriptFile) {\n      matchResult = await parseInlineScriptFile(\n        matchResult.scriptFile,\n        vars,\n        recursionDepth,\n        packageFile\n      );\n    }\n    if (matchResult?.deps?.length) {\n      deps.push(...matchResult.deps);\n    }\n    if (matchResult?.vars) {\n      vars = { ...vars, ...matchResult.vars };\n    }\n    if (matchResult?.urls) {\n      urls.push(...matchResult.urls);\n    }\n\n    // istanbul ignore if\n    if (tokens.length >= prevTokensLength) {\n      // Should not happen, but it's better to be prepared\n      logger.warn(\n        { packageFile },\n        // TODO: types (#7154)\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `${packageFile} parsing error, results can be incomplete`\n      );\n      break;\n    }\n    prevTokensLength = tokens.length;\n  }\n\n  return { deps, urls, vars };\n}\n\nconst propWord = '[a-zA-Z_][a-zA-Z0-9_]*(?:\\\\.[a-zA-Z_][a-zA-Z0-9_]*)*';\nconst propRegex = regEx(\n  `^(?<leftPart>\\\\s*(?<key>${propWord})\\\\s*[= :]\\\\s*['\"]?)(?<value>[^\\\\s'\"]+)['\"]?\\\\s*$`\n);\n\nexport function parseProps(\n  input: string,\n  packageFile?: string\n): { vars: PackageVariables; deps: PackageDependency<GradleManagerData>[] } {\n  let offset = 0;\n  const vars: PackageVariables = {};\n  const deps: PackageDependency[] = [];\n  for (const line of input.split(newlineRegex)) {\n    const lineMatch = propRegex.exec(line);\n    if (lineMatch?.groups) {\n      const { key, value, leftPart } = lineMatch.groups;\n      if (isDependencyString(value)) {\n        const dep = parseDependencyString(value);\n        if (dep) {\n          deps.push({\n            ...dep,\n            managerData: {\n              fileReplacePosition:\n                offset + leftPart.length + dep.depName!.length + 1,\n              packageFile,\n            },\n          });\n        }\n      } else {\n        vars[key] = {\n          key,\n          value,\n          fileReplacePosition: offset + leftPart.length,\n          packageFile,\n        };\n      }\n    }\n    offset += line.length + 1;\n  }\n  return { vars, deps };\n}\n"]}