"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setCachedModifiedResult = exports.getCachedModifiedResult = void 0;
const tslib_1 = require("tslib");
const is_1 = tslib_1.__importDefault(require("@sindresorhus/is"));
const repository_1 = require("../cache/repository");
function getCachedModifiedResult(branchName, branchSha) {
    const { branches } = (0, repository_1.getCache)();
    const branch = branches?.find((branch) => branch.branchName === branchName);
    if (branch?.sha !== branchSha) {
        return null;
    }
    return branch.isModified;
}
exports.getCachedModifiedResult = getCachedModifiedResult;
function setCachedModifiedResult(branchName, branchSha, isModified) {
    const cache = (0, repository_1.getCache)();
    cache.branches ?? (cache.branches = []);
    const { branches } = cache;
    const branch = branches?.find((branch) => branch.branchName === branchName) ??
        { branchName: branchName };
    // if branch not present add it to cache
    if (is_1.default.undefined(branch.sha)) {
        branches.push(branch);
    }
    if (branch.sha !== branchSha) {
        branch.sha = branchSha;
    }
    branch.isModified = isModified;
}
exports.setCachedModifiedResult = setCachedModifiedResult;
//# sourceMappingURL=modified-cache.js.map