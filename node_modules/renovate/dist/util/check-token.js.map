{"version":3,"file":"check-token.js","sourceRoot":"","sources":["../../lib/util/check-token.ts"],"names":[],"mappings":";;;;AAAA,4CAA0C;AAC1C,sCAAmC;AACnC,2EAAiF;AACjF,mEAAyE;AAEzE,uEAAiD;AACjD,gEAA0C;AAE1C,SAAgB,gBAAgB,CAC9B,YAAuD;IAEvD,MAAM,EAAE,KAAK,EAAE,GAAG,SAAS,CAAC,IAAI,CAAC;QAC/B,QAAQ,EAAE,sBAAU,CAAC,MAAM;QAC3B,GAAG,EAAE,wBAAwB;KAC9B,CAAC,CAAC;IAEH,IAAI,KAAK,EAAE;QACT,eAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACtC,OAAO;KACR;IAED,MAAM,UAAU,GAAa,EAAE,CAAC;IAChC,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,YAAY,IAAI,EAAE,CAAC,EAAE;QACrD,KAAK,MAAM,IAAI,IAAI,KAAK,IAAI,EAAE,EAAE;YAC9B,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE;gBACjC,IACE,GAAG,CAAC,UAAU,KAAK,kCAAoB,CAAC,EAAE;oBAC1C,GAAG,CAAC,UAAU,KAAK,0CAAwB,CAAC,EAAE,EAC9C;oBACA,GAAG,CAAC,UAAU,GAAG,uBAAuB,CAAC;oBACzC,IAAI,GAAG,CAAC,OAAO,EAAE;wBACf,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;qBAC9B;iBACF;aACF;SACF;KACF;IAED,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;QACzB,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAChC,sCAAsC,CACvC,CAAC;QACF,IAAI,CAAC,aAAa,EAAE;YAClB,eAAM,CAAC,IAAI,CACT,EAAE,UAAU,EAAE,EACd,gDAAgD,CACjD,CAAC;YACF,QAAQ,CAAC,GAAG,CAAC,sCAAsC,EAAE,IAAI,CAAC,CAAC;SAC5D;KACF;AACH,CAAC;AA1CD,4CA0CC","sourcesContent":["import { PlatformId } from '../constants';\nimport { logger } from '../logger';\nimport { GithubReleasesDatasource } from '../modules/datasource/github-releases';\nimport { GithubTagsDatasource } from '../modules/datasource/github-tags';\nimport type { PackageFile } from '../modules/manager/types';\nimport * as memCache from '../util/cache/memory';\nimport * as hostRules from './host-rules';\n\nexport function checkGithubToken(\n  packageFiles: Record<string, PackageFile[]> | undefined\n): void {\n  const { token } = hostRules.find({\n    hostType: PlatformId.Github,\n    url: 'https://api.github.com',\n  });\n\n  if (token) {\n    logger.trace('GitHub token is found');\n    return;\n  }\n\n  const githubDeps: string[] = [];\n  for (const files of Object.values(packageFiles ?? {})) {\n    for (const file of files ?? []) {\n      for (const dep of file.deps ?? []) {\n        if (\n          dep.datasource === GithubTagsDatasource.id ||\n          dep.datasource === GithubReleasesDatasource.id\n        ) {\n          dep.skipReason = 'github-token-required';\n          if (dep.depName) {\n            githubDeps.push(dep.depName);\n          }\n        }\n      }\n    }\n  }\n\n  if (githubDeps.length > 0) {\n    const warningLogged = memCache.get<boolean | undefined>(\n      'github-token-required-warning-logged'\n    );\n    if (!warningLogged) {\n      logger.warn(\n        { githubDeps },\n        `GitHub token is required for some dependencies`\n      );\n      memCache.set('github-token-required-warning-logged', true);\n    }\n  }\n}\n"]}