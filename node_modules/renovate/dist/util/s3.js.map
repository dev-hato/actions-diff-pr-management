{"version":3,"file":"s3.js","sourceRoot":"","sources":["../../lib/util/s3.ts"],"names":[],"mappings":";;;AAAA,+CAA+C;AAC/C,kDAAwC;AACxC,+BAAiC;AAEjC,IAAI,UAA0B,CAAC;AAC/B,SAAgB,WAAW;IACzB,IAAI,CAAC,UAAU,EAAE;QACf,UAAU,GAAG,IAAI,cAAE,CAAC,EAAE,CAAC,CAAC;KACzB;IACD,OAAO,UAAU,CAAC;AACpB,CAAC;AALD,kCAKC;AAOD,SAAgB,UAAU,CAAC,MAAoB;IAC7C,MAAM,SAAS,GAAG,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAA,cAAQ,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACzE,IAAI,SAAS,KAAK,IAAI,EAAE;QACtB,OAAO,IAAI,CAAC;KACb;IACD,IAAI,SAAS,CAAC,QAAQ,KAAK,KAAK,EAAE;QAChC,OAAO,IAAI,CAAC;KACb;IACD,OAAO;QACL,MAAM,EAAE,SAAS,CAAC,IAAI;QACtB,GAAG,EAAE,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;KACrC,CAAC;AACJ,CAAC;AAZD,gCAYC","sourcesContent":["// Singleton S3 instance initialized on-demand.\nimport { S3 } from '@aws-sdk/client-s3';\nimport { parseUrl } from './url';\n\nlet s3Instance: S3 | undefined;\nexport function getS3Client(): S3 {\n  if (!s3Instance) {\n    s3Instance = new S3({});\n  }\n  return s3Instance;\n}\n\nexport interface S3UrlParts {\n  Bucket: string;\n  Key: string;\n}\n\nexport function parseS3Url(rawUrl: URL | string): S3UrlParts | null {\n  const parsedUrl = typeof rawUrl === 'string' ? parseUrl(rawUrl) : rawUrl;\n  if (parsedUrl === null) {\n    return null;\n  }\n  if (parsedUrl.protocol !== 's3:') {\n    return null;\n  }\n  return {\n    Bucket: parsedUrl.host,\n    Key: parsedUrl.pathname.substring(1),\n  };\n}\n"]}