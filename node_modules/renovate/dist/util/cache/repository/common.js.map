{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../lib/util/cache/repository/common.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAGlC,+FAA+F;AAClF,QAAA,cAAc,GAAG,EAAE,CAAC;AAEjC,SAAgB,YAAY,CAC1B,KAAc,EACd,IAAa;IAEb,OAAO,CACL,YAAE,CAAC,WAAW,CAAC,KAAK,CAAC;QACrB,YAAE,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC9B,KAAK,CAAC,QAAQ,KAAK,EAAE;QACrB,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;QAC3B,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC,UAAU,CAAC,CACrC,CAAC;AACJ,CAAC;AAXD,oCAWC;AAED,SAAgB,YAAY,CAC1B,KAAc,EACd,IAAa;IAEb,OAAO,CACL,YAAE,CAAC,WAAW,CAAC,KAAK,CAAC;QACrB,YAAE,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC9B,KAAK,CAAC,QAAQ,KAAK,EAAE;QACrB,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;QAC3B,YAAE,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;QAC1B,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC,UAAU,CAAC,CACrC,CAAC;AACJ,CAAC;AAZD,oCAYC;AAED,SAAgB,YAAY,CAC1B,KAAc,EACd,IAAa;IAEb,OAAO,CACL,YAAE,CAAC,WAAW,CAAC,KAAK,CAAC;QACrB,YAAE,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC9B,KAAK,CAAC,QAAQ,KAAK,sBAAc;QACjC,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;QAC3B,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC,UAAU,CAAC;QACpC,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;QACxB,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CACtB,CAAC;AACJ,CAAC;AAbD,oCAaC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { RepoCacheData, RepoCacheRecord } from './types';\n\n// Increment this whenever there could be incompatibilities between old and new cache structure\nexport const CACHE_REVISION = 12;\n\nexport function isValidRev10(\n  input: unknown,\n  repo?: string\n): input is RepoCacheData & { repository?: string; revision?: number } {\n  return (\n    is.plainObject(input) &&\n    is.safeInteger(input.revision) &&\n    input.revision === 10 &&\n    is.string(input.repository) &&\n    (!repo || repo === input.repository)\n  );\n}\n\nexport function isValidRev11(\n  input: unknown,\n  repo?: string\n): input is { repository: string; revision: number; data: RepoCacheData } {\n  return (\n    is.plainObject(input) &&\n    is.safeInteger(input.revision) &&\n    input.revision === 11 &&\n    is.string(input.repository) &&\n    is.plainObject(input.data) &&\n    (!repo || repo === input.repository)\n  );\n}\n\nexport function isValidRev12(\n  input: unknown,\n  repo?: string\n): input is RepoCacheRecord {\n  return (\n    is.plainObject(input) &&\n    is.safeInteger(input.revision) &&\n    input.revision === CACHE_REVISION &&\n    is.string(input.repository) &&\n    (!repo || repo === input.repository) &&\n    is.string(input.payload) &&\n    is.string(input.hash)\n  );\n}\n"]}