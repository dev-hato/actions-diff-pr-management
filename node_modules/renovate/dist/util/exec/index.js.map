{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/util/exec/index.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport upath from 'upath';\nimport { GlobalConfig } from '../../config/global';\nimport { TEMPORARY_ERROR } from '../../constants/error-messages';\nimport { logger } from '../../logger';\nimport { generateInstallCommands, isDynamicInstall } from './buildpack';\nimport { rawExec } from './common';\nimport { generateDockerCommand, removeDockerContainer } from './docker';\nimport { getChildProcessEnv } from './env';\nimport type {\n  DockerOptions,\n  ExecOptions,\n  ExecResult,\n  ExtraEnv,\n  Opt,\n  RawExecOptions,\n} from './types';\n\nfunction getChildEnv({\n  extraEnv,\n  env: forcedEnv = {},\n}: ExecOptions): Record<string, string> {\n  const globalConfigEnv = GlobalConfig.get('customEnvVariables');\n\n  const inheritedKeys: string[] = [];\n  for (const [key, val] of Object.entries(extraEnv ?? {})) {\n    if (is.string(val)) {\n      inheritedKeys.push(key);\n    }\n  }\n\n  const parentEnv = getChildProcessEnv(inheritedKeys);\n  const combinedEnv = {\n    ...extraEnv,\n    ...parentEnv,\n    ...globalConfigEnv,\n    ...forcedEnv,\n  };\n\n  const result: Record<string, string> = {};\n  for (const [key, val] of Object.entries(combinedEnv)) {\n    if (is.string(val)) {\n      result[key] = `${val}`;\n    }\n  }\n\n  return result;\n}\n\nfunction dockerEnvVars(extraEnv: ExtraEnv, childEnv: ExtraEnv): string[] {\n  const extraEnvKeys = Object.keys(extraEnv || {});\n  return extraEnvKeys.filter((key) => is.nonEmptyString(childEnv[key]));\n}\n\nfunction getCwd({ cwd, cwdFile }: ExecOptions): string | undefined {\n  const defaultCwd = GlobalConfig.get('localDir');\n  const paramCwd = cwdFile\n    ? upath.join(defaultCwd, upath.dirname(cwdFile))\n    : cwd;\n  return paramCwd ?? defaultCwd;\n}\n\nfunction getRawExecOptions(opts: ExecOptions): RawExecOptions {\n  const defaultExecutionTimeout = GlobalConfig.get('executionTimeout');\n  const childEnv = getChildEnv(opts);\n  const cwd = getCwd(opts);\n  const rawExecOptions: RawExecOptions = {\n    cwd,\n    encoding: 'utf-8',\n    env: childEnv,\n    maxBuffer: opts.maxBuffer,\n    timeout: opts.timeout,\n  };\n  // Set default timeout config.executionTimeout if specified; othrwise to 15 minutes\n  if (!rawExecOptions.timeout) {\n    if (defaultExecutionTimeout) {\n      rawExecOptions.timeout = defaultExecutionTimeout * 60 * 1000;\n    } else {\n      rawExecOptions.timeout = 15 * 60 * 1000;\n    }\n  }\n\n  // Set default max buffer size to 10MB\n  rawExecOptions.maxBuffer = rawExecOptions.maxBuffer ?? 10 * 1024 * 1024;\n  return rawExecOptions;\n}\n\nfunction isDocker(docker: Opt<DockerOptions>): docker is DockerOptions {\n  const { binarySource } = GlobalConfig.get();\n  return binarySource === 'docker' && !!docker;\n}\n\ninterface RawExecArguments {\n  rawCommands: string[];\n  rawOptions: RawExecOptions;\n}\n\nasync function prepareRawExec(\n  cmd: string | string[],\n  opts: ExecOptions = {}\n): Promise<RawExecArguments> {\n  const { docker } = opts;\n  const { customEnvVariables, cacheDir, binarySource } = GlobalConfig.get();\n\n  if (binarySource === 'docker' || binarySource === 'install') {\n    const buildPackCacheDir = upath.join(cacheDir, 'buildpack');\n    opts.env ??= {};\n    opts.env.BUILDPACK_CACHE_DIR = buildPackCacheDir;\n  }\n\n  const rawOptions = getRawExecOptions(opts);\n\n  let rawCommands = typeof cmd === 'string' ? [cmd] : cmd;\n\n  if (isDocker(docker)) {\n    logger.debug({ image: docker.image }, 'Using docker to execute');\n    const extraEnv = {\n      ...opts.extraEnv,\n      ...customEnvVariables,\n    };\n    const childEnv = getChildEnv(opts);\n    const envVars = [\n      ...dockerEnvVars(extraEnv, childEnv),\n      'BUILDPACK_CACHE_DIR',\n    ];\n    const cwd = getCwd(opts);\n    const dockerOptions: DockerOptions = { ...docker, cwd, envVars };\n    const preCommands = [\n      ...(await generateInstallCommands(opts.toolConstraints)),\n      ...(opts.preCommands ?? []),\n    ];\n    const dockerCommand = await generateDockerCommand(\n      rawCommands,\n      preCommands,\n      dockerOptions\n    );\n    rawCommands = [dockerCommand];\n  } else if (isDynamicInstall(opts.toolConstraints)) {\n    logger.debug('Using buildpack dynamic installs');\n    rawCommands = [\n      ...(await generateInstallCommands(opts.toolConstraints)),\n      ...rawCommands,\n    ];\n  }\n\n  return { rawCommands, rawOptions };\n}\n\nexport async function exec(\n  cmd: string | string[],\n  opts: ExecOptions = {}\n): Promise<ExecResult> {\n  const { docker } = opts;\n  const dockerChildPrefix =\n    GlobalConfig.get('dockerChildPrefix') ?? 'renovate_';\n\n  const { rawCommands, rawOptions } = await prepareRawExec(cmd, opts);\n  const useDocker = isDocker(docker);\n\n  let res: ExecResult = { stdout: '', stderr: '' };\n  for (const rawCmd of rawCommands) {\n    const startTime = Date.now();\n    if (useDocker) {\n      await removeDockerContainer(docker.image, dockerChildPrefix);\n    }\n    logger.debug({ command: rawCmd }, 'Executing command');\n    logger.trace({ commandOptions: rawOptions }, 'Command options');\n    try {\n      res = await rawExec(rawCmd, rawOptions);\n    } catch (err) {\n      logger.debug({ err }, 'rawExec err');\n      if (useDocker) {\n        await removeDockerContainer(docker.image, dockerChildPrefix).catch(\n          (removeErr: Error) => {\n            const message: string = err.message;\n            throw new Error(\n              `Error: \"${removeErr.message}\" - Original Error: \"${message}\"`\n            );\n          }\n        );\n      }\n      if (err.signal === `SIGTERM`) {\n        logger.debug(\n          { err },\n          'exec interrupted by SIGTERM - run needs to be aborted'\n        );\n        throw new Error(TEMPORARY_ERROR);\n      }\n      throw err;\n    }\n    const durationMs = Math.round(Date.now() - startTime);\n    logger.debug(\n      {\n        cmd: rawCmd,\n        durationMs,\n        stdout: res.stdout,\n        stderr: res.stderr,\n      },\n      'exec completed'\n    );\n  }\n\n  return res;\n}\n"]}