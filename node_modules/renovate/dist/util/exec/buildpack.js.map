{"version":3,"file":"buildpack.js","sourceRoot":"","sources":["../../../lib/util/exec/buildpack.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { quote } from 'shlex';\nimport { GlobalConfig } from '../../config/global';\nimport { logger } from '../../logger';\nimport { getPkgReleases } from '../../modules/datasource';\nimport * as allVersioning from '../../modules/versioning';\nimport { id as composerVersioningId } from '../../modules/versioning/composer';\nimport { id as npmVersioningId } from '../../modules/versioning/npm';\nimport { id as pep440VersioningId } from '../../modules/versioning/pep440';\nimport { id as rubyVersioningId } from '../../modules/versioning/ruby';\nimport { id as semverVersioningId } from '../../modules/versioning/semver';\nimport { id as semverCoercedVersioningId } from '../../modules/versioning/semver-coerced';\nimport type { Opt, ToolConfig, ToolConstraint } from './types';\n\nconst allToolConfig: Record<string, ToolConfig> = {\n  bundler: {\n    datasource: 'rubygems',\n    depName: 'bundler',\n    versioning: 'ruby',\n  },\n  cocoapods: {\n    datasource: 'rubygems',\n    depName: 'cocoapods',\n    versioning: rubyVersioningId,\n  },\n  composer: {\n    datasource: 'github-releases',\n    depName: 'composer/composer',\n    versioning: composerVersioningId,\n  },\n  corepack: {\n    datasource: 'npm',\n    depName: 'corepack',\n    versioning: npmVersioningId,\n  },\n  erlang: {\n    datasource: 'github-releases',\n    depName: 'containerbase/erlang-prebuild',\n    versioning: semverCoercedVersioningId,\n  },\n  elixir: {\n    datasource: 'github-releases',\n    depName: 'elixir-lang/elixir',\n    versioning: semverVersioningId,\n  },\n  flux: {\n    datasource: 'github-releases',\n    depName: 'fluxcd/flux2',\n    versioning: semverVersioningId,\n  },\n  helm: {\n    datasource: 'github-releases',\n    depName: 'helm/helm',\n    versioning: semverVersioningId,\n  },\n  java: {\n    datasource: 'adoptium-java',\n    depName: 'java',\n    versioning: npmVersioningId,\n  },\n  jb: {\n    datasource: 'github-releases',\n    depName: 'jsonnet-bundler/jsonnet-bundler',\n    versioning: semverVersioningId,\n  },\n  node: {\n    datasource: 'node',\n    depName: 'node',\n    versioning: npmVersioningId,\n  },\n  npm: {\n    datasource: 'npm',\n    depName: 'npm',\n    hash: true,\n    versioning: npmVersioningId,\n  },\n  pnpm: {\n    datasource: 'npm',\n    depName: 'pnpm',\n    versioning: npmVersioningId,\n  },\n  poetry: {\n    datasource: 'pypi',\n    depName: 'poetry',\n    versioning: pep440VersioningId,\n  },\n  python: {\n    datasource: 'github-releases',\n    depName: 'containerbase/python-prebuild',\n    versioning: pep440VersioningId,\n  },\n  yarn: {\n    datasource: 'npm',\n    depName: 'yarn',\n    versioning: npmVersioningId,\n  },\n  'yarn-slim': {\n    datasource: 'npm',\n    depName: 'yarn',\n    versioning: npmVersioningId,\n  },\n};\n\nexport function supportsDynamicInstall(toolName: string): boolean {\n  return !!allToolConfig[toolName];\n}\n\nexport function isBuildpack(): boolean {\n  return !!process.env.BUILDPACK;\n}\n\nexport function isDynamicInstall(\n  toolConstraints?: Opt<ToolConstraint[]>\n): boolean {\n  const { binarySource } = GlobalConfig.get();\n  if (binarySource !== 'install') {\n    return false;\n  }\n  if (!isBuildpack()) {\n    logger.warn(\n      'binarySource=install is only compatible with images derived from containerbase/buildpack'\n    );\n    return false;\n  }\n  return !!toolConstraints?.every((toolConstraint) =>\n    supportsDynamicInstall(toolConstraint.toolName)\n  );\n}\n\nfunction isStable(\n  version: string,\n  versioning: allVersioning.VersioningApi,\n  latest?: string\n): boolean {\n  if (!versioning.isStable(version)) {\n    return false;\n  }\n  if (is.string(latest)) {\n    if (versioning.isGreaterThan(version, latest)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport async function resolveConstraint(\n  toolConstraint: ToolConstraint\n): Promise<string> {\n  const { toolName } = toolConstraint;\n  const toolConfig = allToolConfig[toolName];\n  if (!toolConfig) {\n    throw new Error(`Invalid tool to install: ${toolName}`);\n  }\n\n  const versioning = allVersioning.get(toolConfig.versioning);\n  let constraint = toolConstraint.constraint;\n  if (constraint) {\n    if (versioning.isValid(constraint)) {\n      if (versioning.isSingleVersion(constraint)) {\n        return constraint;\n      }\n    } else {\n      logger.warn({ toolName, constraint }, 'Invalid tool constraint');\n      constraint = undefined;\n    }\n  }\n\n  const pkgReleases = await getPkgReleases(toolConfig);\n  const releases = pkgReleases?.releases ?? [];\n\n  if (!releases?.length) {\n    throw new Error('No tool releases found.');\n  }\n\n  const matchingReleases = releases.filter(\n    (r) => !constraint || versioning.matches(r.version, constraint)\n  );\n\n  const stableMatchingVersion = matchingReleases\n    .filter((r) => isStable(r.version, versioning, pkgReleases?.tags?.latest))\n    .pop()?.version;\n  if (stableMatchingVersion) {\n    logger.debug(\n      { toolName, constraint, resolvedVersion: stableMatchingVersion },\n      'Resolved stable matching version'\n    );\n    return stableMatchingVersion;\n  }\n\n  const unstableMatchingVersion = matchingReleases.pop()?.version;\n  if (unstableMatchingVersion) {\n    logger.debug(\n      { toolName, constraint, resolvedVersion: unstableMatchingVersion },\n      'Resolved unstable matching version'\n    );\n    return unstableMatchingVersion;\n  }\n\n  const stableVersion = releases\n    .filter((r) => isStable(r.version, versioning, pkgReleases?.tags?.latest))\n    .pop()?.version;\n  if (stableVersion) {\n    logger.warn(\n      { toolName, constraint, stableVersion },\n      'No matching tool versions found for constraint - using latest stable version'\n    );\n  }\n\n  const highestVersion = releases.pop()!.version;\n  logger.warn(\n    { toolName, constraint, highestVersion },\n    'No matching or stable tool versions found - using an unstable version'\n  );\n  return highestVersion;\n}\n\nexport async function generateInstallCommands(\n  toolConstraints: Opt<ToolConstraint[]>\n): Promise<string[]> {\n  const installCommands: string[] = [];\n  if (toolConstraints?.length) {\n    for (const toolConstraint of toolConstraints) {\n      const toolVersion = await resolveConstraint(toolConstraint);\n      const { toolName } = toolConstraint;\n      const installCommand = `install-tool ${toolName} ${quote(toolVersion)}`;\n      installCommands.push(installCommand);\n      if (allToolConfig[toolName].hash) {\n        installCommands.push(`hash -d ${toolName} 2>/dev/null || true`);\n      }\n    }\n  }\n  return installCommands;\n}\n"]}