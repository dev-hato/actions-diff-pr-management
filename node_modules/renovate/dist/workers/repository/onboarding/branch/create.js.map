{"version":3,"file":"create.js","sourceRoot":"","sources":["../../../../../lib/workers/repository/onboarding/branch/create.ts"],"names":[],"mappings":";;;AAAA,gEAAiE;AACjE,sDAAyD;AAEzD,+CAA4C;AAC5C,gEAAoE;AACpE,qDAAkE;AAClE,qCAAuD;AAEvD,MAAM,iBAAiB,GAAG,6BAAe,CAAC,CAAC,CAAC,CAAC;AAEtC,KAAK,UAAU,sBAAsB,CAC1C,MAA+B;IAE/B,aAAa;IACb,MAAM,UAAU,GAAG,6BAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,wBAAyB,CAAC;QAC3E,CAAC,CAAC,MAAM,CAAC,wBAAwB;QACjC,CAAC,CAAC,iBAAiB,CAAC;IAEtB,eAAM,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;IACzC,aAAa;IACb,MAAM,QAAQ,GAAG,MAAM,IAAA,oCAA2B,EAAC,MAAM,EAAE,UAAW,CAAC,CAAC;IACxE,eAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;IAE3C,MAAM,oBAAoB,GAAG,IAAI,+CAA8B,CAC7D,MAAM,EACN,UAAW,CACZ,CAAC;IACF,MAAM,aAAa,GAAG,oBAAoB,CAAC,MAAM,EAAE,CAAC;IAEpD,qBAAqB;IACrB,IAAI,qBAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;QAC9B,eAAM,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;QAChE,OAAO,IAAI,CAAC;KACb;IAED,OAAO,IAAA,sBAAa,EAAC;QACnB,UAAU,EAAE,MAAM,CAAC,gBAAiB;QACpC,KAAK,EAAE;YACL;gBACE,IAAI,EAAE,UAAU;gBAChB,aAAa;gBACb,IAAI,EAAE,UAAW;gBACjB,QAAQ;aACT;SACF;QACD,OAAO,EAAE,aAAa,CAAC,QAAQ,EAAE;QACjC,cAAc,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc;KACxC,CAAC,CAAC;AACL,CAAC;AAtCD,wDAsCC","sourcesContent":["import { configFileNames } from '../../../../config/app-strings';\nimport { GlobalConfig } from '../../../../config/global';\nimport type { RenovateConfig } from '../../../../config/types';\nimport { logger } from '../../../../logger';\nimport { commitAndPush } from '../../../../modules/platform/commit';\nimport { OnboardingCommitMessageFactory } from './commit-message';\nimport { getOnboardingConfigContents } from './config';\n\nconst defaultConfigFile = configFileNames[0];\n\nexport async function createOnboardingBranch(\n  config: Partial<RenovateConfig>\n): Promise<string | null> {\n  // TODO #7154\n  const configFile = configFileNames.includes(config.onboardingConfigFileName!)\n    ? config.onboardingConfigFileName\n    : defaultConfigFile;\n\n  logger.debug('createOnboardingBranch()');\n  // TODO #7154\n  const contents = await getOnboardingConfigContents(config, configFile!);\n  logger.debug('Creating onboarding branch');\n\n  const commitMessageFactory = new OnboardingCommitMessageFactory(\n    config,\n    configFile!\n  );\n  const commitMessage = commitMessageFactory.create();\n\n  // istanbul ignore if\n  if (GlobalConfig.get('dryRun')) {\n    logger.info('DRY-RUN: Would commit files to onboarding branch');\n    return null;\n  }\n\n  return commitAndPush({\n    branchName: config.onboardingBranch!,\n    files: [\n      {\n        type: 'addition',\n        // TODO #7154\n        path: configFile!,\n        contents,\n      },\n    ],\n    message: commitMessage.toString(),\n    platformCommit: !!config.platformCommit,\n  });\n}\n"]}