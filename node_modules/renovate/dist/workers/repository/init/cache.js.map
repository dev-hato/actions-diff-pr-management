{"version":3,"file":"cache.js","sourceRoot":"","sources":["../../../../lib/workers/repository/init/cache.ts"],"names":[],"mappings":";;;;AAAA,gEAA0B;AAE1B,gFAA0D;AAC1D,6EAAuD;AACvD,wFAAkE;AAClE,8DAAoE;AACpE,yCAAmD;AAE5C,KAAK,UAAU,WAAW;IAC/B,QAAQ,CAAC,KAAK,EAAE,CAAC;IACjB,eAAe,CAAC,UAAU,EAAE,CAAC;IAC7B,MAAM,kBAAE,CAAC,MAAM,CAAC,IAAA,oBAAe,GAAE,CAAC,CAAC;IACnC,MAAM,CAAC,aAAa,EAAE,CAAC;AACzB,CAAC;AALD,kCAKC;AAEM,KAAK,UAAU,gBAAgB,CAAC,MAAsB;IAC3D,QAAQ,CAAC,IAAI,EAAE,CAAC;IAChB,MAAM,IAAA,oBAAa,EAAC,MAAM,CAAC,CAAC;IAC5B,MAAM,kBAAE,CAAC,SAAS,CAAC,IAAA,oBAAe,GAAE,CAAC,CAAC;IACtC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC;AALD,4CAKC","sourcesContent":["import fs from 'fs-extra';\nimport type { RenovateConfig } from '../../../config/types';\nimport * as npmApi from '../../../modules/datasource/npm';\nimport * as memCache from '../../../util/cache/memory';\nimport * as repositoryCache from '../../../util/cache/repository';\nimport { initRepoCache } from '../../../util/cache/repository/init';\nimport { privateCacheDir } from '../../../util/fs';\n\nexport async function resetCaches(): Promise<void> {\n  memCache.reset();\n  repositoryCache.resetCache();\n  await fs.remove(privateCacheDir());\n  npmApi.resetMemCache();\n}\n\nexport async function initializeCaches(config: RenovateConfig): Promise<void> {\n  memCache.init();\n  await initRepoCache(config);\n  await fs.ensureDir(privateCacheDir());\n  npmApi.setNpmrc(config.npmrc);\n}\n"]}