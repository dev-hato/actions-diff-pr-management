{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../lib/workers/repository/init/config.ts"],"names":[],"mappings":";;;AACA,iDAA6D;AAC7D,mCAA8C;AAC9C,yCAAmD;AAEnD,uBAAuB;AAChB,KAAK,UAAU,aAAa,CACjC,OAAuB;IAEvB,IAAI,MAAM,GAAG,EAAE,GAAG,OAAO,EAAE,CAAC;IAC5B,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,aAAa,CAAC;IACzC,IAAI,MAAM,CAAC,eAAe,KAAK,MAAM,EAAE;QACrC,MAAM,CAAC,eAAe,GAAG,MAAM,IAAA,gCAAqB,GAAE,CAAC;KACxD;IACD,MAAM,GAAG,MAAM,IAAA,8BAAqB,EAAC,MAAM,CAAC,CAAC;IAC7C,MAAM,GAAG,MAAM,IAAA,2BAAmB,EAAC,MAAM,CAAC,CAAC;IAC3C,OAAO,MAAM,CAAC;AAChB,CAAC;AAXD,sCAWC","sourcesContent":["import type { RenovateConfig } from '../../../config/types';\nimport { checkOnboardingBranch } from '../onboarding/branch';\nimport { mergeRenovateConfig } from './merge';\nimport { detectSemanticCommits } from './semantic';\n\n// istanbul ignore next\nexport async function getRepoConfig(\n  config_: RenovateConfig\n): Promise<RenovateConfig> {\n  let config = { ...config_ };\n  config.baseBranch = config.defaultBranch;\n  if (config.semanticCommits === 'auto') {\n    config.semanticCommits = await detectSemanticCommits();\n  }\n  config = await checkOnboardingBranch(config);\n  config = await mergeRenovateConfig(config);\n  return config;\n}\n"]}