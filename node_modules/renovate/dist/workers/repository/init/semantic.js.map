{"version":3,"file":"semantic.js","sourceRoot":"","sources":["../../../../lib/workers/repository/init/semantic.ts"],"names":[],"mappings":";;;;AAAA,0GAAwE;AACxE,4CAAyC;AACzC,+DAA0D;AAC1D,2CAAsD;AAI/C,KAAK,UAAU,qBAAqB;IACzC,eAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;IACxC,MAAM,KAAK,GAAG,IAAA,qBAAQ,GAAE,CAAC;IACzB,IAAI,KAAK,CAAC,eAAe,EAAE;QACzB,OAAO,KAAK,CAAC,eAAe,CAAC;KAC9B;IACD,MAAM,cAAc,GAAG,MAAM,IAAA,uBAAiB,GAAE,CAAC;IACjD,eAAM,CAAC,KAAK,CAAC,kBAAkB,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IACjE,MAAM,IAAI,GAAG,IAAA,uCAA2B,EAAC,cAAc,CAAC,CAAC;IACzD,eAAM,CAAC,KAAK,CAAC,8BAA8B,GAAG,IAAI,CAAC,CAAC;IACpD,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,eAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;QAClD,KAAK,CAAC,eAAe,GAAG,SAAS,CAAC;KACnC;SAAM;QACL,eAAM,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAC7C,KAAK,CAAC,eAAe,GAAG,UAAU,CAAC;KACpC;IACD,OAAO,KAAK,CAAC,eAAe,CAAC;AAC/B,CAAC;AAlBD,sDAkBC","sourcesContent":["import conventionalCommitsDetector from 'conventional-commits-detector';\nimport { logger } from '../../../logger';\nimport { getCache } from '../../../util/cache/repository';\nimport { getCommitMessages } from '../../../util/git';\n\ntype DetectedSemanticCommit = 'enabled' | 'disabled';\n\nexport async function detectSemanticCommits(): Promise<DetectedSemanticCommit> {\n  logger.debug('detectSemanticCommits()');\n  const cache = getCache();\n  if (cache.semanticCommits) {\n    return cache.semanticCommits;\n  }\n  const commitMessages = await getCommitMessages();\n  logger.trace(`commitMessages=${JSON.stringify(commitMessages)}`);\n  const type = conventionalCommitsDetector(commitMessages);\n  logger.debug('Semantic commits detection: ' + type);\n  if (type === 'angular') {\n    logger.debug('angular semantic commits detected');\n    cache.semanticCommits = 'enabled';\n  } else {\n    logger.debug('No semantic commits detected');\n    cache.semanticCommits = 'disabled';\n  }\n  return cache.semanticCommits;\n}\n"]}