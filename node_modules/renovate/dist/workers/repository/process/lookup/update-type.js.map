{"version":3,"file":"update-type.js","sourceRoot":"","sources":["../../../../../lib/workers/repository/process/lookup/update-type.ts"],"names":[],"mappings":";;;AASA,SAAgB,aAAa,CAC3B,MAAwB,EACxB,UAAuC,EACvC,cAAsB,EACtB,UAAkB;IAElB,IAAI,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAE,EAAE;QAC3E,OAAO,OAAO,CAAC;KAChB;IACD,IAAI,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAE,EAAE;QAC3E,OAAO,OAAO,CAAC;KAChB;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAbD,sCAaC","sourcesContent":["import type { UpdateType } from '../../../../config/types';\nimport type * as allVersioning from '../../../../modules/versioning';\n\nexport interface UpdateTypeConfig {\n  separateMajorMinor?: boolean;\n  separateMultipleMajor?: boolean;\n  separateMinorPatch?: boolean;\n}\n\nexport function getUpdateType(\n  config: UpdateTypeConfig,\n  versioning: allVersioning.VersioningApi,\n  currentVersion: string,\n  newVersion: string\n): UpdateType {\n  if (versioning.getMajor(newVersion)! > versioning.getMajor(currentVersion)!) {\n    return 'major';\n  }\n  if (versioning.getMinor(newVersion)! > versioning.getMinor(currentVersion)!) {\n    return 'minor';\n  }\n  return 'patch';\n}\n"]}