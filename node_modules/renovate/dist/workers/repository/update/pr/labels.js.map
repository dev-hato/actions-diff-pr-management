{"version":3,"file":"labels.js","sourceRoot":"","sources":["../../../../../lib/workers/repository/update/pr/labels.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,4EAAsD;AAEtD,SAAgB,aAAa,CAAC,MAAsB;IAClD,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;IACnC,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC;IACzC,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,MAAM,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC;SAC3C,MAAM,CAAC,YAAE,CAAC,8BAA8B,CAAC;SACzC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SAC/C,MAAM,CAAC,YAAE,CAAC,8BAA8B,CAAC,CAAC;AAC/C,CAAC;AAPD,sCAOC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { RenovateConfig } from '../../../../config/types';\nimport * as template from '../../../../util/template';\n\nexport function prepareLabels(config: RenovateConfig): string[] {\n  const labels = config.labels ?? [];\n  const addLabels = config.addLabels ?? [];\n  return [...new Set([...labels, ...addLabels])]\n    .filter(is.nonEmptyStringAndNotWhitespace)\n    .map((label) => template.compile(label, config))\n    .filter(is.nonEmptyStringAndNotWhitespace);\n}\n"]}