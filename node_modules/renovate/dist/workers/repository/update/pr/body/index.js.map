{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../lib/workers/repository/update/pr/body/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { PrDebugData, platform } from '../../../../../modules/platform';\nimport { regEx } from '../../../../../util/regex';\nimport { toBase64 } from '../../../../../util/string';\nimport * as template from '../../../../../util/template';\nimport { joinUrlParts } from '../../../../../util/url';\nimport type { BranchConfig } from '../../../../types';\nimport { getChangelogs } from './changelogs';\nimport { getPrConfigDescription } from './config-description';\nimport { getControls } from './controls';\nimport { getPrFooter } from './footer';\nimport { getPrHeader } from './header';\nimport { getPrExtraNotes, getPrNotes } from './notes';\nimport { getPrUpdatesTable } from './updates-table';\n\nfunction massageUpdateMetadata(config: BranchConfig): void {\n  config.upgrades.forEach((upgrade) => {\n    const {\n      homepage,\n      sourceUrl,\n      sourceDirectory,\n      changelogUrl,\n      dependencyUrl,\n    } = upgrade;\n    // TODO: types (#7154)\n    let depNameLinked = upgrade.depName!;\n    const primaryLink = homepage ?? sourceUrl ?? dependencyUrl;\n    if (primaryLink) {\n      depNameLinked = `[${depNameLinked}](${primaryLink})`;\n    }\n    const otherLinks = [];\n    if (homepage && sourceUrl) {\n      otherLinks.push(`[source](${sourceUrl})`);\n    }\n    if (changelogUrl) {\n      otherLinks.push(`[changelog](${changelogUrl})`);\n    }\n    if (otherLinks.length) {\n      depNameLinked += ` (${otherLinks.join(', ')})`;\n    }\n    upgrade.depNameLinked = depNameLinked;\n    const references: string[] = [];\n    if (homepage) {\n      references.push(`[homepage](${homepage})`);\n    }\n    if (sourceUrl) {\n      let fullUrl = sourceUrl;\n      if (sourceDirectory) {\n        fullUrl = joinUrlParts(sourceUrl, 'tree/HEAD/', sourceDirectory);\n      }\n      references.push(`[source](${fullUrl})`);\n    }\n    if (changelogUrl) {\n      references.push(`[changelog](${changelogUrl})`);\n    }\n    upgrade.references = references.join(', ');\n  });\n}\n\ninterface PrBodyConfig {\n  appendExtra?: string | null | undefined;\n  rebasingNotice?: string;\n  debugData: PrDebugData;\n}\n\nconst rebasingRegex = regEx(/\\*\\*Rebasing\\*\\*: .*/);\n\nexport async function getPrBody(\n  branchConfig: BranchConfig,\n  prBodyConfig: PrBodyConfig\n): Promise<string> {\n  massageUpdateMetadata(branchConfig);\n  const content = {\n    header: getPrHeader(branchConfig),\n    table: getPrUpdatesTable(branchConfig),\n    notes: getPrNotes(branchConfig) + getPrExtraNotes(branchConfig),\n    changelogs: getChangelogs(branchConfig),\n    configDescription: await getPrConfigDescription(branchConfig),\n    controls: await getControls(branchConfig),\n    footer: getPrFooter(branchConfig),\n  };\n\n  let prBody = '';\n  if (branchConfig.prBodyTemplate) {\n    const prBodyTemplate = branchConfig.prBodyTemplate;\n    prBody = template.compile(prBodyTemplate, content, false);\n    prBody = prBody.trim();\n    prBody = prBody.replace(regEx(/\\n\\n\\n+/g), '\\n\\n');\n    const prDebugData64 = toBase64(JSON.stringify(prBodyConfig.debugData));\n    prBody += `\\n<!--renovate-debug:${prDebugData64}-->\\n`;\n    prBody = platform.massageMarkdown(prBody);\n\n    if (prBodyConfig?.rebasingNotice) {\n      prBody = prBody.replace(\n        rebasingRegex,\n        `**Rebasing**: ${prBodyConfig.rebasingNotice}`\n      );\n    }\n  }\n  return prBody;\n}\n"]}