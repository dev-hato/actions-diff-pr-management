{"version":3,"file":"changelogs.js","sourceRoot":"","sources":["../../../../../../lib/workers/repository/update/pr/body/changelogs.ts"],"names":[],"mappings":";;;;AAAA,qDAAsD;AACtD,2DAAgE;AAChE,qDAAkD;AAClD,+EAAyD;AAEzD,qFAAwD;AAExD,SAAgB,aAAa,CAAC,MAAoB;IAChD,IAAI,YAAY,GAAG,EAAE,CAAC;IACtB,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;QAC3B,OAAO,YAAY,CAAC;KACrB;IAED,MAAM,2BAA2B,GAA2B,EAAE,CAAC;IAE/D,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,QAAQ,EAAE;QACrC,IAAI,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,QAAQ,EAAE;YAC/C,2BAA2B,CAAC,OAAO,CAAC,QAAQ,CAAC;gBAC3C,CAAC,2BAA2B,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;SAC5D;KACF;IAED,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,QAAQ,EAAE;QACrC,IAAI,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,QAAQ,EAAE;YAC/C,sBAAsB;YACtB,OAAO,CAAC,wBAAwB,GAAG,GAAG,OAAO,CAAC,QAAQ,GACpD,2BAA2B,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC;gBAC/C,CAAC,CAAC,KAAK,OAAO,CAAC,OAAQ,GAAG;gBAC1B,CAAC,CAAC,EACN,EAAE,CAAC;SACJ;KACF;IAED,YAAY;QACV,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,sBAAe,EAAE,MAAM,EAAE,KAAK,CAAC,GAAG,MAAM,CAAC;IAC5E,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,YAAY,CAAC,EAAE,SAAS,CAAC,CAAC;IACpE,YAAY,GAAG,IAAA,2BAAgB,EAAC,YAAY,CAAC,CAAC;IAC9C,YAAY,GAAG,IAAA,iBAAS,EAAC,YAAY,CAAC,CAAC;IAEvC,OAAO,YAAY,CAAC;AACtB,CAAC;AAjCD,sCAiCC","sourcesContent":["import { unemojify } from '../../../../../util/emoji';\nimport { sanitizeMarkdown } from '../../../../../util/markdown';\nimport { regEx } from '../../../../../util/regex';\nimport * as template from '../../../../../util/template';\nimport type { BranchConfig } from '../../../../types';\nimport releaseNotesHbs from '../changelog/hbs-template';\n\nexport function getChangelogs(config: BranchConfig): string {\n  let releaseNotes = '';\n  if (!config.hasReleaseNotes) {\n    return releaseNotes;\n  }\n\n  const countReleaseNodesByRepoName: Record<string, number> = {};\n\n  for (const upgrade of config.upgrades) {\n    if (upgrade.hasReleaseNotes && upgrade.repoName) {\n      countReleaseNodesByRepoName[upgrade.repoName] =\n        (countReleaseNodesByRepoName[upgrade.repoName] || 0) + 1;\n    }\n  }\n\n  for (const upgrade of config.upgrades) {\n    if (upgrade.hasReleaseNotes && upgrade.repoName) {\n      // TODO: types (#7154)\n      upgrade.releaseNotesSummaryTitle = `${upgrade.repoName}${\n        countReleaseNodesByRepoName[upgrade.repoName] > 1\n          ? ` (${upgrade.depName!})`\n          : ''\n      }`;\n    }\n  }\n\n  releaseNotes +=\n    '\\n\\n---\\n\\n' + template.compile(releaseNotesHbs, config, false) + '\\n\\n';\n  releaseNotes = releaseNotes.replace(regEx(/### \\[`vv/g), '### [`v');\n  releaseNotes = sanitizeMarkdown(releaseNotes);\n  releaseNotes = unemojify(releaseNotes);\n\n  return releaseNotes;\n}\n"]}