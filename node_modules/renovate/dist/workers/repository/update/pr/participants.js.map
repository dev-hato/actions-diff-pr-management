{"version":3,"file":"participants.js","sourceRoot":"","sources":["../../../../../lib/workers/repository/update/pr/participants.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { GlobalConfig } from '../../../../config/global';\nimport type { RenovateConfig } from '../../../../config/types';\nimport { logger } from '../../../../logger';\nimport { Pr, platform } from '../../../../modules/platform';\nimport { sampleSize } from '../../../../util';\nimport { codeOwnersForPr } from './code-owners';\n\nasync function addCodeOwners(\n  assigneesOrReviewers: string[],\n  pr: Pr\n): Promise<string[]> {\n  return [...new Set(assigneesOrReviewers.concat(await codeOwnersForPr(pr)))];\n}\n\nfunction filterUnavailableUsers(\n  config: RenovateConfig,\n  users: string[]\n): Promise<string[]> {\n  return config.filterUnavailableUsers && platform.filterUnavailableUsers\n    ? platform.filterUnavailableUsers(users)\n    : Promise.resolve(users);\n}\n\nfunction noLeadingAtSymbol(input: string): string {\n  return input.length && input.startsWith('@') ? input.slice(1) : input;\n}\n\nfunction prepareParticipants(\n  config: RenovateConfig,\n  usernames: string[]\n): Promise<string[]> {\n  const normalizedUsernames = [...new Set(usernames.map(noLeadingAtSymbol))];\n  return filterUnavailableUsers(config, normalizedUsernames);\n}\n\nexport async function addParticipants(\n  config: RenovateConfig,\n  pr: Pr\n): Promise<void> {\n  let assignees = config.assignees ?? [];\n  logger.debug(`addParticipants(pr=${pr?.number})`);\n  if (config.assigneesFromCodeOwners) {\n    assignees = await addCodeOwners(assignees, pr);\n  }\n  if (assignees.length > 0) {\n    try {\n      assignees = await prepareParticipants(config, assignees);\n      if (is.number(config.assigneesSampleSize)) {\n        assignees = sampleSize(assignees, config.assigneesSampleSize);\n      }\n      if (assignees.length > 0) {\n        if (GlobalConfig.get('dryRun')) {\n          logger.info(`DRY-RUN: Would add assignees to PR #${pr.number}`);\n        } else {\n          await platform.addAssignees(pr.number, assignees);\n          logger.debug({ assignees }, 'Added assignees');\n        }\n      }\n    } catch (err) {\n      logger.debug(\n        { assignees: config.assignees, err },\n        'Failed to add assignees'\n      );\n    }\n  }\n\n  let reviewers = config.reviewers ?? [];\n  if (config.reviewersFromCodeOwners) {\n    reviewers = await addCodeOwners(reviewers, pr);\n  }\n  if (\n    is.array(config.additionalReviewers) &&\n    config.additionalReviewers.length > 0\n  ) {\n    reviewers = reviewers.concat(config.additionalReviewers);\n  }\n  if (reviewers.length > 0) {\n    try {\n      reviewers = await prepareParticipants(config, reviewers);\n      if (is.number(config.reviewersSampleSize)) {\n        reviewers = sampleSize(reviewers, config.reviewersSampleSize);\n      }\n      if (reviewers.length > 0) {\n        if (GlobalConfig.get('dryRun')) {\n          logger.info(`DRY-RUN: Would add reviewers to PR #${pr.number}`);\n        } else {\n          await platform.addReviewers(pr.number, reviewers);\n          logger.debug({ reviewers }, 'Added reviewers');\n        }\n      }\n    } catch (err) {\n      logger.debug(\n        { reviewers: config.reviewers, err },\n        'Failed to add reviewers'\n      );\n    }\n  }\n}\n"]}