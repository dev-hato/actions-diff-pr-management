{"version":3,"file":"check-existing.js","sourceRoot":"","sources":["../../../../../lib/workers/repository/update/branch/check-existing.ts"],"names":[],"mappings":";;;AAAA,aAAa;AACb,yEAA0E;AAC1E,+CAA4C;AAC5C,2DAA4D;AAC5D,6CAA4C;AAGrC,KAAK,UAAU,gBAAgB,CACpC,MAAoB;IAEpB,eAAM,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,EAAE,kBAAkB,CAAC,CAAC;IAC7C,IAAI,MAAM,CAAC,cAAc,EAAE;QACzB,eAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC;KACb;IACD,eAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;IACxC,oCAAoC;IACpC,IAAI,EAAE,GAAG,MAAM,mBAAQ,CAAC,MAAM,CAAC;QAC7B,UAAU,EAAE,MAAM,CAAC,UAAU;QAC7B,OAAO,EAAE,MAAM,CAAC,OAAO;QACvB,KAAK,EAAE,eAAO,CAAC,OAAO;KACvB,CAAC,CAAC;IAEH,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,YAAY,KAAK,MAAM,CAAC,eAAe,EAAE;QACzD,EAAE,GAAG,MAAM,mBAAQ,CAAC,MAAM,CAAC;YACzB,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,OAAO,CACnC,MAAM,CAAC,YAAa,EACpB,MAAM,CAAC,eAAgB,CACxB;YACD,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,KAAK,EAAE,eAAO,CAAC,OAAO;SACvB,CAAC,CAAC;QACH,IAAI,EAAE,EAAE;YACN,eAAM,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;SACtD;KACF;IAED,IAAI,EAAE,EAAE;QACN,eAAM,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;QACnD,MAAM,SAAS,GAAG,MAAM,mBAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAClD,qBAAqB;QACrB,IAAI,SAAU,CAAC,KAAK,KAAK,eAAO,CAAC,IAAI,EAAE;YACrC,eAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;YAC3C,MAAM,IAAI,KAAK,CAAC,mCAAkB,CAAC,CAAC;SACrC;QACD,OAAO,EAAE,CAAC;KACX;IACD,eAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;IACvC,OAAO,IAAI,CAAC;AACd,CAAC;AA1CD,4CA0CC","sourcesContent":["// TODO #7154\nimport { REPOSITORY_CHANGED } from '../../../../constants/error-messages';\nimport { logger } from '../../../../logger';\nimport { Pr, platform } from '../../../../modules/platform';\nimport { PrState } from '../../../../types';\nimport type { BranchConfig } from '../../../types';\n\nexport async function prAlreadyExisted(\n  config: BranchConfig\n): Promise<Pr | null> {\n  logger.trace({ config }, 'prAlreadyExisted');\n  if (config.recreateClosed) {\n    logger.debug('recreateClosed is true');\n    return null;\n  }\n  logger.debug('recreateClosed is false');\n  // Return if same PR already existed\n  let pr = await platform.findPr({\n    branchName: config.branchName,\n    prTitle: config.prTitle,\n    state: PrState.NotOpen,\n  });\n\n  if (!pr && config.branchPrefix !== config.branchPrefixOld) {\n    pr = await platform.findPr({\n      branchName: config.branchName.replace(\n        config.branchPrefix!,\n        config.branchPrefixOld!\n      ),\n      prTitle: config.prTitle,\n      state: PrState.NotOpen,\n    });\n    if (pr) {\n      logger.debug('Found closed PR with branchPrefixOld');\n    }\n  }\n\n  if (pr) {\n    logger.debug('Found closed PR with current title');\n    const prDetails = await platform.getPr(pr.number);\n    // istanbul ignore if\n    if (prDetails!.state === PrState.Open) {\n      logger.debug('PR reopened - aborting run');\n      throw new Error(REPOSITORY_CHANGED);\n    }\n    return pr;\n  }\n  logger.debug('prAlreadyExisted=false');\n  return null;\n}\n"]}