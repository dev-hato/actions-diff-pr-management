"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createConfigMigrationBranch = void 0;
const global_1 = require("../../../../config/global");
const logger_1 = require("../../../../logger");
const commit_1 = require("../../../../modules/platform/commit");
const common_1 = require("../common");
const commit_message_1 = require("./commit-message");
function createConfigMigrationBranch(config, migratedConfigData) {
    logger_1.logger.debug('createConfigMigrationBranch()');
    const contents = migratedConfigData.content;
    const configFileName = migratedConfigData.filename;
    logger_1.logger.debug('Creating config migration branch');
    const commitMessageFactory = new commit_message_1.ConfigMigrationCommitMessageFactory(config, configFileName);
    const commitMessage = commitMessageFactory.getCommitMessage();
    // istanbul ignore if
    if (global_1.GlobalConfig.get('dryRun')) {
        logger_1.logger.info('DRY-RUN: Would commit files to config migration branch');
        return Promise.resolve(null);
    }
    return (0, commit_1.commitAndPush)({
        branchName: (0, common_1.getMigrationBranchName)(config),
        files: [
            {
                type: 'addition',
                path: configFileName,
                contents,
            },
        ],
        message: commitMessage.toString(),
        platformCommit: !!config.platformCommit,
    });
}
exports.createConfigMigrationBranch = createConfigMigrationBranch;
//# sourceMappingURL=create.js.map