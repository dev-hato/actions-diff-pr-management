{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../../../../lib/workers/global/config/parse/cli.ts"],"names":[],"mappings":"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","sourcesContent":["import { Command } from 'commander';\nimport JSON5 from 'json5';\nimport { getOptions } from '../../../../config/options';\nimport type { AllConfig } from '../../../../config/types';\nimport { pkg } from '../../../../expose.cjs';\nimport { logger } from '../../../../logger';\nimport { regEx } from '../../../../util/regex';\nimport type { ParseConfigOptions } from './types';\n\nexport function getCliName(option: ParseConfigOptions): string {\n  if (option.cli === false) {\n    return '';\n  }\n  const nameWithHyphens = option.name.replace(regEx(/([A-Z])/g), '-$1');\n  return `--${nameWithHyphens.toLowerCase()}`;\n}\n\nexport function getConfig(input: string[]): AllConfig {\n  // massage migrated configuration keys\n  const argv = input\n    .map((a) =>\n      a\n        .replace('--endpoints=', '--host-rules=')\n        .replace('--expose-env=true', '--trust-level=high')\n        .replace('--expose-env', '--trust-level=high')\n        .replace('--renovate-fork', '--include-forks')\n        .replace('\"platform\":\"', '\"hostType\":\"')\n        .replace('\"endpoint\":\"', '\"matchHost\":\"')\n        .replace('\"host\":\"', '\"matchHost\":\"')\n        .replace('--azure-auto-complete', '--platform-automerge') // migrate: azureAutoComplete\n        .replace('--git-lab-automerge', '--platform-automerge') // migrate: gitLabAutomerge\n        .replace(/^--dry-run$/, '--dry-run=true')\n        .replace(/^--require-config$/, '--require-config=true')\n        .replace('--aliases', '--registry-aliases')\n    )\n    .filter((a) => !a.startsWith('--git-fs'));\n  const options = getOptions();\n\n  const config: Record<string, any> = {};\n\n  const coersions: Record<string, (arg: string) => unknown> = {\n    boolean: (val: string): boolean => {\n      if (val === 'true' || val === '') {\n        return true;\n      }\n      if (val === 'false') {\n        return false;\n      }\n      throw new Error(\n        \"Invalid boolean value: expected 'true' or 'false', but got '\" +\n          val +\n          \"'\"\n      );\n    },\n    array: (val: string): string[] => {\n      if (val === '') {\n        return [];\n      }\n      try {\n        return JSON5.parse(val);\n      } catch (err) {\n        return val.split(',').map((el) => el.trim());\n      }\n    },\n    object: (val: string): any => {\n      if (val === '') {\n        return {};\n      }\n      try {\n        return JSON5.parse(val);\n      } catch (err) {\n        throw new Error(\"Invalid JSON value: '\" + val + \"'\");\n      }\n    },\n    string: (val: string): string => val,\n    integer: parseInt,\n  };\n\n  let program = new Command().arguments('[repositories...]');\n\n  options.forEach((option) => {\n    if (option.cli !== false) {\n      const param = `<${option.type}>`.replace('<boolean>', '[boolean]');\n      const optionString = `${getCliName(option)} ${param}`;\n      program = program.option(\n        optionString,\n        option.description,\n        coersions[option.type]\n      );\n    }\n  });\n\n  /* eslint-disable no-console */\n  /* istanbul ignore next */\n  function helpConsole(): void {\n    console.log('  Examples:');\n    console.log('');\n    console.log('    $ renovate --token 123test singapore/lint-condo');\n    console.log(\n      '    $ LOG_LEVEL=debug renovate --labels=renovate,dependency --ignore-unstable=false singapore/lint-condo'\n    );\n    console.log('    $ renovate singapore/lint-condo singapore/package-test');\n    console.log(\n      `    $ renovate singapore/lint-condo --onboarding-config='{\"extends\":[\"config:base\"]}'`\n    );\n    /* eslint-enable no-console */\n  }\n\n  program = program\n    .version(pkg.version, '-v, --version')\n    .on('--help', helpConsole)\n    .action((repositories: string[], opts: Record<string, unknown>) => {\n      if (repositories?.length) {\n        config.repositories = repositories;\n      }\n\n      for (const option of options) {\n        if (option.cli !== false) {\n          if (opts[option.name] !== undefined) {\n            config[option.name] = opts[option.name];\n            if (option.name === 'dryRun') {\n              if (config[option.name] === 'true') {\n                logger.warn(\n                  'cli config dryRun property has been changed to full'\n                );\n                config[option.name] = 'full';\n              } else if (config[option.name] === 'false') {\n                logger.warn(\n                  'cli config dryRun property has been changed to null'\n                );\n                config[option.name] = null;\n              } else if (config[option.name] === 'null') {\n                config[option.name] = null;\n              }\n            }\n            if (option.name === 'requireConfig') {\n              if (config[option.name] === 'true') {\n                logger.warn(\n                  'cli config requireConfig property has been changed to required'\n                );\n                config[option.name] = 'required';\n              } else if (config[option.name] === 'false') {\n                logger.warn(\n                  'cli config requireConfig property has been changed to optional'\n                );\n                config[option.name] = 'optional';\n              }\n            }\n          }\n        }\n      }\n    })\n    .parse(argv);\n\n  return config;\n}\n"]}