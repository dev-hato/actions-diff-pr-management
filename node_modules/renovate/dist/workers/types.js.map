{"version":3,"file":"types.js","sourceRoot":"","sources":["../../lib/workers/types.ts"],"names":[],"mappings":";;;AAuFA,mDAAmD;AACnD,IAAY,YAiBX;AAjBD,WAAY,YAAY;IACtB,kDAAkC,CAAA;IAClC,yCAAyB,CAAA;IACzB,6BAAa,CAAA;IACb,+BAAe,CAAA;IACf,gDAAgC,CAAA;IAChC,qDAAqC,CAAA;IACrC,8CAA8B,CAAA;IAC9B,kCAAkB,CAAA;IAClB,mCAAmB,CAAA;IACnB,wCAAwB,CAAA;IACxB,sCAAsB,CAAA;IACtB,mDAAmC,CAAA;IACnC,2DAA2C,CAAA;IAC3C,2DAA2C,CAAA;IAC3C,iCAAiB,CAAA;IACjB,2DAA2C,CAAA;AAC7C,CAAC,EAjBW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAiBvB","sourcesContent":["import type { Merge } from 'type-fest';\nimport type {\n  GroupConfig,\n  LegacyAdminConfig,\n  RegExManager,\n  RenovateConfig,\n  RenovateSharedConfig,\n  ValidationMessage,\n} from '../config/types';\nimport type { Release } from '../modules/datasource/types';\nimport type {\n  ArtifactError,\n  CustomExtractConfig,\n  ExtractConfig,\n  LookupUpdate,\n  PackageDependency,\n  PackageFile,\n} from '../modules/manager/types';\nimport type { PlatformPrOptions } from '../modules/platform/types';\nimport type { FileChange } from '../util/git/types';\nimport type { MergeConfidence } from '../util/merge-confidence';\nimport type {\n  ChangeLogRelease,\n  ChangeLogResult,\n} from './repository/update/pr/changelog/types';\n\nexport type ReleaseWithNotes = Release & Partial<ChangeLogRelease>;\n\nexport interface BranchUpgradeConfig\n  extends Merge<RenovateConfig, PackageDependency>,\n    Partial<LookupUpdate>,\n    RenovateSharedConfig {\n  artifactErrors?: ArtifactError[];\n  autoReplaceStringTemplate?: string;\n  baseDeps?: PackageDependency[];\n  branchName: string;\n  commitBody?: string;\n  commitMessage?: string;\n  commitMessageExtra?: string;\n  currentDigest?: string;\n  currentDigestShort?: string;\n  currentValue?: string;\n  excludeCommitPaths?: string[];\n  githubName?: string;\n  group?: GroupConfig;\n  groupName?: string;\n  groupSlug?: string;\n  language?: string;\n  manager: string;\n  packageFile?: string;\n  lockFile?: string;\n  lockFiles?: string[];\n  reuseExistingBranch?: boolean;\n  prHeader?: string;\n  prFooter?: string;\n  prBodyNotes?: string[];\n  prBodyTemplate?: string;\n  prPriority?: number;\n  prTitle?: string;\n  releases?: ReleaseWithNotes[];\n  releaseTimestamp?: string;\n  repoName?: string;\n  minimumConfidence?: MergeConfidence;\n  sourceDirectory?: string;\n\n  updatedPackageFiles?: FileChange[];\n  updatedArtifacts?: FileChange[];\n\n  logJSON?: ChangeLogResult | null;\n\n  hasReleaseNotes?: boolean;\n  homepage?: string;\n  changelogUrl?: string;\n  dependencyUrl?: string;\n  sourceUrl?: string;\n  sourceRepo?: string;\n  sourceRepoOrg?: string;\n  sourceRepoName?: string;\n}\n\nexport type PrBlockedBy =\n  | 'BranchAutomerge'\n  | 'NeedsApproval'\n  | 'AwaitingTests'\n  | 'RateLimited'\n  | 'Error';\n\n// eslint-disable-next-line typescript-enum/no-enum\nexport enum BranchResult {\n  AlreadyExisted = 'already-existed',\n  Automerged = 'automerged',\n  Done = 'done',\n  Error = 'error',\n  NeedsApproval = 'needs-approval',\n  NeedsPrApproval = 'needs-pr-approval',\n  NotScheduled = 'not-scheduled',\n  NoWork = 'no-work',\n  Pending = 'pending',\n  PrCreated = 'pr-created',\n  PrEdited = 'pr-edited',\n  PrLimitReached = 'pr-limit-reached',\n  CommitLimitReached = 'commit-limit-reached',\n  BranchLimitReached = 'branch-limit-reached',\n  Rebase = 'rebase',\n  UpdateNotScheduled = 'update-not-scheduled',\n}\n\nexport interface BranchConfig\n  extends BranchUpgradeConfig,\n    LegacyAdminConfig,\n    PlatformPrOptions {\n  automergeComment?: string;\n  automergeType?: string;\n  baseBranch?: string;\n  errors?: ValidationMessage[];\n  hasTypes?: boolean;\n  dependencyDashboardChecks?: Record<string, string>;\n  releaseTimestamp?: string;\n  forceCommit?: boolean;\n  rebaseRequested?: boolean;\n  result?: BranchResult;\n  upgrades: BranchUpgradeConfig[];\n  packageFiles?: Record<string, PackageFile[]>;\n  prBlockedBy?: PrBlockedBy;\n  prNo?: number;\n  stopUpdating?: boolean;\n  isConflicted?: boolean;\n}\n\nexport interface WorkerExtractConfig\n  extends ExtractConfig,\n    Partial<CustomExtractConfig> {\n  manager: string;\n  fileList: string[];\n  fileMatch?: string[];\n  updateInternalDeps?: boolean;\n  includePaths?: string[];\n  ignorePaths?: string[];\n  regexManagers?: RegExManager[];\n  enabledManagers?: string[];\n  enabled?: boolean;\n}\n\nexport interface DepWarnings {\n  warnings: string[];\n  warningFiles: string[];\n}\n\nexport interface SelectAllConfig extends RenovateConfig {\n  dependencyDashboardRebaseAllOpen?: boolean;\n  dependencyDashboardAllPending?: boolean;\n  dependencyDashboardAllRateLimited?: boolean;\n}\n"]}