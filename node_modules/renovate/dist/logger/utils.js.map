{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../lib/logger/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { Stream } from 'stream';\nimport is from '@sindresorhus/is';\nimport bunyan from 'bunyan';\nimport fs from 'fs-extra';\nimport { RequestError as HttpError } from 'got';\nimport { clone } from '../util/clone';\nimport { redactedFields, sanitize } from '../util/sanitize';\nimport type { BunyanRecord, BunyanStream } from './types';\n\nconst excludeProps = ['pid', 'time', 'v', 'hostname'];\n\nexport class ProblemStream extends Stream {\n  private _problems: BunyanRecord[] = [];\n\n  readable: boolean;\n\n  writable: boolean;\n\n  constructor() {\n    super();\n    this.readable = false;\n    this.writable = true;\n  }\n\n  write(data: BunyanRecord): boolean {\n    const problem = { ...data };\n    for (const prop of excludeProps) {\n      delete problem[prop];\n    }\n    this._problems.push(problem);\n    return true;\n  }\n\n  getProblems(): BunyanRecord[] {\n    return this._problems;\n  }\n\n  clearProblems(): void {\n    this._problems = [];\n  }\n}\n\nconst contentFields = [\n  'content',\n  'contents',\n  'packageLockParsed',\n  'yarnLockParsed',\n];\n\nexport default function prepareError(err: Error): Record<string, unknown> {\n  const response: Record<string, unknown> = {\n    ...err,\n  };\n\n  // Required as message is non-enumerable\n  if (!response.message && err.message) {\n    response.message = err.message;\n  }\n\n  // Required as stack is non-enumerable\n  if (!response.stack && err.stack) {\n    response.stack = err.stack;\n  }\n\n  // handle got error\n  if (err instanceof HttpError) {\n    const options: Record<string, unknown> = {\n      headers: clone(err.options.headers),\n      url: err.options.url?.toString(),\n      hostType: err.options.context.hostType,\n    };\n    response.options = options;\n\n    options.username = err.options.username;\n    options.password = err.options.password;\n    options.method = err.options.method;\n    options.http2 = err.options.http2;\n\n    // istanbul ignore else\n    if (err.response) {\n      response.response = {\n        statusCode: err.response?.statusCode,\n        statusMessage: err.response?.statusMessage,\n        body:\n          err.name === 'TimeoutError' ? undefined : clone(err.response.body),\n        headers: clone(err.response.headers),\n        httpVersion: err.response.httpVersion,\n      };\n    }\n  }\n\n  return response;\n}\n\ntype NestedValue = unknown[] | object;\n\nfunction isNested(value: unknown): value is NestedValue {\n  return is.array(value) || is.object(value);\n}\n\nexport function sanitizeValue(\n  value: unknown,\n  seen = new WeakMap<NestedValue, unknown>()\n): any {\n  if (is.string(value)) {\n    return sanitize(sanitizeUrls(value));\n  }\n\n  if (is.date(value)) {\n    return value;\n  }\n\n  if (is.function_(value)) {\n    return '[function]';\n  }\n\n  if (is.buffer(value)) {\n    return '[content]';\n  }\n\n  if (is.error(value)) {\n    const err = prepareError(value);\n    return sanitizeValue(err, seen);\n  }\n\n  if (is.array(value)) {\n    const length = value.length;\n    const arrayResult = Array(length);\n    seen.set(value, arrayResult);\n    for (let idx = 0; idx < length; idx += 1) {\n      const val = value[idx];\n      arrayResult[idx] =\n        isNested(val) && seen.has(val)\n          ? seen.get(val)\n          : sanitizeValue(val, seen);\n    }\n    return arrayResult;\n  }\n\n  if (is.object(value)) {\n    const objectResult: Record<string, any> = {};\n    seen.set(value, objectResult);\n    for (const [key, val] of Object.entries<any>(value)) {\n      let curValue: any;\n      if (!val) {\n        curValue = val;\n      } else if (redactedFields.includes(key)) {\n        curValue = '***********';\n      } else if (contentFields.includes(key)) {\n        curValue = '[content]';\n      } else if (key === 'secrets') {\n        curValue = {};\n        Object.keys(val).forEach((secretKey) => {\n          curValue[secretKey] = '***********';\n        });\n      } else {\n        curValue = seen.has(val) ? seen.get(val) : sanitizeValue(val, seen);\n      }\n\n      objectResult[key] = curValue;\n    }\n\n    return objectResult;\n  }\n\n  return value;\n}\n\nexport function withSanitizer(streamConfig: bunyan.Stream): bunyan.Stream {\n  if (streamConfig.type === 'rotating-file') {\n    throw new Error(\"Rotating files aren't supported\");\n  }\n\n  const stream = streamConfig.stream as BunyanStream;\n  if (stream?.writable) {\n    const write = (\n      chunk: BunyanRecord,\n      enc: BufferEncoding,\n      cb: (err?: Error | null) => void\n    ): void => {\n      const raw = sanitizeValue(chunk);\n      const result =\n        streamConfig.type === 'raw'\n          ? raw\n          : JSON.stringify(raw, bunyan.safeCycles()).replace(/\\n?$/, '\\n'); // TODO #12874\n      stream.write(result, enc, cb);\n    };\n\n    return {\n      ...streamConfig,\n      type: 'raw',\n      stream: { write },\n    } as bunyan.Stream;\n  }\n\n  if (streamConfig.path) {\n    const fileStream = fs.createWriteStream(streamConfig.path, {\n      flags: 'a',\n      encoding: 'utf8',\n    });\n\n    return withSanitizer({ ...streamConfig, stream: fileStream });\n  }\n\n  throw new Error(\"Missing 'stream' or 'path' for bunyan stream\");\n}\n\n/**\n * A function that terminates exeution if the log level that was entered is\n *  not a valid value for the Bunyan logger.\n * @param logLevelToCheck\n * @returns returns undefined when the logLevelToCheck is valid. Else it stops execution.\n */\nexport function validateLogLevel(logLevelToCheck: string | undefined): void {\n  const allowedValues: bunyan.LogLevel[] = [\n    'trace',\n    'debug',\n    'info',\n    'warn',\n    'error',\n    'fatal',\n  ];\n  if (\n    is.undefined(logLevelToCheck) ||\n    (is.string(logLevelToCheck) &&\n      allowedValues.includes(logLevelToCheck as bunyan.LogLevel))\n  ) {\n    // log level is in the allowed values or its undefined\n    return;\n  }\n\n  const logger = bunyan.createLogger({\n    name: 'renovate',\n    streams: [\n      {\n        level: 'fatal',\n        stream: process.stdout,\n      },\n    ],\n  });\n  logger.fatal(`${logLevelToCheck} is not a valid log level. terminating...`);\n  process.exit(1);\n}\n\n// Can't use `util/regex` because of circular reference to logger\nconst urlRe = /[a-z]{3,9}:\\/\\/[-;:&=+$,\\w]+@[a-z0-9.-]+/gi;\nconst urlCredRe = /\\/\\/[^@]+@/g;\n\nexport function sanitizeUrls(text: string): string {\n  return text.replace(urlRe, (url) => {\n    return url.replace(urlCredRe, '//**redacted**@');\n  });\n}\n"]}