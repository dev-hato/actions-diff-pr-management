{"version":3,"file":"proxy.js","sourceRoot":"","sources":["../lib/proxy.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAClC,+CAAsD;AAEtD,MAAM,OAAO,GAAG,CAAC,YAAY,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;AAE1D,IAAI,KAAK,GAAG,KAAK,CAAC;AAElB,SAAgB,SAAS;IACvB,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;QACzB,4DAA4D;QAC5D,IACE,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,WAAW;YAC1C,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,WAAW,EACxD;YACA,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;SACzD;QAED,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACzD;IACH,CAAC,CAAC,CAAC;IAEH,IACE,YAAE,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACzC,YAAE,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAC1C;QACA,IAAA,qCAAsB,EAAC;YACrB,4BAA4B,EAAE,EAAE;SACjC,CAAC,CAAC;QACH,KAAK,GAAG,IAAI,CAAC;KACd;SAAM;QACL,gDAAgD;QAChD,KAAK,GAAG,KAAK,CAAC;KACf;AACH,CAAC;AA3BD,8BA2BC;AAED,uCAAuC;AACvC,SAAgB,QAAQ;IACtB,OAAO,KAAK,KAAK,IAAI,CAAC;AACxB,CAAC;AAFD,4BAEC","sourcesContent":["import is from '@sindresorhus/is';\nimport { createGlobalProxyAgent } from 'global-agent';\n\nconst envVars = ['HTTP_PROXY', 'HTTPS_PROXY', 'NO_PROXY'];\n\nlet agent = false;\n\nexport function bootstrap(): void {\n  envVars.forEach((envVar) => {\n    /* istanbul ignore if: env is case-insensitive on windows */\n    if (\n      typeof process.env[envVar] === 'undefined' &&\n      typeof process.env[envVar.toLowerCase()] !== 'undefined'\n    ) {\n      process.env[envVar] = process.env[envVar.toLowerCase()];\n    }\n\n    if (process.env[envVar]) {\n      process.env[envVar.toLowerCase()] = process.env[envVar];\n    }\n  });\n\n  if (\n    is.nonEmptyString(process.env.HTTP_PROXY) ||\n    is.nonEmptyString(process.env.HTTPS_PROXY)\n  ) {\n    createGlobalProxyAgent({\n      environmentVariableNamespace: '',\n    });\n    agent = true;\n  } else {\n    // for testing only, does not reset global agent\n    agent = false;\n  }\n}\n\n// will be used by our http layer later\nexport function hasProxy(): boolean {\n  return agent === true;\n}\n"]}