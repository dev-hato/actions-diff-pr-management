import { TagNode } from "./NodeTypes";
import { Node, Position } from "unist-types";
import { TagPatterns } from "./nlcst-pattern-match";
export declare const isRegExp: (v: any) => v is RegExp;
export interface MatchResult {
    text: string;
    position: Position | undefined;
    nodeList: Node[];
}
export interface MatchCSTResult {
    position: Position | undefined;
    nodeList: Node[];
}
/**
 * Match actualValue with expectedValue
 * @param actualValue
 * @param expectedValue
 * @returns {boolean}
 */
export declare function matchValue(actualValue: any, expectedValue: any): boolean;
/**
 * Match actualNode with expectedNode
 * @param {Node} actualNode
 * @param {TagNode} expectedNode
 * @returns {boolean}
 */
export declare function matchNode(actualNode: Node, expectedNode: TagNode): boolean;
/**
 * match actualNodes with expectedPatterns
 * @param {Sentence} actualNodes
 * @param {Sentence} expectedPatterns
 * @returns {MatchCSTResult[]}
 */
export declare function match(actualNodes: Node[], expectedPatterns: TagPatterns): MatchCSTResult[];
