// MIT Â© 2016 azu
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Expector_1 = require("./Expector");
/**
 * Create Matcher function for match all multiple tokens
 */
function createMatcher(dictionaries) {
    var expectors = dictionaries.map(function (dict) {
        return new Expector_1.Expector(dict);
    });
    /**
     * match `actualTokens` with `dictionaries`
     * @param {Object[]} actualTokens
     * @returns {MatchResult[]}
     * @function morphemeMatchAll
     * @public
     */
    return function morphemeMatchAll(actualTokens) {
        var matchResults = [];
        actualTokens.forEach(function (actualToken) {
            expectors.forEach(function (expector) {
                var _a = expector.match(actualToken), match = _a.match, tokens = _a.tokens, skipped = _a.skipped;
                if (!match) {
                    return;
                }
                /**
                 * the index of first match token
                 * @type {number}
                 */
                var index = actualTokens.indexOf(tokens[0]);
                matchResults.push({
                    tokens: tokens,
                    index: index,
                    skipped: skipped,
                    dict: expector.dict
                });
            });
        });
        return matchResults;
    };
}
exports.createMatcher = createMatcher;
//# sourceMappingURL=morpheme-match-all.js.map