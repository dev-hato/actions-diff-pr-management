"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TooManyTagsException = exports.RepositoryAlreadyExistsException = exports.InvalidTagParameterException = exports.CreateRepositoryResponse = exports.Repository = exports.CreateRepositoryRequest = exports.Tag = exports.ImageTagMutability = exports.ImageScanningConfiguration = exports.EncryptionConfiguration = exports.EncryptionType = exports.UnsupportedUpstreamRegistryException = exports.PullThroughCacheRuleAlreadyExistsException = exports.LimitExceededException = exports.CreatePullThroughCacheRuleResponse = exports.CreatePullThroughCacheRuleRequest = exports.UploadNotFoundException = exports.LayerPartTooSmallException = exports.LayerAlreadyExistsException = exports.KmsException = exports.InvalidLayerException = exports.EmptyUploadException = exports.CompleteLayerUploadResponse = exports.CompleteLayerUploadRequest = exports.ValidationException = exports.BatchGetRepositoryScanningConfigurationResponse = exports.RepositoryScanningConfiguration = exports.ScanFrequency = exports.ScanningRepositoryFilter = exports.ScanningRepositoryFilterType = exports.RepositoryScanningConfigurationFailure = exports.ScanningConfigurationFailureCode = exports.BatchGetRepositoryScanningConfigurationRequest = exports.BatchGetImageResponse = exports.Image = exports.BatchGetImageRequest = exports.BatchDeleteImageResponse = exports.ImageFailure = exports.ImageFailureCode = exports.BatchDeleteImageRequest = exports.ImageIdentifier = exports.ServerException = exports.RepositoryNotFoundException = exports.InvalidParameterException = exports.BatchCheckLayerAvailabilityResponse = exports.Layer = exports.LayerAvailability = exports.LayerFailure = exports.LayerFailureCode = exports.BatchCheckLayerAvailabilityRequest = void 0;
exports.DescribePullThroughCacheRulesResponse = exports.PullThroughCacheRule = exports.DescribePullThroughCacheRulesRequest = exports.ScanNotFoundException = exports.DescribeImageScanFindingsResponse = exports.ImageScanFindings = exports.ImageScanFinding = exports.Attribute = exports.EnhancedImageScanFinding = exports.ScoreDetails = exports.CvssScoreDetails = exports.CvssScoreAdjustment = exports.Resource = exports.ResourceDetails = exports.AwsEcrContainerImageDetails = exports.Remediation = exports.Recommendation = exports.PackageVulnerabilityDetails = exports.VulnerablePackage = exports.CvssScore = exports.DescribeImageScanFindingsRequest = exports.DescribeImagesResponse = exports.ImageDetail = exports.ImageScanStatus = exports.ScanStatus = exports.ImageScanFindingsSummary = exports.FindingSeverity = exports.DescribeImagesRequest = exports.DescribeImagesFilter = exports.TagStatus = exports.ImageNotFoundException = exports.DescribeImageReplicationStatusResponse = exports.ImageReplicationStatus = exports.ReplicationStatus = exports.DescribeImageReplicationStatusRequest = exports.RepositoryPolicyNotFoundException = exports.DeleteRepositoryPolicyResponse = exports.DeleteRepositoryPolicyRequest = exports.RepositoryNotEmptyException = exports.DeleteRepositoryResponse = exports.DeleteRepositoryRequest = exports.RegistryPolicyNotFoundException = exports.DeleteRegistryPolicyResponse = exports.DeleteRegistryPolicyRequest = exports.PullThroughCacheRuleNotFoundException = exports.DeletePullThroughCacheRuleResponse = exports.DeletePullThroughCacheRuleRequest = exports.LifecyclePolicyNotFoundException = exports.DeleteLifecyclePolicyResponse = exports.DeleteLifecyclePolicyRequest = void 0;
exports.PutImageScanningConfigurationRequest = exports.ReferencedImagesNotFoundException = exports.PutImageResponse = exports.PutImageRequest = exports.ImageTagAlreadyExistsException = exports.ImageDigestDoesNotMatchException = exports.ImageAlreadyExistsException = exports.ListTagsForResourceResponse = exports.ListTagsForResourceRequest = exports.ListImagesResponse = exports.ListImagesRequest = exports.ListImagesFilter = exports.InitiateLayerUploadResponse = exports.InitiateLayerUploadRequest = exports.GetRepositoryPolicyResponse = exports.GetRepositoryPolicyRequest = exports.GetRegistryScanningConfigurationResponse = exports.RegistryScanningConfiguration = exports.ScanType = exports.RegistryScanningRule = exports.GetRegistryScanningConfigurationRequest = exports.GetRegistryPolicyResponse = exports.GetRegistryPolicyRequest = exports.LifecyclePolicyPreviewNotFoundException = exports.GetLifecyclePolicyPreviewResponse = exports.LifecyclePolicyPreviewSummary = exports.LifecyclePolicyPreviewStatus = exports.LifecyclePolicyPreviewResult = exports.LifecyclePolicyRuleAction = exports.ImageActionType = exports.GetLifecyclePolicyPreviewRequest = exports.LifecyclePolicyPreviewFilter = exports.GetLifecyclePolicyResponse = exports.GetLifecyclePolicyRequest = exports.LayersNotFoundException = exports.LayerInaccessibleException = exports.GetDownloadUrlForLayerResponse = exports.GetDownloadUrlForLayerRequest = exports.GetAuthorizationTokenResponse = exports.AuthorizationData = exports.GetAuthorizationTokenRequest = exports.DescribeRepositoriesResponse = exports.DescribeRepositoriesRequest = exports.DescribeRegistryResponse = exports.ReplicationConfiguration = exports.ReplicationRule = exports.RepositoryFilter = exports.RepositoryFilterType = exports.ReplicationDestination = exports.DescribeRegistryRequest = void 0;
exports.UploadLayerPartResponse = exports.UploadLayerPartRequest = exports.InvalidLayerPartException = exports.UntagResourceResponse = exports.UntagResourceRequest = exports.TagResourceResponse = exports.TagResourceRequest = exports.StartLifecyclePolicyPreviewResponse = exports.StartLifecyclePolicyPreviewRequest = exports.LifecyclePolicyPreviewInProgressException = exports.UnsupportedImageTypeException = exports.StartImageScanResponse = exports.StartImageScanRequest = exports.SetRepositoryPolicyResponse = exports.SetRepositoryPolicyRequest = exports.PutReplicationConfigurationResponse = exports.PutReplicationConfigurationRequest = exports.PutRegistryScanningConfigurationResponse = exports.PutRegistryScanningConfigurationRequest = exports.PutRegistryPolicyResponse = exports.PutRegistryPolicyRequest = exports.PutLifecyclePolicyResponse = exports.PutLifecyclePolicyRequest = exports.PutImageTagMutabilityResponse = exports.PutImageTagMutabilityRequest = exports.PutImageScanningConfigurationResponse = void 0;
const ECRServiceException_1 = require("./ECRServiceException");
var BatchCheckLayerAvailabilityRequest;
(function (BatchCheckLayerAvailabilityRequest) {
    BatchCheckLayerAvailabilityRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(BatchCheckLayerAvailabilityRequest = exports.BatchCheckLayerAvailabilityRequest || (exports.BatchCheckLayerAvailabilityRequest = {}));
var LayerFailureCode;
(function (LayerFailureCode) {
    LayerFailureCode["InvalidLayerDigest"] = "InvalidLayerDigest";
    LayerFailureCode["MissingLayerDigest"] = "MissingLayerDigest";
})(LayerFailureCode = exports.LayerFailureCode || (exports.LayerFailureCode = {}));
var LayerFailure;
(function (LayerFailure) {
    LayerFailure.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(LayerFailure = exports.LayerFailure || (exports.LayerFailure = {}));
var LayerAvailability;
(function (LayerAvailability) {
    LayerAvailability["AVAILABLE"] = "AVAILABLE";
    LayerAvailability["UNAVAILABLE"] = "UNAVAILABLE";
})(LayerAvailability = exports.LayerAvailability || (exports.LayerAvailability = {}));
var Layer;
(function (Layer) {
    Layer.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(Layer = exports.Layer || (exports.Layer = {}));
var BatchCheckLayerAvailabilityResponse;
(function (BatchCheckLayerAvailabilityResponse) {
    BatchCheckLayerAvailabilityResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(BatchCheckLayerAvailabilityResponse = exports.BatchCheckLayerAvailabilityResponse || (exports.BatchCheckLayerAvailabilityResponse = {}));
class InvalidParameterException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
    }
}
exports.InvalidParameterException = InvalidParameterException;
class RepositoryNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "RepositoryNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "RepositoryNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RepositoryNotFoundException.prototype);
    }
}
exports.RepositoryNotFoundException = RepositoryNotFoundException;
class ServerException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServerException.prototype);
    }
}
exports.ServerException = ServerException;
var ImageIdentifier;
(function (ImageIdentifier) {
    ImageIdentifier.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ImageIdentifier = exports.ImageIdentifier || (exports.ImageIdentifier = {}));
var BatchDeleteImageRequest;
(function (BatchDeleteImageRequest) {
    BatchDeleteImageRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(BatchDeleteImageRequest = exports.BatchDeleteImageRequest || (exports.BatchDeleteImageRequest = {}));
var ImageFailureCode;
(function (ImageFailureCode) {
    ImageFailureCode["ImageNotFound"] = "ImageNotFound";
    ImageFailureCode["ImageReferencedByManifestList"] = "ImageReferencedByManifestList";
    ImageFailureCode["ImageTagDoesNotMatchDigest"] = "ImageTagDoesNotMatchDigest";
    ImageFailureCode["InvalidImageDigest"] = "InvalidImageDigest";
    ImageFailureCode["InvalidImageTag"] = "InvalidImageTag";
    ImageFailureCode["KmsError"] = "KmsError";
    ImageFailureCode["MissingDigestAndTag"] = "MissingDigestAndTag";
})(ImageFailureCode = exports.ImageFailureCode || (exports.ImageFailureCode = {}));
var ImageFailure;
(function (ImageFailure) {
    ImageFailure.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ImageFailure = exports.ImageFailure || (exports.ImageFailure = {}));
var BatchDeleteImageResponse;
(function (BatchDeleteImageResponse) {
    BatchDeleteImageResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(BatchDeleteImageResponse = exports.BatchDeleteImageResponse || (exports.BatchDeleteImageResponse = {}));
var BatchGetImageRequest;
(function (BatchGetImageRequest) {
    BatchGetImageRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(BatchGetImageRequest = exports.BatchGetImageRequest || (exports.BatchGetImageRequest = {}));
var Image;
(function (Image) {
    Image.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(Image = exports.Image || (exports.Image = {}));
var BatchGetImageResponse;
(function (BatchGetImageResponse) {
    BatchGetImageResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(BatchGetImageResponse = exports.BatchGetImageResponse || (exports.BatchGetImageResponse = {}));
var BatchGetRepositoryScanningConfigurationRequest;
(function (BatchGetRepositoryScanningConfigurationRequest) {
    BatchGetRepositoryScanningConfigurationRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(BatchGetRepositoryScanningConfigurationRequest = exports.BatchGetRepositoryScanningConfigurationRequest || (exports.BatchGetRepositoryScanningConfigurationRequest = {}));
var ScanningConfigurationFailureCode;
(function (ScanningConfigurationFailureCode) {
    ScanningConfigurationFailureCode["REPOSITORY_NOT_FOUND"] = "REPOSITORY_NOT_FOUND";
})(ScanningConfigurationFailureCode = exports.ScanningConfigurationFailureCode || (exports.ScanningConfigurationFailureCode = {}));
var RepositoryScanningConfigurationFailure;
(function (RepositoryScanningConfigurationFailure) {
    RepositoryScanningConfigurationFailure.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(RepositoryScanningConfigurationFailure = exports.RepositoryScanningConfigurationFailure || (exports.RepositoryScanningConfigurationFailure = {}));
var ScanningRepositoryFilterType;
(function (ScanningRepositoryFilterType) {
    ScanningRepositoryFilterType["WILDCARD"] = "WILDCARD";
})(ScanningRepositoryFilterType = exports.ScanningRepositoryFilterType || (exports.ScanningRepositoryFilterType = {}));
var ScanningRepositoryFilter;
(function (ScanningRepositoryFilter) {
    ScanningRepositoryFilter.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ScanningRepositoryFilter = exports.ScanningRepositoryFilter || (exports.ScanningRepositoryFilter = {}));
var ScanFrequency;
(function (ScanFrequency) {
    ScanFrequency["CONTINUOUS_SCAN"] = "CONTINUOUS_SCAN";
    ScanFrequency["MANUAL"] = "MANUAL";
    ScanFrequency["SCAN_ON_PUSH"] = "SCAN_ON_PUSH";
})(ScanFrequency = exports.ScanFrequency || (exports.ScanFrequency = {}));
var RepositoryScanningConfiguration;
(function (RepositoryScanningConfiguration) {
    RepositoryScanningConfiguration.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(RepositoryScanningConfiguration = exports.RepositoryScanningConfiguration || (exports.RepositoryScanningConfiguration = {}));
var BatchGetRepositoryScanningConfigurationResponse;
(function (BatchGetRepositoryScanningConfigurationResponse) {
    BatchGetRepositoryScanningConfigurationResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(BatchGetRepositoryScanningConfigurationResponse = exports.BatchGetRepositoryScanningConfigurationResponse || (exports.BatchGetRepositoryScanningConfigurationResponse = {}));
class ValidationException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
exports.ValidationException = ValidationException;
var CompleteLayerUploadRequest;
(function (CompleteLayerUploadRequest) {
    CompleteLayerUploadRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(CompleteLayerUploadRequest = exports.CompleteLayerUploadRequest || (exports.CompleteLayerUploadRequest = {}));
var CompleteLayerUploadResponse;
(function (CompleteLayerUploadResponse) {
    CompleteLayerUploadResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(CompleteLayerUploadResponse = exports.CompleteLayerUploadResponse || (exports.CompleteLayerUploadResponse = {}));
class EmptyUploadException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "EmptyUploadException",
            $fault: "client",
            ...opts,
        });
        this.name = "EmptyUploadException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EmptyUploadException.prototype);
    }
}
exports.EmptyUploadException = EmptyUploadException;
class InvalidLayerException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "InvalidLayerException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidLayerException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidLayerException.prototype);
    }
}
exports.InvalidLayerException = InvalidLayerException;
class KmsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "KmsException",
            $fault: "client",
            ...opts,
        });
        this.name = "KmsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KmsException.prototype);
        this.kmsError = opts.kmsError;
    }
}
exports.KmsException = KmsException;
class LayerAlreadyExistsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LayerAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "LayerAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LayerAlreadyExistsException.prototype);
    }
}
exports.LayerAlreadyExistsException = LayerAlreadyExistsException;
class LayerPartTooSmallException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LayerPartTooSmallException",
            $fault: "client",
            ...opts,
        });
        this.name = "LayerPartTooSmallException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LayerPartTooSmallException.prototype);
    }
}
exports.LayerPartTooSmallException = LayerPartTooSmallException;
class UploadNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "UploadNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "UploadNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UploadNotFoundException.prototype);
    }
}
exports.UploadNotFoundException = UploadNotFoundException;
var CreatePullThroughCacheRuleRequest;
(function (CreatePullThroughCacheRuleRequest) {
    CreatePullThroughCacheRuleRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(CreatePullThroughCacheRuleRequest = exports.CreatePullThroughCacheRuleRequest || (exports.CreatePullThroughCacheRuleRequest = {}));
var CreatePullThroughCacheRuleResponse;
(function (CreatePullThroughCacheRuleResponse) {
    CreatePullThroughCacheRuleResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(CreatePullThroughCacheRuleResponse = exports.CreatePullThroughCacheRuleResponse || (exports.CreatePullThroughCacheRuleResponse = {}));
class LimitExceededException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
exports.LimitExceededException = LimitExceededException;
class PullThroughCacheRuleAlreadyExistsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "PullThroughCacheRuleAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "PullThroughCacheRuleAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PullThroughCacheRuleAlreadyExistsException.prototype);
    }
}
exports.PullThroughCacheRuleAlreadyExistsException = PullThroughCacheRuleAlreadyExistsException;
class UnsupportedUpstreamRegistryException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "UnsupportedUpstreamRegistryException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedUpstreamRegistryException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedUpstreamRegistryException.prototype);
    }
}
exports.UnsupportedUpstreamRegistryException = UnsupportedUpstreamRegistryException;
var EncryptionType;
(function (EncryptionType) {
    EncryptionType["AES256"] = "AES256";
    EncryptionType["KMS"] = "KMS";
})(EncryptionType = exports.EncryptionType || (exports.EncryptionType = {}));
var EncryptionConfiguration;
(function (EncryptionConfiguration) {
    EncryptionConfiguration.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(EncryptionConfiguration = exports.EncryptionConfiguration || (exports.EncryptionConfiguration = {}));
var ImageScanningConfiguration;
(function (ImageScanningConfiguration) {
    ImageScanningConfiguration.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ImageScanningConfiguration = exports.ImageScanningConfiguration || (exports.ImageScanningConfiguration = {}));
var ImageTagMutability;
(function (ImageTagMutability) {
    ImageTagMutability["IMMUTABLE"] = "IMMUTABLE";
    ImageTagMutability["MUTABLE"] = "MUTABLE";
})(ImageTagMutability = exports.ImageTagMutability || (exports.ImageTagMutability = {}));
var Tag;
(function (Tag) {
    Tag.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(Tag = exports.Tag || (exports.Tag = {}));
var CreateRepositoryRequest;
(function (CreateRepositoryRequest) {
    CreateRepositoryRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(CreateRepositoryRequest = exports.CreateRepositoryRequest || (exports.CreateRepositoryRequest = {}));
var Repository;
(function (Repository) {
    Repository.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(Repository = exports.Repository || (exports.Repository = {}));
var CreateRepositoryResponse;
(function (CreateRepositoryResponse) {
    CreateRepositoryResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(CreateRepositoryResponse = exports.CreateRepositoryResponse || (exports.CreateRepositoryResponse = {}));
class InvalidTagParameterException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "InvalidTagParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTagParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTagParameterException.prototype);
    }
}
exports.InvalidTagParameterException = InvalidTagParameterException;
class RepositoryAlreadyExistsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "RepositoryAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "RepositoryAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RepositoryAlreadyExistsException.prototype);
    }
}
exports.RepositoryAlreadyExistsException = RepositoryAlreadyExistsException;
class TooManyTagsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
    }
}
exports.TooManyTagsException = TooManyTagsException;
var DeleteLifecyclePolicyRequest;
(function (DeleteLifecyclePolicyRequest) {
    DeleteLifecyclePolicyRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteLifecyclePolicyRequest = exports.DeleteLifecyclePolicyRequest || (exports.DeleteLifecyclePolicyRequest = {}));
var DeleteLifecyclePolicyResponse;
(function (DeleteLifecyclePolicyResponse) {
    DeleteLifecyclePolicyResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteLifecyclePolicyResponse = exports.DeleteLifecyclePolicyResponse || (exports.DeleteLifecyclePolicyResponse = {}));
class LifecyclePolicyNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LifecyclePolicyNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "LifecyclePolicyNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LifecyclePolicyNotFoundException.prototype);
    }
}
exports.LifecyclePolicyNotFoundException = LifecyclePolicyNotFoundException;
var DeletePullThroughCacheRuleRequest;
(function (DeletePullThroughCacheRuleRequest) {
    DeletePullThroughCacheRuleRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeletePullThroughCacheRuleRequest = exports.DeletePullThroughCacheRuleRequest || (exports.DeletePullThroughCacheRuleRequest = {}));
var DeletePullThroughCacheRuleResponse;
(function (DeletePullThroughCacheRuleResponse) {
    DeletePullThroughCacheRuleResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeletePullThroughCacheRuleResponse = exports.DeletePullThroughCacheRuleResponse || (exports.DeletePullThroughCacheRuleResponse = {}));
class PullThroughCacheRuleNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "PullThroughCacheRuleNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "PullThroughCacheRuleNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PullThroughCacheRuleNotFoundException.prototype);
    }
}
exports.PullThroughCacheRuleNotFoundException = PullThroughCacheRuleNotFoundException;
var DeleteRegistryPolicyRequest;
(function (DeleteRegistryPolicyRequest) {
    DeleteRegistryPolicyRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteRegistryPolicyRequest = exports.DeleteRegistryPolicyRequest || (exports.DeleteRegistryPolicyRequest = {}));
var DeleteRegistryPolicyResponse;
(function (DeleteRegistryPolicyResponse) {
    DeleteRegistryPolicyResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteRegistryPolicyResponse = exports.DeleteRegistryPolicyResponse || (exports.DeleteRegistryPolicyResponse = {}));
class RegistryPolicyNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "RegistryPolicyNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "RegistryPolicyNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RegistryPolicyNotFoundException.prototype);
    }
}
exports.RegistryPolicyNotFoundException = RegistryPolicyNotFoundException;
var DeleteRepositoryRequest;
(function (DeleteRepositoryRequest) {
    DeleteRepositoryRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteRepositoryRequest = exports.DeleteRepositoryRequest || (exports.DeleteRepositoryRequest = {}));
var DeleteRepositoryResponse;
(function (DeleteRepositoryResponse) {
    DeleteRepositoryResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteRepositoryResponse = exports.DeleteRepositoryResponse || (exports.DeleteRepositoryResponse = {}));
class RepositoryNotEmptyException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "RepositoryNotEmptyException",
            $fault: "client",
            ...opts,
        });
        this.name = "RepositoryNotEmptyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RepositoryNotEmptyException.prototype);
    }
}
exports.RepositoryNotEmptyException = RepositoryNotEmptyException;
var DeleteRepositoryPolicyRequest;
(function (DeleteRepositoryPolicyRequest) {
    DeleteRepositoryPolicyRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteRepositoryPolicyRequest = exports.DeleteRepositoryPolicyRequest || (exports.DeleteRepositoryPolicyRequest = {}));
var DeleteRepositoryPolicyResponse;
(function (DeleteRepositoryPolicyResponse) {
    DeleteRepositoryPolicyResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteRepositoryPolicyResponse = exports.DeleteRepositoryPolicyResponse || (exports.DeleteRepositoryPolicyResponse = {}));
class RepositoryPolicyNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "RepositoryPolicyNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "RepositoryPolicyNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RepositoryPolicyNotFoundException.prototype);
    }
}
exports.RepositoryPolicyNotFoundException = RepositoryPolicyNotFoundException;
var DescribeImageReplicationStatusRequest;
(function (DescribeImageReplicationStatusRequest) {
    DescribeImageReplicationStatusRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeImageReplicationStatusRequest = exports.DescribeImageReplicationStatusRequest || (exports.DescribeImageReplicationStatusRequest = {}));
var ReplicationStatus;
(function (ReplicationStatus) {
    ReplicationStatus["COMPLETE"] = "COMPLETE";
    ReplicationStatus["FAILED"] = "FAILED";
    ReplicationStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(ReplicationStatus = exports.ReplicationStatus || (exports.ReplicationStatus = {}));
var ImageReplicationStatus;
(function (ImageReplicationStatus) {
    ImageReplicationStatus.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ImageReplicationStatus = exports.ImageReplicationStatus || (exports.ImageReplicationStatus = {}));
var DescribeImageReplicationStatusResponse;
(function (DescribeImageReplicationStatusResponse) {
    DescribeImageReplicationStatusResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeImageReplicationStatusResponse = exports.DescribeImageReplicationStatusResponse || (exports.DescribeImageReplicationStatusResponse = {}));
class ImageNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ImageNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ImageNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ImageNotFoundException.prototype);
    }
}
exports.ImageNotFoundException = ImageNotFoundException;
var TagStatus;
(function (TagStatus) {
    TagStatus["ANY"] = "ANY";
    TagStatus["TAGGED"] = "TAGGED";
    TagStatus["UNTAGGED"] = "UNTAGGED";
})(TagStatus = exports.TagStatus || (exports.TagStatus = {}));
var DescribeImagesFilter;
(function (DescribeImagesFilter) {
    DescribeImagesFilter.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeImagesFilter = exports.DescribeImagesFilter || (exports.DescribeImagesFilter = {}));
var DescribeImagesRequest;
(function (DescribeImagesRequest) {
    DescribeImagesRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeImagesRequest = exports.DescribeImagesRequest || (exports.DescribeImagesRequest = {}));
var FindingSeverity;
(function (FindingSeverity) {
    FindingSeverity["CRITICAL"] = "CRITICAL";
    FindingSeverity["HIGH"] = "HIGH";
    FindingSeverity["INFORMATIONAL"] = "INFORMATIONAL";
    FindingSeverity["LOW"] = "LOW";
    FindingSeverity["MEDIUM"] = "MEDIUM";
    FindingSeverity["UNDEFINED"] = "UNDEFINED";
})(FindingSeverity = exports.FindingSeverity || (exports.FindingSeverity = {}));
var ImageScanFindingsSummary;
(function (ImageScanFindingsSummary) {
    ImageScanFindingsSummary.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ImageScanFindingsSummary = exports.ImageScanFindingsSummary || (exports.ImageScanFindingsSummary = {}));
var ScanStatus;
(function (ScanStatus) {
    ScanStatus["ACTIVE"] = "ACTIVE";
    ScanStatus["COMPLETE"] = "COMPLETE";
    ScanStatus["FAILED"] = "FAILED";
    ScanStatus["FINDINGS_UNAVAILABLE"] = "FINDINGS_UNAVAILABLE";
    ScanStatus["IN_PROGRESS"] = "IN_PROGRESS";
    ScanStatus["PENDING"] = "PENDING";
    ScanStatus["SCAN_ELIGIBILITY_EXPIRED"] = "SCAN_ELIGIBILITY_EXPIRED";
    ScanStatus["UNSUPPORTED_IMAGE"] = "UNSUPPORTED_IMAGE";
})(ScanStatus = exports.ScanStatus || (exports.ScanStatus = {}));
var ImageScanStatus;
(function (ImageScanStatus) {
    ImageScanStatus.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ImageScanStatus = exports.ImageScanStatus || (exports.ImageScanStatus = {}));
var ImageDetail;
(function (ImageDetail) {
    ImageDetail.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ImageDetail = exports.ImageDetail || (exports.ImageDetail = {}));
var DescribeImagesResponse;
(function (DescribeImagesResponse) {
    DescribeImagesResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeImagesResponse = exports.DescribeImagesResponse || (exports.DescribeImagesResponse = {}));
var DescribeImageScanFindingsRequest;
(function (DescribeImageScanFindingsRequest) {
    DescribeImageScanFindingsRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeImageScanFindingsRequest = exports.DescribeImageScanFindingsRequest || (exports.DescribeImageScanFindingsRequest = {}));
var CvssScore;
(function (CvssScore) {
    CvssScore.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(CvssScore = exports.CvssScore || (exports.CvssScore = {}));
var VulnerablePackage;
(function (VulnerablePackage) {
    VulnerablePackage.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(VulnerablePackage = exports.VulnerablePackage || (exports.VulnerablePackage = {}));
var PackageVulnerabilityDetails;
(function (PackageVulnerabilityDetails) {
    PackageVulnerabilityDetails.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PackageVulnerabilityDetails = exports.PackageVulnerabilityDetails || (exports.PackageVulnerabilityDetails = {}));
var Recommendation;
(function (Recommendation) {
    Recommendation.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(Recommendation = exports.Recommendation || (exports.Recommendation = {}));
var Remediation;
(function (Remediation) {
    Remediation.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(Remediation = exports.Remediation || (exports.Remediation = {}));
var AwsEcrContainerImageDetails;
(function (AwsEcrContainerImageDetails) {
    AwsEcrContainerImageDetails.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(AwsEcrContainerImageDetails = exports.AwsEcrContainerImageDetails || (exports.AwsEcrContainerImageDetails = {}));
var ResourceDetails;
(function (ResourceDetails) {
    ResourceDetails.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ResourceDetails = exports.ResourceDetails || (exports.ResourceDetails = {}));
var Resource;
(function (Resource) {
    Resource.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(Resource = exports.Resource || (exports.Resource = {}));
var CvssScoreAdjustment;
(function (CvssScoreAdjustment) {
    CvssScoreAdjustment.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(CvssScoreAdjustment = exports.CvssScoreAdjustment || (exports.CvssScoreAdjustment = {}));
var CvssScoreDetails;
(function (CvssScoreDetails) {
    CvssScoreDetails.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(CvssScoreDetails = exports.CvssScoreDetails || (exports.CvssScoreDetails = {}));
var ScoreDetails;
(function (ScoreDetails) {
    ScoreDetails.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ScoreDetails = exports.ScoreDetails || (exports.ScoreDetails = {}));
var EnhancedImageScanFinding;
(function (EnhancedImageScanFinding) {
    EnhancedImageScanFinding.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(EnhancedImageScanFinding = exports.EnhancedImageScanFinding || (exports.EnhancedImageScanFinding = {}));
var Attribute;
(function (Attribute) {
    Attribute.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(Attribute = exports.Attribute || (exports.Attribute = {}));
var ImageScanFinding;
(function (ImageScanFinding) {
    ImageScanFinding.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ImageScanFinding = exports.ImageScanFinding || (exports.ImageScanFinding = {}));
var ImageScanFindings;
(function (ImageScanFindings) {
    ImageScanFindings.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ImageScanFindings = exports.ImageScanFindings || (exports.ImageScanFindings = {}));
var DescribeImageScanFindingsResponse;
(function (DescribeImageScanFindingsResponse) {
    DescribeImageScanFindingsResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeImageScanFindingsResponse = exports.DescribeImageScanFindingsResponse || (exports.DescribeImageScanFindingsResponse = {}));
class ScanNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ScanNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ScanNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ScanNotFoundException.prototype);
    }
}
exports.ScanNotFoundException = ScanNotFoundException;
var DescribePullThroughCacheRulesRequest;
(function (DescribePullThroughCacheRulesRequest) {
    DescribePullThroughCacheRulesRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribePullThroughCacheRulesRequest = exports.DescribePullThroughCacheRulesRequest || (exports.DescribePullThroughCacheRulesRequest = {}));
var PullThroughCacheRule;
(function (PullThroughCacheRule) {
    PullThroughCacheRule.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PullThroughCacheRule = exports.PullThroughCacheRule || (exports.PullThroughCacheRule = {}));
var DescribePullThroughCacheRulesResponse;
(function (DescribePullThroughCacheRulesResponse) {
    DescribePullThroughCacheRulesResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribePullThroughCacheRulesResponse = exports.DescribePullThroughCacheRulesResponse || (exports.DescribePullThroughCacheRulesResponse = {}));
var DescribeRegistryRequest;
(function (DescribeRegistryRequest) {
    DescribeRegistryRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeRegistryRequest = exports.DescribeRegistryRequest || (exports.DescribeRegistryRequest = {}));
var ReplicationDestination;
(function (ReplicationDestination) {
    ReplicationDestination.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ReplicationDestination = exports.ReplicationDestination || (exports.ReplicationDestination = {}));
var RepositoryFilterType;
(function (RepositoryFilterType) {
    RepositoryFilterType["PREFIX_MATCH"] = "PREFIX_MATCH";
})(RepositoryFilterType = exports.RepositoryFilterType || (exports.RepositoryFilterType = {}));
var RepositoryFilter;
(function (RepositoryFilter) {
    RepositoryFilter.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(RepositoryFilter = exports.RepositoryFilter || (exports.RepositoryFilter = {}));
var ReplicationRule;
(function (ReplicationRule) {
    ReplicationRule.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ReplicationRule = exports.ReplicationRule || (exports.ReplicationRule = {}));
var ReplicationConfiguration;
(function (ReplicationConfiguration) {
    ReplicationConfiguration.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ReplicationConfiguration = exports.ReplicationConfiguration || (exports.ReplicationConfiguration = {}));
var DescribeRegistryResponse;
(function (DescribeRegistryResponse) {
    DescribeRegistryResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeRegistryResponse = exports.DescribeRegistryResponse || (exports.DescribeRegistryResponse = {}));
var DescribeRepositoriesRequest;
(function (DescribeRepositoriesRequest) {
    DescribeRepositoriesRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeRepositoriesRequest = exports.DescribeRepositoriesRequest || (exports.DescribeRepositoriesRequest = {}));
var DescribeRepositoriesResponse;
(function (DescribeRepositoriesResponse) {
    DescribeRepositoriesResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeRepositoriesResponse = exports.DescribeRepositoriesResponse || (exports.DescribeRepositoriesResponse = {}));
var GetAuthorizationTokenRequest;
(function (GetAuthorizationTokenRequest) {
    GetAuthorizationTokenRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetAuthorizationTokenRequest = exports.GetAuthorizationTokenRequest || (exports.GetAuthorizationTokenRequest = {}));
var AuthorizationData;
(function (AuthorizationData) {
    AuthorizationData.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(AuthorizationData = exports.AuthorizationData || (exports.AuthorizationData = {}));
var GetAuthorizationTokenResponse;
(function (GetAuthorizationTokenResponse) {
    GetAuthorizationTokenResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetAuthorizationTokenResponse = exports.GetAuthorizationTokenResponse || (exports.GetAuthorizationTokenResponse = {}));
var GetDownloadUrlForLayerRequest;
(function (GetDownloadUrlForLayerRequest) {
    GetDownloadUrlForLayerRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetDownloadUrlForLayerRequest = exports.GetDownloadUrlForLayerRequest || (exports.GetDownloadUrlForLayerRequest = {}));
var GetDownloadUrlForLayerResponse;
(function (GetDownloadUrlForLayerResponse) {
    GetDownloadUrlForLayerResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetDownloadUrlForLayerResponse = exports.GetDownloadUrlForLayerResponse || (exports.GetDownloadUrlForLayerResponse = {}));
class LayerInaccessibleException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LayerInaccessibleException",
            $fault: "client",
            ...opts,
        });
        this.name = "LayerInaccessibleException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LayerInaccessibleException.prototype);
    }
}
exports.LayerInaccessibleException = LayerInaccessibleException;
class LayersNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LayersNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "LayersNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LayersNotFoundException.prototype);
    }
}
exports.LayersNotFoundException = LayersNotFoundException;
var GetLifecyclePolicyRequest;
(function (GetLifecyclePolicyRequest) {
    GetLifecyclePolicyRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetLifecyclePolicyRequest = exports.GetLifecyclePolicyRequest || (exports.GetLifecyclePolicyRequest = {}));
var GetLifecyclePolicyResponse;
(function (GetLifecyclePolicyResponse) {
    GetLifecyclePolicyResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetLifecyclePolicyResponse = exports.GetLifecyclePolicyResponse || (exports.GetLifecyclePolicyResponse = {}));
var LifecyclePolicyPreviewFilter;
(function (LifecyclePolicyPreviewFilter) {
    LifecyclePolicyPreviewFilter.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(LifecyclePolicyPreviewFilter = exports.LifecyclePolicyPreviewFilter || (exports.LifecyclePolicyPreviewFilter = {}));
var GetLifecyclePolicyPreviewRequest;
(function (GetLifecyclePolicyPreviewRequest) {
    GetLifecyclePolicyPreviewRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetLifecyclePolicyPreviewRequest = exports.GetLifecyclePolicyPreviewRequest || (exports.GetLifecyclePolicyPreviewRequest = {}));
var ImageActionType;
(function (ImageActionType) {
    ImageActionType["EXPIRE"] = "EXPIRE";
})(ImageActionType = exports.ImageActionType || (exports.ImageActionType = {}));
var LifecyclePolicyRuleAction;
(function (LifecyclePolicyRuleAction) {
    LifecyclePolicyRuleAction.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(LifecyclePolicyRuleAction = exports.LifecyclePolicyRuleAction || (exports.LifecyclePolicyRuleAction = {}));
var LifecyclePolicyPreviewResult;
(function (LifecyclePolicyPreviewResult) {
    LifecyclePolicyPreviewResult.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(LifecyclePolicyPreviewResult = exports.LifecyclePolicyPreviewResult || (exports.LifecyclePolicyPreviewResult = {}));
var LifecyclePolicyPreviewStatus;
(function (LifecyclePolicyPreviewStatus) {
    LifecyclePolicyPreviewStatus["COMPLETE"] = "COMPLETE";
    LifecyclePolicyPreviewStatus["EXPIRED"] = "EXPIRED";
    LifecyclePolicyPreviewStatus["FAILED"] = "FAILED";
    LifecyclePolicyPreviewStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(LifecyclePolicyPreviewStatus = exports.LifecyclePolicyPreviewStatus || (exports.LifecyclePolicyPreviewStatus = {}));
var LifecyclePolicyPreviewSummary;
(function (LifecyclePolicyPreviewSummary) {
    LifecyclePolicyPreviewSummary.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(LifecyclePolicyPreviewSummary = exports.LifecyclePolicyPreviewSummary || (exports.LifecyclePolicyPreviewSummary = {}));
var GetLifecyclePolicyPreviewResponse;
(function (GetLifecyclePolicyPreviewResponse) {
    GetLifecyclePolicyPreviewResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetLifecyclePolicyPreviewResponse = exports.GetLifecyclePolicyPreviewResponse || (exports.GetLifecyclePolicyPreviewResponse = {}));
class LifecyclePolicyPreviewNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LifecyclePolicyPreviewNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "LifecyclePolicyPreviewNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LifecyclePolicyPreviewNotFoundException.prototype);
    }
}
exports.LifecyclePolicyPreviewNotFoundException = LifecyclePolicyPreviewNotFoundException;
var GetRegistryPolicyRequest;
(function (GetRegistryPolicyRequest) {
    GetRegistryPolicyRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetRegistryPolicyRequest = exports.GetRegistryPolicyRequest || (exports.GetRegistryPolicyRequest = {}));
var GetRegistryPolicyResponse;
(function (GetRegistryPolicyResponse) {
    GetRegistryPolicyResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetRegistryPolicyResponse = exports.GetRegistryPolicyResponse || (exports.GetRegistryPolicyResponse = {}));
var GetRegistryScanningConfigurationRequest;
(function (GetRegistryScanningConfigurationRequest) {
    GetRegistryScanningConfigurationRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetRegistryScanningConfigurationRequest = exports.GetRegistryScanningConfigurationRequest || (exports.GetRegistryScanningConfigurationRequest = {}));
var RegistryScanningRule;
(function (RegistryScanningRule) {
    RegistryScanningRule.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(RegistryScanningRule = exports.RegistryScanningRule || (exports.RegistryScanningRule = {}));
var ScanType;
(function (ScanType) {
    ScanType["BASIC"] = "BASIC";
    ScanType["ENHANCED"] = "ENHANCED";
})(ScanType = exports.ScanType || (exports.ScanType = {}));
var RegistryScanningConfiguration;
(function (RegistryScanningConfiguration) {
    RegistryScanningConfiguration.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(RegistryScanningConfiguration = exports.RegistryScanningConfiguration || (exports.RegistryScanningConfiguration = {}));
var GetRegistryScanningConfigurationResponse;
(function (GetRegistryScanningConfigurationResponse) {
    GetRegistryScanningConfigurationResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetRegistryScanningConfigurationResponse = exports.GetRegistryScanningConfigurationResponse || (exports.GetRegistryScanningConfigurationResponse = {}));
var GetRepositoryPolicyRequest;
(function (GetRepositoryPolicyRequest) {
    GetRepositoryPolicyRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetRepositoryPolicyRequest = exports.GetRepositoryPolicyRequest || (exports.GetRepositoryPolicyRequest = {}));
var GetRepositoryPolicyResponse;
(function (GetRepositoryPolicyResponse) {
    GetRepositoryPolicyResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetRepositoryPolicyResponse = exports.GetRepositoryPolicyResponse || (exports.GetRepositoryPolicyResponse = {}));
var InitiateLayerUploadRequest;
(function (InitiateLayerUploadRequest) {
    InitiateLayerUploadRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(InitiateLayerUploadRequest = exports.InitiateLayerUploadRequest || (exports.InitiateLayerUploadRequest = {}));
var InitiateLayerUploadResponse;
(function (InitiateLayerUploadResponse) {
    InitiateLayerUploadResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(InitiateLayerUploadResponse = exports.InitiateLayerUploadResponse || (exports.InitiateLayerUploadResponse = {}));
var ListImagesFilter;
(function (ListImagesFilter) {
    ListImagesFilter.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ListImagesFilter = exports.ListImagesFilter || (exports.ListImagesFilter = {}));
var ListImagesRequest;
(function (ListImagesRequest) {
    ListImagesRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ListImagesRequest = exports.ListImagesRequest || (exports.ListImagesRequest = {}));
var ListImagesResponse;
(function (ListImagesResponse) {
    ListImagesResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ListImagesResponse = exports.ListImagesResponse || (exports.ListImagesResponse = {}));
var ListTagsForResourceRequest;
(function (ListTagsForResourceRequest) {
    ListTagsForResourceRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ListTagsForResourceRequest = exports.ListTagsForResourceRequest || (exports.ListTagsForResourceRequest = {}));
var ListTagsForResourceResponse;
(function (ListTagsForResourceResponse) {
    ListTagsForResourceResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ListTagsForResourceResponse = exports.ListTagsForResourceResponse || (exports.ListTagsForResourceResponse = {}));
class ImageAlreadyExistsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ImageAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ImageAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ImageAlreadyExistsException.prototype);
    }
}
exports.ImageAlreadyExistsException = ImageAlreadyExistsException;
class ImageDigestDoesNotMatchException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ImageDigestDoesNotMatchException",
            $fault: "client",
            ...opts,
        });
        this.name = "ImageDigestDoesNotMatchException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ImageDigestDoesNotMatchException.prototype);
    }
}
exports.ImageDigestDoesNotMatchException = ImageDigestDoesNotMatchException;
class ImageTagAlreadyExistsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ImageTagAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ImageTagAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ImageTagAlreadyExistsException.prototype);
    }
}
exports.ImageTagAlreadyExistsException = ImageTagAlreadyExistsException;
var PutImageRequest;
(function (PutImageRequest) {
    PutImageRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutImageRequest = exports.PutImageRequest || (exports.PutImageRequest = {}));
var PutImageResponse;
(function (PutImageResponse) {
    PutImageResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutImageResponse = exports.PutImageResponse || (exports.PutImageResponse = {}));
class ReferencedImagesNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ReferencedImagesNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ReferencedImagesNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReferencedImagesNotFoundException.prototype);
    }
}
exports.ReferencedImagesNotFoundException = ReferencedImagesNotFoundException;
var PutImageScanningConfigurationRequest;
(function (PutImageScanningConfigurationRequest) {
    PutImageScanningConfigurationRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutImageScanningConfigurationRequest = exports.PutImageScanningConfigurationRequest || (exports.PutImageScanningConfigurationRequest = {}));
var PutImageScanningConfigurationResponse;
(function (PutImageScanningConfigurationResponse) {
    PutImageScanningConfigurationResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutImageScanningConfigurationResponse = exports.PutImageScanningConfigurationResponse || (exports.PutImageScanningConfigurationResponse = {}));
var PutImageTagMutabilityRequest;
(function (PutImageTagMutabilityRequest) {
    PutImageTagMutabilityRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutImageTagMutabilityRequest = exports.PutImageTagMutabilityRequest || (exports.PutImageTagMutabilityRequest = {}));
var PutImageTagMutabilityResponse;
(function (PutImageTagMutabilityResponse) {
    PutImageTagMutabilityResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutImageTagMutabilityResponse = exports.PutImageTagMutabilityResponse || (exports.PutImageTagMutabilityResponse = {}));
var PutLifecyclePolicyRequest;
(function (PutLifecyclePolicyRequest) {
    PutLifecyclePolicyRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutLifecyclePolicyRequest = exports.PutLifecyclePolicyRequest || (exports.PutLifecyclePolicyRequest = {}));
var PutLifecyclePolicyResponse;
(function (PutLifecyclePolicyResponse) {
    PutLifecyclePolicyResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutLifecyclePolicyResponse = exports.PutLifecyclePolicyResponse || (exports.PutLifecyclePolicyResponse = {}));
var PutRegistryPolicyRequest;
(function (PutRegistryPolicyRequest) {
    PutRegistryPolicyRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutRegistryPolicyRequest = exports.PutRegistryPolicyRequest || (exports.PutRegistryPolicyRequest = {}));
var PutRegistryPolicyResponse;
(function (PutRegistryPolicyResponse) {
    PutRegistryPolicyResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutRegistryPolicyResponse = exports.PutRegistryPolicyResponse || (exports.PutRegistryPolicyResponse = {}));
var PutRegistryScanningConfigurationRequest;
(function (PutRegistryScanningConfigurationRequest) {
    PutRegistryScanningConfigurationRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutRegistryScanningConfigurationRequest = exports.PutRegistryScanningConfigurationRequest || (exports.PutRegistryScanningConfigurationRequest = {}));
var PutRegistryScanningConfigurationResponse;
(function (PutRegistryScanningConfigurationResponse) {
    PutRegistryScanningConfigurationResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutRegistryScanningConfigurationResponse = exports.PutRegistryScanningConfigurationResponse || (exports.PutRegistryScanningConfigurationResponse = {}));
var PutReplicationConfigurationRequest;
(function (PutReplicationConfigurationRequest) {
    PutReplicationConfigurationRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutReplicationConfigurationRequest = exports.PutReplicationConfigurationRequest || (exports.PutReplicationConfigurationRequest = {}));
var PutReplicationConfigurationResponse;
(function (PutReplicationConfigurationResponse) {
    PutReplicationConfigurationResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutReplicationConfigurationResponse = exports.PutReplicationConfigurationResponse || (exports.PutReplicationConfigurationResponse = {}));
var SetRepositoryPolicyRequest;
(function (SetRepositoryPolicyRequest) {
    SetRepositoryPolicyRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(SetRepositoryPolicyRequest = exports.SetRepositoryPolicyRequest || (exports.SetRepositoryPolicyRequest = {}));
var SetRepositoryPolicyResponse;
(function (SetRepositoryPolicyResponse) {
    SetRepositoryPolicyResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(SetRepositoryPolicyResponse = exports.SetRepositoryPolicyResponse || (exports.SetRepositoryPolicyResponse = {}));
var StartImageScanRequest;
(function (StartImageScanRequest) {
    StartImageScanRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(StartImageScanRequest = exports.StartImageScanRequest || (exports.StartImageScanRequest = {}));
var StartImageScanResponse;
(function (StartImageScanResponse) {
    StartImageScanResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(StartImageScanResponse = exports.StartImageScanResponse || (exports.StartImageScanResponse = {}));
class UnsupportedImageTypeException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "UnsupportedImageTypeException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedImageTypeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedImageTypeException.prototype);
    }
}
exports.UnsupportedImageTypeException = UnsupportedImageTypeException;
class LifecyclePolicyPreviewInProgressException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LifecyclePolicyPreviewInProgressException",
            $fault: "client",
            ...opts,
        });
        this.name = "LifecyclePolicyPreviewInProgressException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LifecyclePolicyPreviewInProgressException.prototype);
    }
}
exports.LifecyclePolicyPreviewInProgressException = LifecyclePolicyPreviewInProgressException;
var StartLifecyclePolicyPreviewRequest;
(function (StartLifecyclePolicyPreviewRequest) {
    StartLifecyclePolicyPreviewRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(StartLifecyclePolicyPreviewRequest = exports.StartLifecyclePolicyPreviewRequest || (exports.StartLifecyclePolicyPreviewRequest = {}));
var StartLifecyclePolicyPreviewResponse;
(function (StartLifecyclePolicyPreviewResponse) {
    StartLifecyclePolicyPreviewResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(StartLifecyclePolicyPreviewResponse = exports.StartLifecyclePolicyPreviewResponse || (exports.StartLifecyclePolicyPreviewResponse = {}));
var TagResourceRequest;
(function (TagResourceRequest) {
    TagResourceRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(TagResourceRequest = exports.TagResourceRequest || (exports.TagResourceRequest = {}));
var TagResourceResponse;
(function (TagResourceResponse) {
    TagResourceResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(TagResourceResponse = exports.TagResourceResponse || (exports.TagResourceResponse = {}));
var UntagResourceRequest;
(function (UntagResourceRequest) {
    UntagResourceRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(UntagResourceRequest = exports.UntagResourceRequest || (exports.UntagResourceRequest = {}));
var UntagResourceResponse;
(function (UntagResourceResponse) {
    UntagResourceResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(UntagResourceResponse = exports.UntagResourceResponse || (exports.UntagResourceResponse = {}));
class InvalidLayerPartException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "InvalidLayerPartException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidLayerPartException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidLayerPartException.prototype);
        this.registryId = opts.registryId;
        this.repositoryName = opts.repositoryName;
        this.uploadId = opts.uploadId;
        this.lastValidByteReceived = opts.lastValidByteReceived;
    }
}
exports.InvalidLayerPartException = InvalidLayerPartException;
var UploadLayerPartRequest;
(function (UploadLayerPartRequest) {
    UploadLayerPartRequest.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(UploadLayerPartRequest = exports.UploadLayerPartRequest || (exports.UploadLayerPartRequest = {}));
var UploadLayerPartResponse;
(function (UploadLayerPartResponse) {
    UploadLayerPartResponse.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(UploadLayerPartResponse = exports.UploadLayerPartResponse || (exports.UploadLayerPartResponse = {}));
