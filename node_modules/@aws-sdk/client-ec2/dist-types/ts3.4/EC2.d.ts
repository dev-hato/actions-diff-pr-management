import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
import { AcceptReservedInstancesExchangeQuoteCommandInput, AcceptReservedInstancesExchangeQuoteCommandOutput } from "./commands/AcceptReservedInstancesExchangeQuoteCommand";
import { AcceptTransitGatewayMulticastDomainAssociationsCommandInput, AcceptTransitGatewayMulticastDomainAssociationsCommandOutput } from "./commands/AcceptTransitGatewayMulticastDomainAssociationsCommand";
import { AcceptTransitGatewayPeeringAttachmentCommandInput, AcceptTransitGatewayPeeringAttachmentCommandOutput } from "./commands/AcceptTransitGatewayPeeringAttachmentCommand";
import { AcceptTransitGatewayVpcAttachmentCommandInput, AcceptTransitGatewayVpcAttachmentCommandOutput } from "./commands/AcceptTransitGatewayVpcAttachmentCommand";
import { AcceptVpcEndpointConnectionsCommandInput, AcceptVpcEndpointConnectionsCommandOutput } from "./commands/AcceptVpcEndpointConnectionsCommand";
import { AcceptVpcPeeringConnectionCommandInput, AcceptVpcPeeringConnectionCommandOutput } from "./commands/AcceptVpcPeeringConnectionCommand";
import { AdvertiseByoipCidrCommandInput, AdvertiseByoipCidrCommandOutput } from "./commands/AdvertiseByoipCidrCommand";
import { AllocateAddressCommandInput, AllocateAddressCommandOutput } from "./commands/AllocateAddressCommand";
import { AllocateHostsCommandInput, AllocateHostsCommandOutput } from "./commands/AllocateHostsCommand";
import { AllocateIpamPoolCidrCommandInput, AllocateIpamPoolCidrCommandOutput } from "./commands/AllocateIpamPoolCidrCommand";
import { ApplySecurityGroupsToClientVpnTargetNetworkCommandInput, ApplySecurityGroupsToClientVpnTargetNetworkCommandOutput } from "./commands/ApplySecurityGroupsToClientVpnTargetNetworkCommand";
import { AssignIpv6AddressesCommandInput, AssignIpv6AddressesCommandOutput } from "./commands/AssignIpv6AddressesCommand";
import { AssignPrivateIpAddressesCommandInput, AssignPrivateIpAddressesCommandOutput } from "./commands/AssignPrivateIpAddressesCommand";
import { AssociateAddressCommandInput, AssociateAddressCommandOutput } from "./commands/AssociateAddressCommand";
import { AssociateClientVpnTargetNetworkCommandInput, AssociateClientVpnTargetNetworkCommandOutput } from "./commands/AssociateClientVpnTargetNetworkCommand";
import { AssociateDhcpOptionsCommandInput, AssociateDhcpOptionsCommandOutput } from "./commands/AssociateDhcpOptionsCommand";
import { AssociateEnclaveCertificateIamRoleCommandInput, AssociateEnclaveCertificateIamRoleCommandOutput } from "./commands/AssociateEnclaveCertificateIamRoleCommand";
import { AssociateIamInstanceProfileCommandInput, AssociateIamInstanceProfileCommandOutput } from "./commands/AssociateIamInstanceProfileCommand";
import { AssociateInstanceEventWindowCommandInput, AssociateInstanceEventWindowCommandOutput } from "./commands/AssociateInstanceEventWindowCommand";
import { AssociateRouteTableCommandInput, AssociateRouteTableCommandOutput } from "./commands/AssociateRouteTableCommand";
import { AssociateSubnetCidrBlockCommandInput, AssociateSubnetCidrBlockCommandOutput } from "./commands/AssociateSubnetCidrBlockCommand";
import { AssociateTransitGatewayMulticastDomainCommandInput, AssociateTransitGatewayMulticastDomainCommandOutput } from "./commands/AssociateTransitGatewayMulticastDomainCommand";
import { AssociateTransitGatewayRouteTableCommandInput, AssociateTransitGatewayRouteTableCommandOutput } from "./commands/AssociateTransitGatewayRouteTableCommand";
import { AssociateTrunkInterfaceCommandInput, AssociateTrunkInterfaceCommandOutput } from "./commands/AssociateTrunkInterfaceCommand";
import { AssociateVpcCidrBlockCommandInput, AssociateVpcCidrBlockCommandOutput } from "./commands/AssociateVpcCidrBlockCommand";
import { AttachClassicLinkVpcCommandInput, AttachClassicLinkVpcCommandOutput } from "./commands/AttachClassicLinkVpcCommand";
import { AttachInternetGatewayCommandInput, AttachInternetGatewayCommandOutput } from "./commands/AttachInternetGatewayCommand";
import { AttachNetworkInterfaceCommandInput, AttachNetworkInterfaceCommandOutput } from "./commands/AttachNetworkInterfaceCommand";
import { AttachVolumeCommandInput, AttachVolumeCommandOutput } from "./commands/AttachVolumeCommand";
import { AttachVpnGatewayCommandInput, AttachVpnGatewayCommandOutput } from "./commands/AttachVpnGatewayCommand";
import { AuthorizeClientVpnIngressCommandInput, AuthorizeClientVpnIngressCommandOutput } from "./commands/AuthorizeClientVpnIngressCommand";
import { AuthorizeSecurityGroupEgressCommandInput, AuthorizeSecurityGroupEgressCommandOutput } from "./commands/AuthorizeSecurityGroupEgressCommand";
import { AuthorizeSecurityGroupIngressCommandInput, AuthorizeSecurityGroupIngressCommandOutput } from "./commands/AuthorizeSecurityGroupIngressCommand";
import { BundleInstanceCommandInput, BundleInstanceCommandOutput } from "./commands/BundleInstanceCommand";
import { CancelBundleTaskCommandInput, CancelBundleTaskCommandOutput } from "./commands/CancelBundleTaskCommand";
import { CancelCapacityReservationCommandInput, CancelCapacityReservationCommandOutput } from "./commands/CancelCapacityReservationCommand";
import { CancelCapacityReservationFleetsCommandInput, CancelCapacityReservationFleetsCommandOutput } from "./commands/CancelCapacityReservationFleetsCommand";
import { CancelConversionTaskCommandInput, CancelConversionTaskCommandOutput } from "./commands/CancelConversionTaskCommand";
import { CancelExportTaskCommandInput, CancelExportTaskCommandOutput } from "./commands/CancelExportTaskCommand";
import { CancelImportTaskCommandInput, CancelImportTaskCommandOutput } from "./commands/CancelImportTaskCommand";
import { CancelReservedInstancesListingCommandInput, CancelReservedInstancesListingCommandOutput } from "./commands/CancelReservedInstancesListingCommand";
import { CancelSpotFleetRequestsCommandInput, CancelSpotFleetRequestsCommandOutput } from "./commands/CancelSpotFleetRequestsCommand";
import { CancelSpotInstanceRequestsCommandInput, CancelSpotInstanceRequestsCommandOutput } from "./commands/CancelSpotInstanceRequestsCommand";
import { ConfirmProductInstanceCommandInput, ConfirmProductInstanceCommandOutput } from "./commands/ConfirmProductInstanceCommand";
import { CopyFpgaImageCommandInput, CopyFpgaImageCommandOutput } from "./commands/CopyFpgaImageCommand";
import { CopyImageCommandInput, CopyImageCommandOutput } from "./commands/CopyImageCommand";
import { CopySnapshotCommandInput, CopySnapshotCommandOutput } from "./commands/CopySnapshotCommand";
import { CreateCapacityReservationCommandInput, CreateCapacityReservationCommandOutput } from "./commands/CreateCapacityReservationCommand";
import { CreateCapacityReservationFleetCommandInput, CreateCapacityReservationFleetCommandOutput } from "./commands/CreateCapacityReservationFleetCommand";
import { CreateCarrierGatewayCommandInput, CreateCarrierGatewayCommandOutput } from "./commands/CreateCarrierGatewayCommand";
import { CreateClientVpnEndpointCommandInput, CreateClientVpnEndpointCommandOutput } from "./commands/CreateClientVpnEndpointCommand";
import { CreateClientVpnRouteCommandInput, CreateClientVpnRouteCommandOutput } from "./commands/CreateClientVpnRouteCommand";
import { CreateCustomerGatewayCommandInput, CreateCustomerGatewayCommandOutput } from "./commands/CreateCustomerGatewayCommand";
import { CreateDefaultSubnetCommandInput, CreateDefaultSubnetCommandOutput } from "./commands/CreateDefaultSubnetCommand";
import { CreateDefaultVpcCommandInput, CreateDefaultVpcCommandOutput } from "./commands/CreateDefaultVpcCommand";
import { CreateDhcpOptionsCommandInput, CreateDhcpOptionsCommandOutput } from "./commands/CreateDhcpOptionsCommand";
import { CreateEgressOnlyInternetGatewayCommandInput, CreateEgressOnlyInternetGatewayCommandOutput } from "./commands/CreateEgressOnlyInternetGatewayCommand";
import { CreateFleetCommandInput, CreateFleetCommandOutput } from "./commands/CreateFleetCommand";
import { CreateFlowLogsCommandInput, CreateFlowLogsCommandOutput } from "./commands/CreateFlowLogsCommand";
import { CreateFpgaImageCommandInput, CreateFpgaImageCommandOutput } from "./commands/CreateFpgaImageCommand";
import { CreateImageCommandInput, CreateImageCommandOutput } from "./commands/CreateImageCommand";
import { CreateInstanceEventWindowCommandInput, CreateInstanceEventWindowCommandOutput } from "./commands/CreateInstanceEventWindowCommand";
import { CreateInstanceExportTaskCommandInput, CreateInstanceExportTaskCommandOutput } from "./commands/CreateInstanceExportTaskCommand";
import { CreateInternetGatewayCommandInput, CreateInternetGatewayCommandOutput } from "./commands/CreateInternetGatewayCommand";
import { CreateIpamCommandInput, CreateIpamCommandOutput } from "./commands/CreateIpamCommand";
import { CreateIpamPoolCommandInput, CreateIpamPoolCommandOutput } from "./commands/CreateIpamPoolCommand";
import { CreateIpamScopeCommandInput, CreateIpamScopeCommandOutput } from "./commands/CreateIpamScopeCommand";
import { CreateKeyPairCommandInput, CreateKeyPairCommandOutput } from "./commands/CreateKeyPairCommand";
import { CreateLaunchTemplateCommandInput, CreateLaunchTemplateCommandOutput } from "./commands/CreateLaunchTemplateCommand";
import { CreateLaunchTemplateVersionCommandInput, CreateLaunchTemplateVersionCommandOutput } from "./commands/CreateLaunchTemplateVersionCommand";
import { CreateLocalGatewayRouteCommandInput, CreateLocalGatewayRouteCommandOutput } from "./commands/CreateLocalGatewayRouteCommand";
import { CreateLocalGatewayRouteTableVpcAssociationCommandInput, CreateLocalGatewayRouteTableVpcAssociationCommandOutput } from "./commands/CreateLocalGatewayRouteTableVpcAssociationCommand";
import { CreateManagedPrefixListCommandInput, CreateManagedPrefixListCommandOutput } from "./commands/CreateManagedPrefixListCommand";
import { CreateNatGatewayCommandInput, CreateNatGatewayCommandOutput } from "./commands/CreateNatGatewayCommand";
import { CreateNetworkAclCommandInput, CreateNetworkAclCommandOutput } from "./commands/CreateNetworkAclCommand";
import { CreateNetworkAclEntryCommandInput, CreateNetworkAclEntryCommandOutput } from "./commands/CreateNetworkAclEntryCommand";
import { CreateNetworkInsightsAccessScopeCommandInput, CreateNetworkInsightsAccessScopeCommandOutput } from "./commands/CreateNetworkInsightsAccessScopeCommand";
import { CreateNetworkInsightsPathCommandInput, CreateNetworkInsightsPathCommandOutput } from "./commands/CreateNetworkInsightsPathCommand";
import { CreateNetworkInterfaceCommandInput, CreateNetworkInterfaceCommandOutput } from "./commands/CreateNetworkInterfaceCommand";
import { CreateNetworkInterfacePermissionCommandInput, CreateNetworkInterfacePermissionCommandOutput } from "./commands/CreateNetworkInterfacePermissionCommand";
import { CreatePlacementGroupCommandInput, CreatePlacementGroupCommandOutput } from "./commands/CreatePlacementGroupCommand";
import { CreatePublicIpv4PoolCommandInput, CreatePublicIpv4PoolCommandOutput } from "./commands/CreatePublicIpv4PoolCommand";
import { CreateReplaceRootVolumeTaskCommandInput, CreateReplaceRootVolumeTaskCommandOutput } from "./commands/CreateReplaceRootVolumeTaskCommand";
import { CreateReservedInstancesListingCommandInput, CreateReservedInstancesListingCommandOutput } from "./commands/CreateReservedInstancesListingCommand";
import { CreateRestoreImageTaskCommandInput, CreateRestoreImageTaskCommandOutput } from "./commands/CreateRestoreImageTaskCommand";
import { CreateRouteCommandInput, CreateRouteCommandOutput } from "./commands/CreateRouteCommand";
import { CreateRouteTableCommandInput, CreateRouteTableCommandOutput } from "./commands/CreateRouteTableCommand";
import { CreateSecurityGroupCommandInput, CreateSecurityGroupCommandOutput } from "./commands/CreateSecurityGroupCommand";
import { CreateSnapshotCommandInput, CreateSnapshotCommandOutput } from "./commands/CreateSnapshotCommand";
import { CreateSnapshotsCommandInput, CreateSnapshotsCommandOutput } from "./commands/CreateSnapshotsCommand";
import { CreateSpotDatafeedSubscriptionCommandInput, CreateSpotDatafeedSubscriptionCommandOutput } from "./commands/CreateSpotDatafeedSubscriptionCommand";
import { CreateStoreImageTaskCommandInput, CreateStoreImageTaskCommandOutput } from "./commands/CreateStoreImageTaskCommand";
import { CreateSubnetCidrReservationCommandInput, CreateSubnetCidrReservationCommandOutput } from "./commands/CreateSubnetCidrReservationCommand";
import { CreateSubnetCommandInput, CreateSubnetCommandOutput } from "./commands/CreateSubnetCommand";
import { CreateTagsCommandInput, CreateTagsCommandOutput } from "./commands/CreateTagsCommand";
import { CreateTrafficMirrorFilterCommandInput, CreateTrafficMirrorFilterCommandOutput } from "./commands/CreateTrafficMirrorFilterCommand";
import { CreateTrafficMirrorFilterRuleCommandInput, CreateTrafficMirrorFilterRuleCommandOutput } from "./commands/CreateTrafficMirrorFilterRuleCommand";
import { CreateTrafficMirrorSessionCommandInput, CreateTrafficMirrorSessionCommandOutput } from "./commands/CreateTrafficMirrorSessionCommand";
import { CreateTrafficMirrorTargetCommandInput, CreateTrafficMirrorTargetCommandOutput } from "./commands/CreateTrafficMirrorTargetCommand";
import { CreateTransitGatewayCommandInput, CreateTransitGatewayCommandOutput } from "./commands/CreateTransitGatewayCommand";
import { CreateTransitGatewayConnectCommandInput, CreateTransitGatewayConnectCommandOutput } from "./commands/CreateTransitGatewayConnectCommand";
import { CreateTransitGatewayConnectPeerCommandInput, CreateTransitGatewayConnectPeerCommandOutput } from "./commands/CreateTransitGatewayConnectPeerCommand";
import { CreateTransitGatewayMulticastDomainCommandInput, CreateTransitGatewayMulticastDomainCommandOutput } from "./commands/CreateTransitGatewayMulticastDomainCommand";
import { CreateTransitGatewayPeeringAttachmentCommandInput, CreateTransitGatewayPeeringAttachmentCommandOutput } from "./commands/CreateTransitGatewayPeeringAttachmentCommand";
import { CreateTransitGatewayPrefixListReferenceCommandInput, CreateTransitGatewayPrefixListReferenceCommandOutput } from "./commands/CreateTransitGatewayPrefixListReferenceCommand";
import { CreateTransitGatewayRouteCommandInput, CreateTransitGatewayRouteCommandOutput } from "./commands/CreateTransitGatewayRouteCommand";
import { CreateTransitGatewayRouteTableCommandInput, CreateTransitGatewayRouteTableCommandOutput } from "./commands/CreateTransitGatewayRouteTableCommand";
import { CreateTransitGatewayVpcAttachmentCommandInput, CreateTransitGatewayVpcAttachmentCommandOutput } from "./commands/CreateTransitGatewayVpcAttachmentCommand";
import { CreateVolumeCommandInput, CreateVolumeCommandOutput } from "./commands/CreateVolumeCommand";
import { CreateVpcCommandInput, CreateVpcCommandOutput } from "./commands/CreateVpcCommand";
import { CreateVpcEndpointCommandInput, CreateVpcEndpointCommandOutput } from "./commands/CreateVpcEndpointCommand";
import { CreateVpcEndpointConnectionNotificationCommandInput, CreateVpcEndpointConnectionNotificationCommandOutput } from "./commands/CreateVpcEndpointConnectionNotificationCommand";
import { CreateVpcEndpointServiceConfigurationCommandInput, CreateVpcEndpointServiceConfigurationCommandOutput } from "./commands/CreateVpcEndpointServiceConfigurationCommand";
import { CreateVpcPeeringConnectionCommandInput, CreateVpcPeeringConnectionCommandOutput } from "./commands/CreateVpcPeeringConnectionCommand";
import { CreateVpnConnectionCommandInput, CreateVpnConnectionCommandOutput } from "./commands/CreateVpnConnectionCommand";
import { CreateVpnConnectionRouteCommandInput, CreateVpnConnectionRouteCommandOutput } from "./commands/CreateVpnConnectionRouteCommand";
import { CreateVpnGatewayCommandInput, CreateVpnGatewayCommandOutput } from "./commands/CreateVpnGatewayCommand";
import { DeleteCarrierGatewayCommandInput, DeleteCarrierGatewayCommandOutput } from "./commands/DeleteCarrierGatewayCommand";
import { DeleteClientVpnEndpointCommandInput, DeleteClientVpnEndpointCommandOutput } from "./commands/DeleteClientVpnEndpointCommand";
import { DeleteClientVpnRouteCommandInput, DeleteClientVpnRouteCommandOutput } from "./commands/DeleteClientVpnRouteCommand";
import { DeleteCustomerGatewayCommandInput, DeleteCustomerGatewayCommandOutput } from "./commands/DeleteCustomerGatewayCommand";
import { DeleteDhcpOptionsCommandInput, DeleteDhcpOptionsCommandOutput } from "./commands/DeleteDhcpOptionsCommand";
import { DeleteEgressOnlyInternetGatewayCommandInput, DeleteEgressOnlyInternetGatewayCommandOutput } from "./commands/DeleteEgressOnlyInternetGatewayCommand";
import { DeleteFleetsCommandInput, DeleteFleetsCommandOutput } from "./commands/DeleteFleetsCommand";
import { DeleteFlowLogsCommandInput, DeleteFlowLogsCommandOutput } from "./commands/DeleteFlowLogsCommand";
import { DeleteFpgaImageCommandInput, DeleteFpgaImageCommandOutput } from "./commands/DeleteFpgaImageCommand";
import { DeleteInstanceEventWindowCommandInput, DeleteInstanceEventWindowCommandOutput } from "./commands/DeleteInstanceEventWindowCommand";
import { DeleteInternetGatewayCommandInput, DeleteInternetGatewayCommandOutput } from "./commands/DeleteInternetGatewayCommand";
import { DeleteIpamCommandInput, DeleteIpamCommandOutput } from "./commands/DeleteIpamCommand";
import { DeleteIpamPoolCommandInput, DeleteIpamPoolCommandOutput } from "./commands/DeleteIpamPoolCommand";
import { DeleteIpamScopeCommandInput, DeleteIpamScopeCommandOutput } from "./commands/DeleteIpamScopeCommand";
import { DeleteKeyPairCommandInput, DeleteKeyPairCommandOutput } from "./commands/DeleteKeyPairCommand";
import { DeleteLaunchTemplateCommandInput, DeleteLaunchTemplateCommandOutput } from "./commands/DeleteLaunchTemplateCommand";
import { DeleteLaunchTemplateVersionsCommandInput, DeleteLaunchTemplateVersionsCommandOutput } from "./commands/DeleteLaunchTemplateVersionsCommand";
import { DeleteLocalGatewayRouteCommandInput, DeleteLocalGatewayRouteCommandOutput } from "./commands/DeleteLocalGatewayRouteCommand";
import { DeleteLocalGatewayRouteTableVpcAssociationCommandInput, DeleteLocalGatewayRouteTableVpcAssociationCommandOutput } from "./commands/DeleteLocalGatewayRouteTableVpcAssociationCommand";
import { DeleteManagedPrefixListCommandInput, DeleteManagedPrefixListCommandOutput } from "./commands/DeleteManagedPrefixListCommand";
import { DeleteNatGatewayCommandInput, DeleteNatGatewayCommandOutput } from "./commands/DeleteNatGatewayCommand";
import { DeleteNetworkAclCommandInput, DeleteNetworkAclCommandOutput } from "./commands/DeleteNetworkAclCommand";
import { DeleteNetworkAclEntryCommandInput, DeleteNetworkAclEntryCommandOutput } from "./commands/DeleteNetworkAclEntryCommand";
import { DeleteNetworkInsightsAccessScopeAnalysisCommandInput, DeleteNetworkInsightsAccessScopeAnalysisCommandOutput } from "./commands/DeleteNetworkInsightsAccessScopeAnalysisCommand";
import { DeleteNetworkInsightsAccessScopeCommandInput, DeleteNetworkInsightsAccessScopeCommandOutput } from "./commands/DeleteNetworkInsightsAccessScopeCommand";
import { DeleteNetworkInsightsAnalysisCommandInput, DeleteNetworkInsightsAnalysisCommandOutput } from "./commands/DeleteNetworkInsightsAnalysisCommand";
import { DeleteNetworkInsightsPathCommandInput, DeleteNetworkInsightsPathCommandOutput } from "./commands/DeleteNetworkInsightsPathCommand";
import { DeleteNetworkInterfaceCommandInput, DeleteNetworkInterfaceCommandOutput } from "./commands/DeleteNetworkInterfaceCommand";
import { DeleteNetworkInterfacePermissionCommandInput, DeleteNetworkInterfacePermissionCommandOutput } from "./commands/DeleteNetworkInterfacePermissionCommand";
import { DeletePlacementGroupCommandInput, DeletePlacementGroupCommandOutput } from "./commands/DeletePlacementGroupCommand";
import { DeletePublicIpv4PoolCommandInput, DeletePublicIpv4PoolCommandOutput } from "./commands/DeletePublicIpv4PoolCommand";
import { DeleteQueuedReservedInstancesCommandInput, DeleteQueuedReservedInstancesCommandOutput } from "./commands/DeleteQueuedReservedInstancesCommand";
import { DeleteRouteCommandInput, DeleteRouteCommandOutput } from "./commands/DeleteRouteCommand";
import { DeleteRouteTableCommandInput, DeleteRouteTableCommandOutput } from "./commands/DeleteRouteTableCommand";
import { DeleteSecurityGroupCommandInput, DeleteSecurityGroupCommandOutput } from "./commands/DeleteSecurityGroupCommand";
import { DeleteSnapshotCommandInput, DeleteSnapshotCommandOutput } from "./commands/DeleteSnapshotCommand";
import { DeleteSpotDatafeedSubscriptionCommandInput, DeleteSpotDatafeedSubscriptionCommandOutput } from "./commands/DeleteSpotDatafeedSubscriptionCommand";
import { DeleteSubnetCidrReservationCommandInput, DeleteSubnetCidrReservationCommandOutput } from "./commands/DeleteSubnetCidrReservationCommand";
import { DeleteSubnetCommandInput, DeleteSubnetCommandOutput } from "./commands/DeleteSubnetCommand";
import { DeleteTagsCommandInput, DeleteTagsCommandOutput } from "./commands/DeleteTagsCommand";
import { DeleteTrafficMirrorFilterCommandInput, DeleteTrafficMirrorFilterCommandOutput } from "./commands/DeleteTrafficMirrorFilterCommand";
import { DeleteTrafficMirrorFilterRuleCommandInput, DeleteTrafficMirrorFilterRuleCommandOutput } from "./commands/DeleteTrafficMirrorFilterRuleCommand";
import { DeleteTrafficMirrorSessionCommandInput, DeleteTrafficMirrorSessionCommandOutput } from "./commands/DeleteTrafficMirrorSessionCommand";
import { DeleteTrafficMirrorTargetCommandInput, DeleteTrafficMirrorTargetCommandOutput } from "./commands/DeleteTrafficMirrorTargetCommand";
import { DeleteTransitGatewayCommandInput, DeleteTransitGatewayCommandOutput } from "./commands/DeleteTransitGatewayCommand";
import { DeleteTransitGatewayConnectCommandInput, DeleteTransitGatewayConnectCommandOutput } from "./commands/DeleteTransitGatewayConnectCommand";
import { DeleteTransitGatewayConnectPeerCommandInput, DeleteTransitGatewayConnectPeerCommandOutput } from "./commands/DeleteTransitGatewayConnectPeerCommand";
import { DeleteTransitGatewayMulticastDomainCommandInput, DeleteTransitGatewayMulticastDomainCommandOutput } from "./commands/DeleteTransitGatewayMulticastDomainCommand";
import { DeleteTransitGatewayPeeringAttachmentCommandInput, DeleteTransitGatewayPeeringAttachmentCommandOutput } from "./commands/DeleteTransitGatewayPeeringAttachmentCommand";
import { DeleteTransitGatewayPrefixListReferenceCommandInput, DeleteTransitGatewayPrefixListReferenceCommandOutput } from "./commands/DeleteTransitGatewayPrefixListReferenceCommand";
import { DeleteTransitGatewayRouteCommandInput, DeleteTransitGatewayRouteCommandOutput } from "./commands/DeleteTransitGatewayRouteCommand";
import { DeleteTransitGatewayRouteTableCommandInput, DeleteTransitGatewayRouteTableCommandOutput } from "./commands/DeleteTransitGatewayRouteTableCommand";
import { DeleteTransitGatewayVpcAttachmentCommandInput, DeleteTransitGatewayVpcAttachmentCommandOutput } from "./commands/DeleteTransitGatewayVpcAttachmentCommand";
import { DeleteVolumeCommandInput, DeleteVolumeCommandOutput } from "./commands/DeleteVolumeCommand";
import { DeleteVpcCommandInput, DeleteVpcCommandOutput } from "./commands/DeleteVpcCommand";
import { DeleteVpcEndpointConnectionNotificationsCommandInput, DeleteVpcEndpointConnectionNotificationsCommandOutput } from "./commands/DeleteVpcEndpointConnectionNotificationsCommand";
import { DeleteVpcEndpointsCommandInput, DeleteVpcEndpointsCommandOutput } from "./commands/DeleteVpcEndpointsCommand";
import { DeleteVpcEndpointServiceConfigurationsCommandInput, DeleteVpcEndpointServiceConfigurationsCommandOutput } from "./commands/DeleteVpcEndpointServiceConfigurationsCommand";
import { DeleteVpcPeeringConnectionCommandInput, DeleteVpcPeeringConnectionCommandOutput } from "./commands/DeleteVpcPeeringConnectionCommand";
import { DeleteVpnConnectionCommandInput, DeleteVpnConnectionCommandOutput } from "./commands/DeleteVpnConnectionCommand";
import { DeleteVpnConnectionRouteCommandInput, DeleteVpnConnectionRouteCommandOutput } from "./commands/DeleteVpnConnectionRouteCommand";
import { DeleteVpnGatewayCommandInput, DeleteVpnGatewayCommandOutput } from "./commands/DeleteVpnGatewayCommand";
import { DeprovisionByoipCidrCommandInput, DeprovisionByoipCidrCommandOutput } from "./commands/DeprovisionByoipCidrCommand";
import { DeprovisionIpamPoolCidrCommandInput, DeprovisionIpamPoolCidrCommandOutput } from "./commands/DeprovisionIpamPoolCidrCommand";
import { DeprovisionPublicIpv4PoolCidrCommandInput, DeprovisionPublicIpv4PoolCidrCommandOutput } from "./commands/DeprovisionPublicIpv4PoolCidrCommand";
import { DeregisterImageCommandInput, DeregisterImageCommandOutput } from "./commands/DeregisterImageCommand";
import { DeregisterInstanceEventNotificationAttributesCommandInput, DeregisterInstanceEventNotificationAttributesCommandOutput } from "./commands/DeregisterInstanceEventNotificationAttributesCommand";
import { DeregisterTransitGatewayMulticastGroupMembersCommandInput, DeregisterTransitGatewayMulticastGroupMembersCommandOutput } from "./commands/DeregisterTransitGatewayMulticastGroupMembersCommand";
import { DeregisterTransitGatewayMulticastGroupSourcesCommandInput, DeregisterTransitGatewayMulticastGroupSourcesCommandOutput } from "./commands/DeregisterTransitGatewayMulticastGroupSourcesCommand";
import { DescribeAccountAttributesCommandInput, DescribeAccountAttributesCommandOutput } from "./commands/DescribeAccountAttributesCommand";
import { DescribeAddressesAttributeCommandInput, DescribeAddressesAttributeCommandOutput } from "./commands/DescribeAddressesAttributeCommand";
import { DescribeAddressesCommandInput, DescribeAddressesCommandOutput } from "./commands/DescribeAddressesCommand";
import { DescribeAggregateIdFormatCommandInput, DescribeAggregateIdFormatCommandOutput } from "./commands/DescribeAggregateIdFormatCommand";
import { DescribeAvailabilityZonesCommandInput, DescribeAvailabilityZonesCommandOutput } from "./commands/DescribeAvailabilityZonesCommand";
import { DescribeBundleTasksCommandInput, DescribeBundleTasksCommandOutput } from "./commands/DescribeBundleTasksCommand";
import { DescribeByoipCidrsCommandInput, DescribeByoipCidrsCommandOutput } from "./commands/DescribeByoipCidrsCommand";
import { DescribeCapacityReservationFleetsCommandInput, DescribeCapacityReservationFleetsCommandOutput } from "./commands/DescribeCapacityReservationFleetsCommand";
import { DescribeCapacityReservationsCommandInput, DescribeCapacityReservationsCommandOutput } from "./commands/DescribeCapacityReservationsCommand";
import { DescribeCarrierGatewaysCommandInput, DescribeCarrierGatewaysCommandOutput } from "./commands/DescribeCarrierGatewaysCommand";
import { DescribeClassicLinkInstancesCommandInput, DescribeClassicLinkInstancesCommandOutput } from "./commands/DescribeClassicLinkInstancesCommand";
import { DescribeClientVpnAuthorizationRulesCommandInput, DescribeClientVpnAuthorizationRulesCommandOutput } from "./commands/DescribeClientVpnAuthorizationRulesCommand";
import { DescribeClientVpnConnectionsCommandInput, DescribeClientVpnConnectionsCommandOutput } from "./commands/DescribeClientVpnConnectionsCommand";
import { DescribeClientVpnEndpointsCommandInput, DescribeClientVpnEndpointsCommandOutput } from "./commands/DescribeClientVpnEndpointsCommand";
import { DescribeClientVpnRoutesCommandInput, DescribeClientVpnRoutesCommandOutput } from "./commands/DescribeClientVpnRoutesCommand";
import { DescribeClientVpnTargetNetworksCommandInput, DescribeClientVpnTargetNetworksCommandOutput } from "./commands/DescribeClientVpnTargetNetworksCommand";
import { DescribeCoipPoolsCommandInput, DescribeCoipPoolsCommandOutput } from "./commands/DescribeCoipPoolsCommand";
import { DescribeConversionTasksCommandInput, DescribeConversionTasksCommandOutput } from "./commands/DescribeConversionTasksCommand";
import { DescribeCustomerGatewaysCommandInput, DescribeCustomerGatewaysCommandOutput } from "./commands/DescribeCustomerGatewaysCommand";
import { DescribeDhcpOptionsCommandInput, DescribeDhcpOptionsCommandOutput } from "./commands/DescribeDhcpOptionsCommand";
import { DescribeEgressOnlyInternetGatewaysCommandInput, DescribeEgressOnlyInternetGatewaysCommandOutput } from "./commands/DescribeEgressOnlyInternetGatewaysCommand";
import { DescribeElasticGpusCommandInput, DescribeElasticGpusCommandOutput } from "./commands/DescribeElasticGpusCommand";
import { DescribeExportImageTasksCommandInput, DescribeExportImageTasksCommandOutput } from "./commands/DescribeExportImageTasksCommand";
import { DescribeExportTasksCommandInput, DescribeExportTasksCommandOutput } from "./commands/DescribeExportTasksCommand";
import { DescribeFastLaunchImagesCommandInput, DescribeFastLaunchImagesCommandOutput } from "./commands/DescribeFastLaunchImagesCommand";
import { DescribeFastSnapshotRestoresCommandInput, DescribeFastSnapshotRestoresCommandOutput } from "./commands/DescribeFastSnapshotRestoresCommand";
import { DescribeFleetHistoryCommandInput, DescribeFleetHistoryCommandOutput } from "./commands/DescribeFleetHistoryCommand";
import { DescribeFleetInstancesCommandInput, DescribeFleetInstancesCommandOutput } from "./commands/DescribeFleetInstancesCommand";
import { DescribeFleetsCommandInput, DescribeFleetsCommandOutput } from "./commands/DescribeFleetsCommand";
import { DescribeFlowLogsCommandInput, DescribeFlowLogsCommandOutput } from "./commands/DescribeFlowLogsCommand";
import { DescribeFpgaImageAttributeCommandInput, DescribeFpgaImageAttributeCommandOutput } from "./commands/DescribeFpgaImageAttributeCommand";
import { DescribeFpgaImagesCommandInput, DescribeFpgaImagesCommandOutput } from "./commands/DescribeFpgaImagesCommand";
import { DescribeHostReservationOfferingsCommandInput, DescribeHostReservationOfferingsCommandOutput } from "./commands/DescribeHostReservationOfferingsCommand";
import { DescribeHostReservationsCommandInput, DescribeHostReservationsCommandOutput } from "./commands/DescribeHostReservationsCommand";
import { DescribeHostsCommandInput, DescribeHostsCommandOutput } from "./commands/DescribeHostsCommand";
import { DescribeIamInstanceProfileAssociationsCommandInput, DescribeIamInstanceProfileAssociationsCommandOutput } from "./commands/DescribeIamInstanceProfileAssociationsCommand";
import { DescribeIdentityIdFormatCommandInput, DescribeIdentityIdFormatCommandOutput } from "./commands/DescribeIdentityIdFormatCommand";
import { DescribeIdFormatCommandInput, DescribeIdFormatCommandOutput } from "./commands/DescribeIdFormatCommand";
import { DescribeImageAttributeCommandInput, DescribeImageAttributeCommandOutput } from "./commands/DescribeImageAttributeCommand";
import { DescribeImagesCommandInput, DescribeImagesCommandOutput } from "./commands/DescribeImagesCommand";
import { DescribeImportImageTasksCommandInput, DescribeImportImageTasksCommandOutput } from "./commands/DescribeImportImageTasksCommand";
import { DescribeImportSnapshotTasksCommandInput, DescribeImportSnapshotTasksCommandOutput } from "./commands/DescribeImportSnapshotTasksCommand";
import { DescribeInstanceAttributeCommandInput, DescribeInstanceAttributeCommandOutput } from "./commands/DescribeInstanceAttributeCommand";
import { DescribeInstanceCreditSpecificationsCommandInput, DescribeInstanceCreditSpecificationsCommandOutput } from "./commands/DescribeInstanceCreditSpecificationsCommand";
import { DescribeInstanceEventNotificationAttributesCommandInput, DescribeInstanceEventNotificationAttributesCommandOutput } from "./commands/DescribeInstanceEventNotificationAttributesCommand";
import { DescribeInstanceEventWindowsCommandInput, DescribeInstanceEventWindowsCommandOutput } from "./commands/DescribeInstanceEventWindowsCommand";
import { DescribeInstancesCommandInput, DescribeInstancesCommandOutput } from "./commands/DescribeInstancesCommand";
import { DescribeInstanceStatusCommandInput, DescribeInstanceStatusCommandOutput } from "./commands/DescribeInstanceStatusCommand";
import { DescribeInstanceTypeOfferingsCommandInput, DescribeInstanceTypeOfferingsCommandOutput } from "./commands/DescribeInstanceTypeOfferingsCommand";
import { DescribeInstanceTypesCommandInput, DescribeInstanceTypesCommandOutput } from "./commands/DescribeInstanceTypesCommand";
import { DescribeInternetGatewaysCommandInput, DescribeInternetGatewaysCommandOutput } from "./commands/DescribeInternetGatewaysCommand";
import { DescribeIpamPoolsCommandInput, DescribeIpamPoolsCommandOutput } from "./commands/DescribeIpamPoolsCommand";
import { DescribeIpamsCommandInput, DescribeIpamsCommandOutput } from "./commands/DescribeIpamsCommand";
import { DescribeIpamScopesCommandInput, DescribeIpamScopesCommandOutput } from "./commands/DescribeIpamScopesCommand";
import { DescribeIpv6PoolsCommandInput, DescribeIpv6PoolsCommandOutput } from "./commands/DescribeIpv6PoolsCommand";
import { DescribeKeyPairsCommandInput, DescribeKeyPairsCommandOutput } from "./commands/DescribeKeyPairsCommand";
import { DescribeLaunchTemplatesCommandInput, DescribeLaunchTemplatesCommandOutput } from "./commands/DescribeLaunchTemplatesCommand";
import { DescribeLaunchTemplateVersionsCommandInput, DescribeLaunchTemplateVersionsCommandOutput } from "./commands/DescribeLaunchTemplateVersionsCommand";
import { DescribeLocalGatewayRouteTablesCommandInput, DescribeLocalGatewayRouteTablesCommandOutput } from "./commands/DescribeLocalGatewayRouteTablesCommand";
import { DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsCommandInput, DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsCommandOutput } from "./commands/DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsCommand";
import { DescribeLocalGatewayRouteTableVpcAssociationsCommandInput, DescribeLocalGatewayRouteTableVpcAssociationsCommandOutput } from "./commands/DescribeLocalGatewayRouteTableVpcAssociationsCommand";
import { DescribeLocalGatewaysCommandInput, DescribeLocalGatewaysCommandOutput } from "./commands/DescribeLocalGatewaysCommand";
import { DescribeLocalGatewayVirtualInterfaceGroupsCommandInput, DescribeLocalGatewayVirtualInterfaceGroupsCommandOutput } from "./commands/DescribeLocalGatewayVirtualInterfaceGroupsCommand";
import { DescribeLocalGatewayVirtualInterfacesCommandInput, DescribeLocalGatewayVirtualInterfacesCommandOutput } from "./commands/DescribeLocalGatewayVirtualInterfacesCommand";
import { DescribeManagedPrefixListsCommandInput, DescribeManagedPrefixListsCommandOutput } from "./commands/DescribeManagedPrefixListsCommand";
import { DescribeMovingAddressesCommandInput, DescribeMovingAddressesCommandOutput } from "./commands/DescribeMovingAddressesCommand";
import { DescribeNatGatewaysCommandInput, DescribeNatGatewaysCommandOutput } from "./commands/DescribeNatGatewaysCommand";
import { DescribeNetworkAclsCommandInput, DescribeNetworkAclsCommandOutput } from "./commands/DescribeNetworkAclsCommand";
import { DescribeNetworkInsightsAccessScopeAnalysesCommandInput, DescribeNetworkInsightsAccessScopeAnalysesCommandOutput } from "./commands/DescribeNetworkInsightsAccessScopeAnalysesCommand";
import { DescribeNetworkInsightsAccessScopesCommandInput, DescribeNetworkInsightsAccessScopesCommandOutput } from "./commands/DescribeNetworkInsightsAccessScopesCommand";
import { DescribeNetworkInsightsAnalysesCommandInput, DescribeNetworkInsightsAnalysesCommandOutput } from "./commands/DescribeNetworkInsightsAnalysesCommand";
import { DescribeNetworkInsightsPathsCommandInput, DescribeNetworkInsightsPathsCommandOutput } from "./commands/DescribeNetworkInsightsPathsCommand";
import { DescribeNetworkInterfaceAttributeCommandInput, DescribeNetworkInterfaceAttributeCommandOutput } from "./commands/DescribeNetworkInterfaceAttributeCommand";
import { DescribeNetworkInterfacePermissionsCommandInput, DescribeNetworkInterfacePermissionsCommandOutput } from "./commands/DescribeNetworkInterfacePermissionsCommand";
import { DescribeNetworkInterfacesCommandInput, DescribeNetworkInterfacesCommandOutput } from "./commands/DescribeNetworkInterfacesCommand";
import { DescribePlacementGroupsCommandInput, DescribePlacementGroupsCommandOutput } from "./commands/DescribePlacementGroupsCommand";
import { DescribePrefixListsCommandInput, DescribePrefixListsCommandOutput } from "./commands/DescribePrefixListsCommand";
import { DescribePrincipalIdFormatCommandInput, DescribePrincipalIdFormatCommandOutput } from "./commands/DescribePrincipalIdFormatCommand";
import { DescribePublicIpv4PoolsCommandInput, DescribePublicIpv4PoolsCommandOutput } from "./commands/DescribePublicIpv4PoolsCommand";
import { DescribeRegionsCommandInput, DescribeRegionsCommandOutput } from "./commands/DescribeRegionsCommand";
import { DescribeReplaceRootVolumeTasksCommandInput, DescribeReplaceRootVolumeTasksCommandOutput } from "./commands/DescribeReplaceRootVolumeTasksCommand";
import { DescribeReservedInstancesCommandInput, DescribeReservedInstancesCommandOutput } from "./commands/DescribeReservedInstancesCommand";
import { DescribeReservedInstancesListingsCommandInput, DescribeReservedInstancesListingsCommandOutput } from "./commands/DescribeReservedInstancesListingsCommand";
import { DescribeReservedInstancesModificationsCommandInput, DescribeReservedInstancesModificationsCommandOutput } from "./commands/DescribeReservedInstancesModificationsCommand";
import { DescribeReservedInstancesOfferingsCommandInput, DescribeReservedInstancesOfferingsCommandOutput } from "./commands/DescribeReservedInstancesOfferingsCommand";
import { DescribeRouteTablesCommandInput, DescribeRouteTablesCommandOutput } from "./commands/DescribeRouteTablesCommand";
import { DescribeScheduledInstanceAvailabilityCommandInput, DescribeScheduledInstanceAvailabilityCommandOutput } from "./commands/DescribeScheduledInstanceAvailabilityCommand";
import { DescribeScheduledInstancesCommandInput, DescribeScheduledInstancesCommandOutput } from "./commands/DescribeScheduledInstancesCommand";
import { DescribeSecurityGroupReferencesCommandInput, DescribeSecurityGroupReferencesCommandOutput } from "./commands/DescribeSecurityGroupReferencesCommand";
import { DescribeSecurityGroupRulesCommandInput, DescribeSecurityGroupRulesCommandOutput } from "./commands/DescribeSecurityGroupRulesCommand";
import { DescribeSecurityGroupsCommandInput, DescribeSecurityGroupsCommandOutput } from "./commands/DescribeSecurityGroupsCommand";
import { DescribeSnapshotAttributeCommandInput, DescribeSnapshotAttributeCommandOutput } from "./commands/DescribeSnapshotAttributeCommand";
import { DescribeSnapshotsCommandInput, DescribeSnapshotsCommandOutput } from "./commands/DescribeSnapshotsCommand";
import { DescribeSnapshotTierStatusCommandInput, DescribeSnapshotTierStatusCommandOutput } from "./commands/DescribeSnapshotTierStatusCommand";
import { DescribeSpotDatafeedSubscriptionCommandInput, DescribeSpotDatafeedSubscriptionCommandOutput } from "./commands/DescribeSpotDatafeedSubscriptionCommand";
import { DescribeSpotFleetInstancesCommandInput, DescribeSpotFleetInstancesCommandOutput } from "./commands/DescribeSpotFleetInstancesCommand";
import { DescribeSpotFleetRequestHistoryCommandInput, DescribeSpotFleetRequestHistoryCommandOutput } from "./commands/DescribeSpotFleetRequestHistoryCommand";
import { DescribeSpotFleetRequestsCommandInput, DescribeSpotFleetRequestsCommandOutput } from "./commands/DescribeSpotFleetRequestsCommand";
import { DescribeSpotInstanceRequestsCommandInput, DescribeSpotInstanceRequestsCommandOutput } from "./commands/DescribeSpotInstanceRequestsCommand";
import { DescribeSpotPriceHistoryCommandInput, DescribeSpotPriceHistoryCommandOutput } from "./commands/DescribeSpotPriceHistoryCommand";
import { DescribeStaleSecurityGroupsCommandInput, DescribeStaleSecurityGroupsCommandOutput } from "./commands/DescribeStaleSecurityGroupsCommand";
import { DescribeStoreImageTasksCommandInput, DescribeStoreImageTasksCommandOutput } from "./commands/DescribeStoreImageTasksCommand";
import { DescribeSubnetsCommandInput, DescribeSubnetsCommandOutput } from "./commands/DescribeSubnetsCommand";
import { DescribeTagsCommandInput, DescribeTagsCommandOutput } from "./commands/DescribeTagsCommand";
import { DescribeTrafficMirrorFiltersCommandInput, DescribeTrafficMirrorFiltersCommandOutput } from "./commands/DescribeTrafficMirrorFiltersCommand";
import { DescribeTrafficMirrorSessionsCommandInput, DescribeTrafficMirrorSessionsCommandOutput } from "./commands/DescribeTrafficMirrorSessionsCommand";
import { DescribeTrafficMirrorTargetsCommandInput, DescribeTrafficMirrorTargetsCommandOutput } from "./commands/DescribeTrafficMirrorTargetsCommand";
import { DescribeTransitGatewayAttachmentsCommandInput, DescribeTransitGatewayAttachmentsCommandOutput } from "./commands/DescribeTransitGatewayAttachmentsCommand";
import { DescribeTransitGatewayConnectPeersCommandInput, DescribeTransitGatewayConnectPeersCommandOutput } from "./commands/DescribeTransitGatewayConnectPeersCommand";
import { DescribeTransitGatewayConnectsCommandInput, DescribeTransitGatewayConnectsCommandOutput } from "./commands/DescribeTransitGatewayConnectsCommand";
import { DescribeTransitGatewayMulticastDomainsCommandInput, DescribeTransitGatewayMulticastDomainsCommandOutput } from "./commands/DescribeTransitGatewayMulticastDomainsCommand";
import { DescribeTransitGatewayPeeringAttachmentsCommandInput, DescribeTransitGatewayPeeringAttachmentsCommandOutput } from "./commands/DescribeTransitGatewayPeeringAttachmentsCommand";
import { DescribeTransitGatewayRouteTablesCommandInput, DescribeTransitGatewayRouteTablesCommandOutput } from "./commands/DescribeTransitGatewayRouteTablesCommand";
import { DescribeTransitGatewaysCommandInput, DescribeTransitGatewaysCommandOutput } from "./commands/DescribeTransitGatewaysCommand";
import { DescribeTransitGatewayVpcAttachmentsCommandInput, DescribeTransitGatewayVpcAttachmentsCommandOutput } from "./commands/DescribeTransitGatewayVpcAttachmentsCommand";
import { DescribeTrunkInterfaceAssociationsCommandInput, DescribeTrunkInterfaceAssociationsCommandOutput } from "./commands/DescribeTrunkInterfaceAssociationsCommand";
import { DescribeVolumeAttributeCommandInput, DescribeVolumeAttributeCommandOutput } from "./commands/DescribeVolumeAttributeCommand";
import { DescribeVolumesCommandInput, DescribeVolumesCommandOutput } from "./commands/DescribeVolumesCommand";
import { DescribeVolumesModificationsCommandInput, DescribeVolumesModificationsCommandOutput } from "./commands/DescribeVolumesModificationsCommand";
import { DescribeVolumeStatusCommandInput, DescribeVolumeStatusCommandOutput } from "./commands/DescribeVolumeStatusCommand";
import { DescribeVpcAttributeCommandInput, DescribeVpcAttributeCommandOutput } from "./commands/DescribeVpcAttributeCommand";
import { DescribeVpcClassicLinkCommandInput, DescribeVpcClassicLinkCommandOutput } from "./commands/DescribeVpcClassicLinkCommand";
import { DescribeVpcClassicLinkDnsSupportCommandInput, DescribeVpcClassicLinkDnsSupportCommandOutput } from "./commands/DescribeVpcClassicLinkDnsSupportCommand";
import { DescribeVpcEndpointConnectionNotificationsCommandInput, DescribeVpcEndpointConnectionNotificationsCommandOutput } from "./commands/DescribeVpcEndpointConnectionNotificationsCommand";
import { DescribeVpcEndpointConnectionsCommandInput, DescribeVpcEndpointConnectionsCommandOutput } from "./commands/DescribeVpcEndpointConnectionsCommand";
import { DescribeVpcEndpointsCommandInput, DescribeVpcEndpointsCommandOutput } from "./commands/DescribeVpcEndpointsCommand";
import { DescribeVpcEndpointServiceConfigurationsCommandInput, DescribeVpcEndpointServiceConfigurationsCommandOutput } from "./commands/DescribeVpcEndpointServiceConfigurationsCommand";
import { DescribeVpcEndpointServicePermissionsCommandInput, DescribeVpcEndpointServicePermissionsCommandOutput } from "./commands/DescribeVpcEndpointServicePermissionsCommand";
import { DescribeVpcEndpointServicesCommandInput, DescribeVpcEndpointServicesCommandOutput } from "./commands/DescribeVpcEndpointServicesCommand";
import { DescribeVpcPeeringConnectionsCommandInput, DescribeVpcPeeringConnectionsCommandOutput } from "./commands/DescribeVpcPeeringConnectionsCommand";
import { DescribeVpcsCommandInput, DescribeVpcsCommandOutput } from "./commands/DescribeVpcsCommand";
import { DescribeVpnConnectionsCommandInput, DescribeVpnConnectionsCommandOutput } from "./commands/DescribeVpnConnectionsCommand";
import { DescribeVpnGatewaysCommandInput, DescribeVpnGatewaysCommandOutput } from "./commands/DescribeVpnGatewaysCommand";
import { DetachClassicLinkVpcCommandInput, DetachClassicLinkVpcCommandOutput } from "./commands/DetachClassicLinkVpcCommand";
import { DetachInternetGatewayCommandInput, DetachInternetGatewayCommandOutput } from "./commands/DetachInternetGatewayCommand";
import { DetachNetworkInterfaceCommandInput, DetachNetworkInterfaceCommandOutput } from "./commands/DetachNetworkInterfaceCommand";
import { DetachVolumeCommandInput, DetachVolumeCommandOutput } from "./commands/DetachVolumeCommand";
import { DetachVpnGatewayCommandInput, DetachVpnGatewayCommandOutput } from "./commands/DetachVpnGatewayCommand";
import { DisableEbsEncryptionByDefaultCommandInput, DisableEbsEncryptionByDefaultCommandOutput } from "./commands/DisableEbsEncryptionByDefaultCommand";
import { DisableFastLaunchCommandInput, DisableFastLaunchCommandOutput } from "./commands/DisableFastLaunchCommand";
import { DisableFastSnapshotRestoresCommandInput, DisableFastSnapshotRestoresCommandOutput } from "./commands/DisableFastSnapshotRestoresCommand";
import { DisableImageDeprecationCommandInput, DisableImageDeprecationCommandOutput } from "./commands/DisableImageDeprecationCommand";
import { DisableIpamOrganizationAdminAccountCommandInput, DisableIpamOrganizationAdminAccountCommandOutput } from "./commands/DisableIpamOrganizationAdminAccountCommand";
import { DisableSerialConsoleAccessCommandInput, DisableSerialConsoleAccessCommandOutput } from "./commands/DisableSerialConsoleAccessCommand";
import { DisableTransitGatewayRouteTablePropagationCommandInput, DisableTransitGatewayRouteTablePropagationCommandOutput } from "./commands/DisableTransitGatewayRouteTablePropagationCommand";
import { DisableVgwRoutePropagationCommandInput, DisableVgwRoutePropagationCommandOutput } from "./commands/DisableVgwRoutePropagationCommand";
import { DisableVpcClassicLinkCommandInput, DisableVpcClassicLinkCommandOutput } from "./commands/DisableVpcClassicLinkCommand";
import { DisableVpcClassicLinkDnsSupportCommandInput, DisableVpcClassicLinkDnsSupportCommandOutput } from "./commands/DisableVpcClassicLinkDnsSupportCommand";
import { DisassociateAddressCommandInput, DisassociateAddressCommandOutput } from "./commands/DisassociateAddressCommand";
import { DisassociateClientVpnTargetNetworkCommandInput, DisassociateClientVpnTargetNetworkCommandOutput } from "./commands/DisassociateClientVpnTargetNetworkCommand";
import { DisassociateEnclaveCertificateIamRoleCommandInput, DisassociateEnclaveCertificateIamRoleCommandOutput } from "./commands/DisassociateEnclaveCertificateIamRoleCommand";
import { DisassociateIamInstanceProfileCommandInput, DisassociateIamInstanceProfileCommandOutput } from "./commands/DisassociateIamInstanceProfileCommand";
import { DisassociateInstanceEventWindowCommandInput, DisassociateInstanceEventWindowCommandOutput } from "./commands/DisassociateInstanceEventWindowCommand";
import { DisassociateRouteTableCommandInput, DisassociateRouteTableCommandOutput } from "./commands/DisassociateRouteTableCommand";
import { DisassociateSubnetCidrBlockCommandInput, DisassociateSubnetCidrBlockCommandOutput } from "./commands/DisassociateSubnetCidrBlockCommand";
import { DisassociateTransitGatewayMulticastDomainCommandInput, DisassociateTransitGatewayMulticastDomainCommandOutput } from "./commands/DisassociateTransitGatewayMulticastDomainCommand";
import { DisassociateTransitGatewayRouteTableCommandInput, DisassociateTransitGatewayRouteTableCommandOutput } from "./commands/DisassociateTransitGatewayRouteTableCommand";
import { DisassociateTrunkInterfaceCommandInput, DisassociateTrunkInterfaceCommandOutput } from "./commands/DisassociateTrunkInterfaceCommand";
import { DisassociateVpcCidrBlockCommandInput, DisassociateVpcCidrBlockCommandOutput } from "./commands/DisassociateVpcCidrBlockCommand";
import { EnableEbsEncryptionByDefaultCommandInput, EnableEbsEncryptionByDefaultCommandOutput } from "./commands/EnableEbsEncryptionByDefaultCommand";
import { EnableFastLaunchCommandInput, EnableFastLaunchCommandOutput } from "./commands/EnableFastLaunchCommand";
import { EnableFastSnapshotRestoresCommandInput, EnableFastSnapshotRestoresCommandOutput } from "./commands/EnableFastSnapshotRestoresCommand";
import { EnableImageDeprecationCommandInput, EnableImageDeprecationCommandOutput } from "./commands/EnableImageDeprecationCommand";
import { EnableIpamOrganizationAdminAccountCommandInput, EnableIpamOrganizationAdminAccountCommandOutput } from "./commands/EnableIpamOrganizationAdminAccountCommand";
import { EnableSerialConsoleAccessCommandInput, EnableSerialConsoleAccessCommandOutput } from "./commands/EnableSerialConsoleAccessCommand";
import { EnableTransitGatewayRouteTablePropagationCommandInput, EnableTransitGatewayRouteTablePropagationCommandOutput } from "./commands/EnableTransitGatewayRouteTablePropagationCommand";
import { EnableVgwRoutePropagationCommandInput, EnableVgwRoutePropagationCommandOutput } from "./commands/EnableVgwRoutePropagationCommand";
import { EnableVolumeIOCommandInput, EnableVolumeIOCommandOutput } from "./commands/EnableVolumeIOCommand";
import { EnableVpcClassicLinkCommandInput, EnableVpcClassicLinkCommandOutput } from "./commands/EnableVpcClassicLinkCommand";
import { EnableVpcClassicLinkDnsSupportCommandInput, EnableVpcClassicLinkDnsSupportCommandOutput } from "./commands/EnableVpcClassicLinkDnsSupportCommand";
import { ExportClientVpnClientCertificateRevocationListCommandInput, ExportClientVpnClientCertificateRevocationListCommandOutput } from "./commands/ExportClientVpnClientCertificateRevocationListCommand";
import { ExportClientVpnClientConfigurationCommandInput, ExportClientVpnClientConfigurationCommandOutput } from "./commands/ExportClientVpnClientConfigurationCommand";
import { ExportImageCommandInput, ExportImageCommandOutput } from "./commands/ExportImageCommand";
import { ExportTransitGatewayRoutesCommandInput, ExportTransitGatewayRoutesCommandOutput } from "./commands/ExportTransitGatewayRoutesCommand";
import { GetAssociatedEnclaveCertificateIamRolesCommandInput, GetAssociatedEnclaveCertificateIamRolesCommandOutput } from "./commands/GetAssociatedEnclaveCertificateIamRolesCommand";
import { GetAssociatedIpv6PoolCidrsCommandInput, GetAssociatedIpv6PoolCidrsCommandOutput } from "./commands/GetAssociatedIpv6PoolCidrsCommand";
import { GetCapacityReservationUsageCommandInput, GetCapacityReservationUsageCommandOutput } from "./commands/GetCapacityReservationUsageCommand";
import { GetCoipPoolUsageCommandInput, GetCoipPoolUsageCommandOutput } from "./commands/GetCoipPoolUsageCommand";
import { GetConsoleOutputCommandInput, GetConsoleOutputCommandOutput } from "./commands/GetConsoleOutputCommand";
import { GetConsoleScreenshotCommandInput, GetConsoleScreenshotCommandOutput } from "./commands/GetConsoleScreenshotCommand";
import { GetDefaultCreditSpecificationCommandInput, GetDefaultCreditSpecificationCommandOutput } from "./commands/GetDefaultCreditSpecificationCommand";
import { GetEbsDefaultKmsKeyIdCommandInput, GetEbsDefaultKmsKeyIdCommandOutput } from "./commands/GetEbsDefaultKmsKeyIdCommand";
import { GetEbsEncryptionByDefaultCommandInput, GetEbsEncryptionByDefaultCommandOutput } from "./commands/GetEbsEncryptionByDefaultCommand";
import { GetFlowLogsIntegrationTemplateCommandInput, GetFlowLogsIntegrationTemplateCommandOutput } from "./commands/GetFlowLogsIntegrationTemplateCommand";
import { GetGroupsForCapacityReservationCommandInput, GetGroupsForCapacityReservationCommandOutput } from "./commands/GetGroupsForCapacityReservationCommand";
import { GetHostReservationPurchasePreviewCommandInput, GetHostReservationPurchasePreviewCommandOutput } from "./commands/GetHostReservationPurchasePreviewCommand";
import { GetInstanceTypesFromInstanceRequirementsCommandInput, GetInstanceTypesFromInstanceRequirementsCommandOutput } from "./commands/GetInstanceTypesFromInstanceRequirementsCommand";
import { GetInstanceUefiDataCommandInput, GetInstanceUefiDataCommandOutput } from "./commands/GetInstanceUefiDataCommand";
import { GetIpamAddressHistoryCommandInput, GetIpamAddressHistoryCommandOutput } from "./commands/GetIpamAddressHistoryCommand";
import { GetIpamPoolAllocationsCommandInput, GetIpamPoolAllocationsCommandOutput } from "./commands/GetIpamPoolAllocationsCommand";
import { GetIpamPoolCidrsCommandInput, GetIpamPoolCidrsCommandOutput } from "./commands/GetIpamPoolCidrsCommand";
import { GetIpamResourceCidrsCommandInput, GetIpamResourceCidrsCommandOutput } from "./commands/GetIpamResourceCidrsCommand";
import { GetLaunchTemplateDataCommandInput, GetLaunchTemplateDataCommandOutput } from "./commands/GetLaunchTemplateDataCommand";
import { GetManagedPrefixListAssociationsCommandInput, GetManagedPrefixListAssociationsCommandOutput } from "./commands/GetManagedPrefixListAssociationsCommand";
import { GetManagedPrefixListEntriesCommandInput, GetManagedPrefixListEntriesCommandOutput } from "./commands/GetManagedPrefixListEntriesCommand";
import { GetNetworkInsightsAccessScopeAnalysisFindingsCommandInput, GetNetworkInsightsAccessScopeAnalysisFindingsCommandOutput } from "./commands/GetNetworkInsightsAccessScopeAnalysisFindingsCommand";
import { GetNetworkInsightsAccessScopeContentCommandInput, GetNetworkInsightsAccessScopeContentCommandOutput } from "./commands/GetNetworkInsightsAccessScopeContentCommand";
import { GetPasswordDataCommandInput, GetPasswordDataCommandOutput } from "./commands/GetPasswordDataCommand";
import { GetReservedInstancesExchangeQuoteCommandInput, GetReservedInstancesExchangeQuoteCommandOutput } from "./commands/GetReservedInstancesExchangeQuoteCommand";
import { GetSerialConsoleAccessStatusCommandInput, GetSerialConsoleAccessStatusCommandOutput } from "./commands/GetSerialConsoleAccessStatusCommand";
import { GetSpotPlacementScoresCommandInput, GetSpotPlacementScoresCommandOutput } from "./commands/GetSpotPlacementScoresCommand";
import { GetSubnetCidrReservationsCommandInput, GetSubnetCidrReservationsCommandOutput } from "./commands/GetSubnetCidrReservationsCommand";
import { GetTransitGatewayAttachmentPropagationsCommandInput, GetTransitGatewayAttachmentPropagationsCommandOutput } from "./commands/GetTransitGatewayAttachmentPropagationsCommand";
import { GetTransitGatewayMulticastDomainAssociationsCommandInput, GetTransitGatewayMulticastDomainAssociationsCommandOutput } from "./commands/GetTransitGatewayMulticastDomainAssociationsCommand";
import { GetTransitGatewayPrefixListReferencesCommandInput, GetTransitGatewayPrefixListReferencesCommandOutput } from "./commands/GetTransitGatewayPrefixListReferencesCommand";
import { GetTransitGatewayRouteTableAssociationsCommandInput, GetTransitGatewayRouteTableAssociationsCommandOutput } from "./commands/GetTransitGatewayRouteTableAssociationsCommand";
import { GetTransitGatewayRouteTablePropagationsCommandInput, GetTransitGatewayRouteTablePropagationsCommandOutput } from "./commands/GetTransitGatewayRouteTablePropagationsCommand";
import { GetVpnConnectionDeviceSampleConfigurationCommandInput, GetVpnConnectionDeviceSampleConfigurationCommandOutput } from "./commands/GetVpnConnectionDeviceSampleConfigurationCommand";
import { GetVpnConnectionDeviceTypesCommandInput, GetVpnConnectionDeviceTypesCommandOutput } from "./commands/GetVpnConnectionDeviceTypesCommand";
import { ImportClientVpnClientCertificateRevocationListCommandInput, ImportClientVpnClientCertificateRevocationListCommandOutput } from "./commands/ImportClientVpnClientCertificateRevocationListCommand";
import { ImportImageCommandInput, ImportImageCommandOutput } from "./commands/ImportImageCommand";
import { ImportInstanceCommandInput, ImportInstanceCommandOutput } from "./commands/ImportInstanceCommand";
import { ImportKeyPairCommandInput, ImportKeyPairCommandOutput } from "./commands/ImportKeyPairCommand";
import { ImportSnapshotCommandInput, ImportSnapshotCommandOutput } from "./commands/ImportSnapshotCommand";
import { ImportVolumeCommandInput, ImportVolumeCommandOutput } from "./commands/ImportVolumeCommand";
import { ListImagesInRecycleBinCommandInput, ListImagesInRecycleBinCommandOutput } from "./commands/ListImagesInRecycleBinCommand";
import { ListSnapshotsInRecycleBinCommandInput, ListSnapshotsInRecycleBinCommandOutput } from "./commands/ListSnapshotsInRecycleBinCommand";
import { ModifyAddressAttributeCommandInput, ModifyAddressAttributeCommandOutput } from "./commands/ModifyAddressAttributeCommand";
import { ModifyAvailabilityZoneGroupCommandInput, ModifyAvailabilityZoneGroupCommandOutput } from "./commands/ModifyAvailabilityZoneGroupCommand";
import { ModifyCapacityReservationCommandInput, ModifyCapacityReservationCommandOutput } from "./commands/ModifyCapacityReservationCommand";
import { ModifyCapacityReservationFleetCommandInput, ModifyCapacityReservationFleetCommandOutput } from "./commands/ModifyCapacityReservationFleetCommand";
import { ModifyClientVpnEndpointCommandInput, ModifyClientVpnEndpointCommandOutput } from "./commands/ModifyClientVpnEndpointCommand";
import { ModifyDefaultCreditSpecificationCommandInput, ModifyDefaultCreditSpecificationCommandOutput } from "./commands/ModifyDefaultCreditSpecificationCommand";
import { ModifyEbsDefaultKmsKeyIdCommandInput, ModifyEbsDefaultKmsKeyIdCommandOutput } from "./commands/ModifyEbsDefaultKmsKeyIdCommand";
import { ModifyFleetCommandInput, ModifyFleetCommandOutput } from "./commands/ModifyFleetCommand";
import { ModifyFpgaImageAttributeCommandInput, ModifyFpgaImageAttributeCommandOutput } from "./commands/ModifyFpgaImageAttributeCommand";
import { ModifyHostsCommandInput, ModifyHostsCommandOutput } from "./commands/ModifyHostsCommand";
import { ModifyIdentityIdFormatCommandInput, ModifyIdentityIdFormatCommandOutput } from "./commands/ModifyIdentityIdFormatCommand";
import { ModifyIdFormatCommandInput, ModifyIdFormatCommandOutput } from "./commands/ModifyIdFormatCommand";
import { ModifyImageAttributeCommandInput, ModifyImageAttributeCommandOutput } from "./commands/ModifyImageAttributeCommand";
import { ModifyInstanceAttributeCommandInput, ModifyInstanceAttributeCommandOutput } from "./commands/ModifyInstanceAttributeCommand";
import { ModifyInstanceCapacityReservationAttributesCommandInput, ModifyInstanceCapacityReservationAttributesCommandOutput } from "./commands/ModifyInstanceCapacityReservationAttributesCommand";
import { ModifyInstanceCreditSpecificationCommandInput, ModifyInstanceCreditSpecificationCommandOutput } from "./commands/ModifyInstanceCreditSpecificationCommand";
import { ModifyInstanceEventStartTimeCommandInput, ModifyInstanceEventStartTimeCommandOutput } from "./commands/ModifyInstanceEventStartTimeCommand";
import { ModifyInstanceEventWindowCommandInput, ModifyInstanceEventWindowCommandOutput } from "./commands/ModifyInstanceEventWindowCommand";
import { ModifyInstanceMaintenanceOptionsCommandInput, ModifyInstanceMaintenanceOptionsCommandOutput } from "./commands/ModifyInstanceMaintenanceOptionsCommand";
import { ModifyInstanceMetadataOptionsCommandInput, ModifyInstanceMetadataOptionsCommandOutput } from "./commands/ModifyInstanceMetadataOptionsCommand";
import { ModifyInstancePlacementCommandInput, ModifyInstancePlacementCommandOutput } from "./commands/ModifyInstancePlacementCommand";
import { ModifyIpamCommandInput, ModifyIpamCommandOutput } from "./commands/ModifyIpamCommand";
import { ModifyIpamPoolCommandInput, ModifyIpamPoolCommandOutput } from "./commands/ModifyIpamPoolCommand";
import { ModifyIpamResourceCidrCommandInput, ModifyIpamResourceCidrCommandOutput } from "./commands/ModifyIpamResourceCidrCommand";
import { ModifyIpamScopeCommandInput, ModifyIpamScopeCommandOutput } from "./commands/ModifyIpamScopeCommand";
import { ModifyLaunchTemplateCommandInput, ModifyLaunchTemplateCommandOutput } from "./commands/ModifyLaunchTemplateCommand";
import { ModifyManagedPrefixListCommandInput, ModifyManagedPrefixListCommandOutput } from "./commands/ModifyManagedPrefixListCommand";
import { ModifyNetworkInterfaceAttributeCommandInput, ModifyNetworkInterfaceAttributeCommandOutput } from "./commands/ModifyNetworkInterfaceAttributeCommand";
import { ModifyPrivateDnsNameOptionsCommandInput, ModifyPrivateDnsNameOptionsCommandOutput } from "./commands/ModifyPrivateDnsNameOptionsCommand";
import { ModifyReservedInstancesCommandInput, ModifyReservedInstancesCommandOutput } from "./commands/ModifyReservedInstancesCommand";
import { ModifySecurityGroupRulesCommandInput, ModifySecurityGroupRulesCommandOutput } from "./commands/ModifySecurityGroupRulesCommand";
import { ModifySnapshotAttributeCommandInput, ModifySnapshotAttributeCommandOutput } from "./commands/ModifySnapshotAttributeCommand";
import { ModifySnapshotTierCommandInput, ModifySnapshotTierCommandOutput } from "./commands/ModifySnapshotTierCommand";
import { ModifySpotFleetRequestCommandInput, ModifySpotFleetRequestCommandOutput } from "./commands/ModifySpotFleetRequestCommand";
import { ModifySubnetAttributeCommandInput, ModifySubnetAttributeCommandOutput } from "./commands/ModifySubnetAttributeCommand";
import { ModifyTrafficMirrorFilterNetworkServicesCommandInput, ModifyTrafficMirrorFilterNetworkServicesCommandOutput } from "./commands/ModifyTrafficMirrorFilterNetworkServicesCommand";
import { ModifyTrafficMirrorFilterRuleCommandInput, ModifyTrafficMirrorFilterRuleCommandOutput } from "./commands/ModifyTrafficMirrorFilterRuleCommand";
import { ModifyTrafficMirrorSessionCommandInput, ModifyTrafficMirrorSessionCommandOutput } from "./commands/ModifyTrafficMirrorSessionCommand";
import { ModifyTransitGatewayCommandInput, ModifyTransitGatewayCommandOutput } from "./commands/ModifyTransitGatewayCommand";
import { ModifyTransitGatewayPrefixListReferenceCommandInput, ModifyTransitGatewayPrefixListReferenceCommandOutput } from "./commands/ModifyTransitGatewayPrefixListReferenceCommand";
import { ModifyTransitGatewayVpcAttachmentCommandInput, ModifyTransitGatewayVpcAttachmentCommandOutput } from "./commands/ModifyTransitGatewayVpcAttachmentCommand";
import { ModifyVolumeAttributeCommandInput, ModifyVolumeAttributeCommandOutput } from "./commands/ModifyVolumeAttributeCommand";
import { ModifyVolumeCommandInput, ModifyVolumeCommandOutput } from "./commands/ModifyVolumeCommand";
import { ModifyVpcAttributeCommandInput, ModifyVpcAttributeCommandOutput } from "./commands/ModifyVpcAttributeCommand";
import { ModifyVpcEndpointCommandInput, ModifyVpcEndpointCommandOutput } from "./commands/ModifyVpcEndpointCommand";
import { ModifyVpcEndpointConnectionNotificationCommandInput, ModifyVpcEndpointConnectionNotificationCommandOutput } from "./commands/ModifyVpcEndpointConnectionNotificationCommand";
import { ModifyVpcEndpointServiceConfigurationCommandInput, ModifyVpcEndpointServiceConfigurationCommandOutput } from "./commands/ModifyVpcEndpointServiceConfigurationCommand";
import { ModifyVpcEndpointServicePayerResponsibilityCommandInput, ModifyVpcEndpointServicePayerResponsibilityCommandOutput } from "./commands/ModifyVpcEndpointServicePayerResponsibilityCommand";
import { ModifyVpcEndpointServicePermissionsCommandInput, ModifyVpcEndpointServicePermissionsCommandOutput } from "./commands/ModifyVpcEndpointServicePermissionsCommand";
import { ModifyVpcPeeringConnectionOptionsCommandInput, ModifyVpcPeeringConnectionOptionsCommandOutput } from "./commands/ModifyVpcPeeringConnectionOptionsCommand";
import { ModifyVpcTenancyCommandInput, ModifyVpcTenancyCommandOutput } from "./commands/ModifyVpcTenancyCommand";
import { ModifyVpnConnectionCommandInput, ModifyVpnConnectionCommandOutput } from "./commands/ModifyVpnConnectionCommand";
import { ModifyVpnConnectionOptionsCommandInput, ModifyVpnConnectionOptionsCommandOutput } from "./commands/ModifyVpnConnectionOptionsCommand";
import { ModifyVpnTunnelCertificateCommandInput, ModifyVpnTunnelCertificateCommandOutput } from "./commands/ModifyVpnTunnelCertificateCommand";
import { ModifyVpnTunnelOptionsCommandInput, ModifyVpnTunnelOptionsCommandOutput } from "./commands/ModifyVpnTunnelOptionsCommand";
import { MonitorInstancesCommandInput, MonitorInstancesCommandOutput } from "./commands/MonitorInstancesCommand";
import { MoveAddressToVpcCommandInput, MoveAddressToVpcCommandOutput } from "./commands/MoveAddressToVpcCommand";
import { MoveByoipCidrToIpamCommandInput, MoveByoipCidrToIpamCommandOutput } from "./commands/MoveByoipCidrToIpamCommand";
import { ProvisionByoipCidrCommandInput, ProvisionByoipCidrCommandOutput } from "./commands/ProvisionByoipCidrCommand";
import { ProvisionIpamPoolCidrCommandInput, ProvisionIpamPoolCidrCommandOutput } from "./commands/ProvisionIpamPoolCidrCommand";
import { ProvisionPublicIpv4PoolCidrCommandInput, ProvisionPublicIpv4PoolCidrCommandOutput } from "./commands/ProvisionPublicIpv4PoolCidrCommand";
import { PurchaseHostReservationCommandInput, PurchaseHostReservationCommandOutput } from "./commands/PurchaseHostReservationCommand";
import { PurchaseReservedInstancesOfferingCommandInput, PurchaseReservedInstancesOfferingCommandOutput } from "./commands/PurchaseReservedInstancesOfferingCommand";
import { PurchaseScheduledInstancesCommandInput, PurchaseScheduledInstancesCommandOutput } from "./commands/PurchaseScheduledInstancesCommand";
import { RebootInstancesCommandInput, RebootInstancesCommandOutput } from "./commands/RebootInstancesCommand";
import { RegisterImageCommandInput, RegisterImageCommandOutput } from "./commands/RegisterImageCommand";
import { RegisterInstanceEventNotificationAttributesCommandInput, RegisterInstanceEventNotificationAttributesCommandOutput } from "./commands/RegisterInstanceEventNotificationAttributesCommand";
import { RegisterTransitGatewayMulticastGroupMembersCommandInput, RegisterTransitGatewayMulticastGroupMembersCommandOutput } from "./commands/RegisterTransitGatewayMulticastGroupMembersCommand";
import { RegisterTransitGatewayMulticastGroupSourcesCommandInput, RegisterTransitGatewayMulticastGroupSourcesCommandOutput } from "./commands/RegisterTransitGatewayMulticastGroupSourcesCommand";
import { RejectTransitGatewayMulticastDomainAssociationsCommandInput, RejectTransitGatewayMulticastDomainAssociationsCommandOutput } from "./commands/RejectTransitGatewayMulticastDomainAssociationsCommand";
import { RejectTransitGatewayPeeringAttachmentCommandInput, RejectTransitGatewayPeeringAttachmentCommandOutput } from "./commands/RejectTransitGatewayPeeringAttachmentCommand";
import { RejectTransitGatewayVpcAttachmentCommandInput, RejectTransitGatewayVpcAttachmentCommandOutput } from "./commands/RejectTransitGatewayVpcAttachmentCommand";
import { RejectVpcEndpointConnectionsCommandInput, RejectVpcEndpointConnectionsCommandOutput } from "./commands/RejectVpcEndpointConnectionsCommand";
import { RejectVpcPeeringConnectionCommandInput, RejectVpcPeeringConnectionCommandOutput } from "./commands/RejectVpcPeeringConnectionCommand";
import { ReleaseAddressCommandInput, ReleaseAddressCommandOutput } from "./commands/ReleaseAddressCommand";
import { ReleaseHostsCommandInput, ReleaseHostsCommandOutput } from "./commands/ReleaseHostsCommand";
import { ReleaseIpamPoolAllocationCommandInput, ReleaseIpamPoolAllocationCommandOutput } from "./commands/ReleaseIpamPoolAllocationCommand";
import { ReplaceIamInstanceProfileAssociationCommandInput, ReplaceIamInstanceProfileAssociationCommandOutput } from "./commands/ReplaceIamInstanceProfileAssociationCommand";
import { ReplaceNetworkAclAssociationCommandInput, ReplaceNetworkAclAssociationCommandOutput } from "./commands/ReplaceNetworkAclAssociationCommand";
import { ReplaceNetworkAclEntryCommandInput, ReplaceNetworkAclEntryCommandOutput } from "./commands/ReplaceNetworkAclEntryCommand";
import { ReplaceRouteCommandInput, ReplaceRouteCommandOutput } from "./commands/ReplaceRouteCommand";
import { ReplaceRouteTableAssociationCommandInput, ReplaceRouteTableAssociationCommandOutput } from "./commands/ReplaceRouteTableAssociationCommand";
import { ReplaceTransitGatewayRouteCommandInput, ReplaceTransitGatewayRouteCommandOutput } from "./commands/ReplaceTransitGatewayRouteCommand";
import { ReportInstanceStatusCommandInput, ReportInstanceStatusCommandOutput } from "./commands/ReportInstanceStatusCommand";
import { RequestSpotFleetCommandInput, RequestSpotFleetCommandOutput } from "./commands/RequestSpotFleetCommand";
import { RequestSpotInstancesCommandInput, RequestSpotInstancesCommandOutput } from "./commands/RequestSpotInstancesCommand";
import { ResetAddressAttributeCommandInput, ResetAddressAttributeCommandOutput } from "./commands/ResetAddressAttributeCommand";
import { ResetEbsDefaultKmsKeyIdCommandInput, ResetEbsDefaultKmsKeyIdCommandOutput } from "./commands/ResetEbsDefaultKmsKeyIdCommand";
import { ResetFpgaImageAttributeCommandInput, ResetFpgaImageAttributeCommandOutput } from "./commands/ResetFpgaImageAttributeCommand";
import { ResetImageAttributeCommandInput, ResetImageAttributeCommandOutput } from "./commands/ResetImageAttributeCommand";
import { ResetInstanceAttributeCommandInput, ResetInstanceAttributeCommandOutput } from "./commands/ResetInstanceAttributeCommand";
import { ResetNetworkInterfaceAttributeCommandInput, ResetNetworkInterfaceAttributeCommandOutput } from "./commands/ResetNetworkInterfaceAttributeCommand";
import { ResetSnapshotAttributeCommandInput, ResetSnapshotAttributeCommandOutput } from "./commands/ResetSnapshotAttributeCommand";
import { RestoreAddressToClassicCommandInput, RestoreAddressToClassicCommandOutput } from "./commands/RestoreAddressToClassicCommand";
import { RestoreImageFromRecycleBinCommandInput, RestoreImageFromRecycleBinCommandOutput } from "./commands/RestoreImageFromRecycleBinCommand";
import { RestoreManagedPrefixListVersionCommandInput, RestoreManagedPrefixListVersionCommandOutput } from "./commands/RestoreManagedPrefixListVersionCommand";
import { RestoreSnapshotFromRecycleBinCommandInput, RestoreSnapshotFromRecycleBinCommandOutput } from "./commands/RestoreSnapshotFromRecycleBinCommand";
import { RestoreSnapshotTierCommandInput, RestoreSnapshotTierCommandOutput } from "./commands/RestoreSnapshotTierCommand";
import { RevokeClientVpnIngressCommandInput, RevokeClientVpnIngressCommandOutput } from "./commands/RevokeClientVpnIngressCommand";
import { RevokeSecurityGroupEgressCommandInput, RevokeSecurityGroupEgressCommandOutput } from "./commands/RevokeSecurityGroupEgressCommand";
import { RevokeSecurityGroupIngressCommandInput, RevokeSecurityGroupIngressCommandOutput } from "./commands/RevokeSecurityGroupIngressCommand";
import { RunInstancesCommandInput, RunInstancesCommandOutput } from "./commands/RunInstancesCommand";
import { RunScheduledInstancesCommandInput, RunScheduledInstancesCommandOutput } from "./commands/RunScheduledInstancesCommand";
import { SearchLocalGatewayRoutesCommandInput, SearchLocalGatewayRoutesCommandOutput } from "./commands/SearchLocalGatewayRoutesCommand";
import { SearchTransitGatewayMulticastGroupsCommandInput, SearchTransitGatewayMulticastGroupsCommandOutput } from "./commands/SearchTransitGatewayMulticastGroupsCommand";
import { SearchTransitGatewayRoutesCommandInput, SearchTransitGatewayRoutesCommandOutput } from "./commands/SearchTransitGatewayRoutesCommand";
import { SendDiagnosticInterruptCommandInput, SendDiagnosticInterruptCommandOutput } from "./commands/SendDiagnosticInterruptCommand";
import { StartInstancesCommandInput, StartInstancesCommandOutput } from "./commands/StartInstancesCommand";
import { StartNetworkInsightsAccessScopeAnalysisCommandInput, StartNetworkInsightsAccessScopeAnalysisCommandOutput } from "./commands/StartNetworkInsightsAccessScopeAnalysisCommand";
import { StartNetworkInsightsAnalysisCommandInput, StartNetworkInsightsAnalysisCommandOutput } from "./commands/StartNetworkInsightsAnalysisCommand";
import { StartVpcEndpointServicePrivateDnsVerificationCommandInput, StartVpcEndpointServicePrivateDnsVerificationCommandOutput } from "./commands/StartVpcEndpointServicePrivateDnsVerificationCommand";
import { StopInstancesCommandInput, StopInstancesCommandOutput } from "./commands/StopInstancesCommand";
import { TerminateClientVpnConnectionsCommandInput, TerminateClientVpnConnectionsCommandOutput } from "./commands/TerminateClientVpnConnectionsCommand";
import { TerminateInstancesCommandInput, TerminateInstancesCommandOutput } from "./commands/TerminateInstancesCommand";
import { UnassignIpv6AddressesCommandInput, UnassignIpv6AddressesCommandOutput } from "./commands/UnassignIpv6AddressesCommand";
import { UnassignPrivateIpAddressesCommandInput, UnassignPrivateIpAddressesCommandOutput } from "./commands/UnassignPrivateIpAddressesCommand";
import { UnmonitorInstancesCommandInput, UnmonitorInstancesCommandOutput } from "./commands/UnmonitorInstancesCommand";
import { UpdateSecurityGroupRuleDescriptionsEgressCommandInput, UpdateSecurityGroupRuleDescriptionsEgressCommandOutput } from "./commands/UpdateSecurityGroupRuleDescriptionsEgressCommand";
import { UpdateSecurityGroupRuleDescriptionsIngressCommandInput, UpdateSecurityGroupRuleDescriptionsIngressCommandOutput } from "./commands/UpdateSecurityGroupRuleDescriptionsIngressCommand";
import { WithdrawByoipCidrCommandInput, WithdrawByoipCidrCommandOutput } from "./commands/WithdrawByoipCidrCommand";
import { EC2Client } from "./EC2Client";

export declare class EC2 extends EC2Client {
    
    acceptReservedInstancesExchangeQuote(args: AcceptReservedInstancesExchangeQuoteCommandInput, options?: __HttpHandlerOptions): Promise<AcceptReservedInstancesExchangeQuoteCommandOutput>;
    acceptReservedInstancesExchangeQuote(args: AcceptReservedInstancesExchangeQuoteCommandInput, cb: (err: any, data?: AcceptReservedInstancesExchangeQuoteCommandOutput) => void): void;
    acceptReservedInstancesExchangeQuote(args: AcceptReservedInstancesExchangeQuoteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AcceptReservedInstancesExchangeQuoteCommandOutput) => void): void;
    
    acceptTransitGatewayMulticastDomainAssociations(args: AcceptTransitGatewayMulticastDomainAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<AcceptTransitGatewayMulticastDomainAssociationsCommandOutput>;
    acceptTransitGatewayMulticastDomainAssociations(args: AcceptTransitGatewayMulticastDomainAssociationsCommandInput, cb: (err: any, data?: AcceptTransitGatewayMulticastDomainAssociationsCommandOutput) => void): void;
    acceptTransitGatewayMulticastDomainAssociations(args: AcceptTransitGatewayMulticastDomainAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AcceptTransitGatewayMulticastDomainAssociationsCommandOutput) => void): void;
    
    acceptTransitGatewayPeeringAttachment(args: AcceptTransitGatewayPeeringAttachmentCommandInput, options?: __HttpHandlerOptions): Promise<AcceptTransitGatewayPeeringAttachmentCommandOutput>;
    acceptTransitGatewayPeeringAttachment(args: AcceptTransitGatewayPeeringAttachmentCommandInput, cb: (err: any, data?: AcceptTransitGatewayPeeringAttachmentCommandOutput) => void): void;
    acceptTransitGatewayPeeringAttachment(args: AcceptTransitGatewayPeeringAttachmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AcceptTransitGatewayPeeringAttachmentCommandOutput) => void): void;
    
    acceptTransitGatewayVpcAttachment(args: AcceptTransitGatewayVpcAttachmentCommandInput, options?: __HttpHandlerOptions): Promise<AcceptTransitGatewayVpcAttachmentCommandOutput>;
    acceptTransitGatewayVpcAttachment(args: AcceptTransitGatewayVpcAttachmentCommandInput, cb: (err: any, data?: AcceptTransitGatewayVpcAttachmentCommandOutput) => void): void;
    acceptTransitGatewayVpcAttachment(args: AcceptTransitGatewayVpcAttachmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AcceptTransitGatewayVpcAttachmentCommandOutput) => void): void;
    
    acceptVpcEndpointConnections(args: AcceptVpcEndpointConnectionsCommandInput, options?: __HttpHandlerOptions): Promise<AcceptVpcEndpointConnectionsCommandOutput>;
    acceptVpcEndpointConnections(args: AcceptVpcEndpointConnectionsCommandInput, cb: (err: any, data?: AcceptVpcEndpointConnectionsCommandOutput) => void): void;
    acceptVpcEndpointConnections(args: AcceptVpcEndpointConnectionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AcceptVpcEndpointConnectionsCommandOutput) => void): void;
    
    acceptVpcPeeringConnection(args: AcceptVpcPeeringConnectionCommandInput, options?: __HttpHandlerOptions): Promise<AcceptVpcPeeringConnectionCommandOutput>;
    acceptVpcPeeringConnection(args: AcceptVpcPeeringConnectionCommandInput, cb: (err: any, data?: AcceptVpcPeeringConnectionCommandOutput) => void): void;
    acceptVpcPeeringConnection(args: AcceptVpcPeeringConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AcceptVpcPeeringConnectionCommandOutput) => void): void;
    
    advertiseByoipCidr(args: AdvertiseByoipCidrCommandInput, options?: __HttpHandlerOptions): Promise<AdvertiseByoipCidrCommandOutput>;
    advertiseByoipCidr(args: AdvertiseByoipCidrCommandInput, cb: (err: any, data?: AdvertiseByoipCidrCommandOutput) => void): void;
    advertiseByoipCidr(args: AdvertiseByoipCidrCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AdvertiseByoipCidrCommandOutput) => void): void;
    
    allocateAddress(args: AllocateAddressCommandInput, options?: __HttpHandlerOptions): Promise<AllocateAddressCommandOutput>;
    allocateAddress(args: AllocateAddressCommandInput, cb: (err: any, data?: AllocateAddressCommandOutput) => void): void;
    allocateAddress(args: AllocateAddressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AllocateAddressCommandOutput) => void): void;
    
    allocateHosts(args: AllocateHostsCommandInput, options?: __HttpHandlerOptions): Promise<AllocateHostsCommandOutput>;
    allocateHosts(args: AllocateHostsCommandInput, cb: (err: any, data?: AllocateHostsCommandOutput) => void): void;
    allocateHosts(args: AllocateHostsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AllocateHostsCommandOutput) => void): void;
    
    allocateIpamPoolCidr(args: AllocateIpamPoolCidrCommandInput, options?: __HttpHandlerOptions): Promise<AllocateIpamPoolCidrCommandOutput>;
    allocateIpamPoolCidr(args: AllocateIpamPoolCidrCommandInput, cb: (err: any, data?: AllocateIpamPoolCidrCommandOutput) => void): void;
    allocateIpamPoolCidr(args: AllocateIpamPoolCidrCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AllocateIpamPoolCidrCommandOutput) => void): void;
    
    applySecurityGroupsToClientVpnTargetNetwork(args: ApplySecurityGroupsToClientVpnTargetNetworkCommandInput, options?: __HttpHandlerOptions): Promise<ApplySecurityGroupsToClientVpnTargetNetworkCommandOutput>;
    applySecurityGroupsToClientVpnTargetNetwork(args: ApplySecurityGroupsToClientVpnTargetNetworkCommandInput, cb: (err: any, data?: ApplySecurityGroupsToClientVpnTargetNetworkCommandOutput) => void): void;
    applySecurityGroupsToClientVpnTargetNetwork(args: ApplySecurityGroupsToClientVpnTargetNetworkCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ApplySecurityGroupsToClientVpnTargetNetworkCommandOutput) => void): void;
    
    assignIpv6Addresses(args: AssignIpv6AddressesCommandInput, options?: __HttpHandlerOptions): Promise<AssignIpv6AddressesCommandOutput>;
    assignIpv6Addresses(args: AssignIpv6AddressesCommandInput, cb: (err: any, data?: AssignIpv6AddressesCommandOutput) => void): void;
    assignIpv6Addresses(args: AssignIpv6AddressesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssignIpv6AddressesCommandOutput) => void): void;
    
    assignPrivateIpAddresses(args: AssignPrivateIpAddressesCommandInput, options?: __HttpHandlerOptions): Promise<AssignPrivateIpAddressesCommandOutput>;
    assignPrivateIpAddresses(args: AssignPrivateIpAddressesCommandInput, cb: (err: any, data?: AssignPrivateIpAddressesCommandOutput) => void): void;
    assignPrivateIpAddresses(args: AssignPrivateIpAddressesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssignPrivateIpAddressesCommandOutput) => void): void;
    
    associateAddress(args: AssociateAddressCommandInput, options?: __HttpHandlerOptions): Promise<AssociateAddressCommandOutput>;
    associateAddress(args: AssociateAddressCommandInput, cb: (err: any, data?: AssociateAddressCommandOutput) => void): void;
    associateAddress(args: AssociateAddressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateAddressCommandOutput) => void): void;
    
    associateClientVpnTargetNetwork(args: AssociateClientVpnTargetNetworkCommandInput, options?: __HttpHandlerOptions): Promise<AssociateClientVpnTargetNetworkCommandOutput>;
    associateClientVpnTargetNetwork(args: AssociateClientVpnTargetNetworkCommandInput, cb: (err: any, data?: AssociateClientVpnTargetNetworkCommandOutput) => void): void;
    associateClientVpnTargetNetwork(args: AssociateClientVpnTargetNetworkCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateClientVpnTargetNetworkCommandOutput) => void): void;
    
    associateDhcpOptions(args: AssociateDhcpOptionsCommandInput, options?: __HttpHandlerOptions): Promise<AssociateDhcpOptionsCommandOutput>;
    associateDhcpOptions(args: AssociateDhcpOptionsCommandInput, cb: (err: any, data?: AssociateDhcpOptionsCommandOutput) => void): void;
    associateDhcpOptions(args: AssociateDhcpOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateDhcpOptionsCommandOutput) => void): void;
    
    associateEnclaveCertificateIamRole(args: AssociateEnclaveCertificateIamRoleCommandInput, options?: __HttpHandlerOptions): Promise<AssociateEnclaveCertificateIamRoleCommandOutput>;
    associateEnclaveCertificateIamRole(args: AssociateEnclaveCertificateIamRoleCommandInput, cb: (err: any, data?: AssociateEnclaveCertificateIamRoleCommandOutput) => void): void;
    associateEnclaveCertificateIamRole(args: AssociateEnclaveCertificateIamRoleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateEnclaveCertificateIamRoleCommandOutput) => void): void;
    
    associateIamInstanceProfile(args: AssociateIamInstanceProfileCommandInput, options?: __HttpHandlerOptions): Promise<AssociateIamInstanceProfileCommandOutput>;
    associateIamInstanceProfile(args: AssociateIamInstanceProfileCommandInput, cb: (err: any, data?: AssociateIamInstanceProfileCommandOutput) => void): void;
    associateIamInstanceProfile(args: AssociateIamInstanceProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateIamInstanceProfileCommandOutput) => void): void;
    
    associateInstanceEventWindow(args: AssociateInstanceEventWindowCommandInput, options?: __HttpHandlerOptions): Promise<AssociateInstanceEventWindowCommandOutput>;
    associateInstanceEventWindow(args: AssociateInstanceEventWindowCommandInput, cb: (err: any, data?: AssociateInstanceEventWindowCommandOutput) => void): void;
    associateInstanceEventWindow(args: AssociateInstanceEventWindowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateInstanceEventWindowCommandOutput) => void): void;
    
    associateRouteTable(args: AssociateRouteTableCommandInput, options?: __HttpHandlerOptions): Promise<AssociateRouteTableCommandOutput>;
    associateRouteTable(args: AssociateRouteTableCommandInput, cb: (err: any, data?: AssociateRouteTableCommandOutput) => void): void;
    associateRouteTable(args: AssociateRouteTableCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateRouteTableCommandOutput) => void): void;
    
    associateSubnetCidrBlock(args: AssociateSubnetCidrBlockCommandInput, options?: __HttpHandlerOptions): Promise<AssociateSubnetCidrBlockCommandOutput>;
    associateSubnetCidrBlock(args: AssociateSubnetCidrBlockCommandInput, cb: (err: any, data?: AssociateSubnetCidrBlockCommandOutput) => void): void;
    associateSubnetCidrBlock(args: AssociateSubnetCidrBlockCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateSubnetCidrBlockCommandOutput) => void): void;
    
    associateTransitGatewayMulticastDomain(args: AssociateTransitGatewayMulticastDomainCommandInput, options?: __HttpHandlerOptions): Promise<AssociateTransitGatewayMulticastDomainCommandOutput>;
    associateTransitGatewayMulticastDomain(args: AssociateTransitGatewayMulticastDomainCommandInput, cb: (err: any, data?: AssociateTransitGatewayMulticastDomainCommandOutput) => void): void;
    associateTransitGatewayMulticastDomain(args: AssociateTransitGatewayMulticastDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateTransitGatewayMulticastDomainCommandOutput) => void): void;
    
    associateTransitGatewayRouteTable(args: AssociateTransitGatewayRouteTableCommandInput, options?: __HttpHandlerOptions): Promise<AssociateTransitGatewayRouteTableCommandOutput>;
    associateTransitGatewayRouteTable(args: AssociateTransitGatewayRouteTableCommandInput, cb: (err: any, data?: AssociateTransitGatewayRouteTableCommandOutput) => void): void;
    associateTransitGatewayRouteTable(args: AssociateTransitGatewayRouteTableCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateTransitGatewayRouteTableCommandOutput) => void): void;
    
    associateTrunkInterface(args: AssociateTrunkInterfaceCommandInput, options?: __HttpHandlerOptions): Promise<AssociateTrunkInterfaceCommandOutput>;
    associateTrunkInterface(args: AssociateTrunkInterfaceCommandInput, cb: (err: any, data?: AssociateTrunkInterfaceCommandOutput) => void): void;
    associateTrunkInterface(args: AssociateTrunkInterfaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateTrunkInterfaceCommandOutput) => void): void;
    
    associateVpcCidrBlock(args: AssociateVpcCidrBlockCommandInput, options?: __HttpHandlerOptions): Promise<AssociateVpcCidrBlockCommandOutput>;
    associateVpcCidrBlock(args: AssociateVpcCidrBlockCommandInput, cb: (err: any, data?: AssociateVpcCidrBlockCommandOutput) => void): void;
    associateVpcCidrBlock(args: AssociateVpcCidrBlockCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateVpcCidrBlockCommandOutput) => void): void;
    
    attachClassicLinkVpc(args: AttachClassicLinkVpcCommandInput, options?: __HttpHandlerOptions): Promise<AttachClassicLinkVpcCommandOutput>;
    attachClassicLinkVpc(args: AttachClassicLinkVpcCommandInput, cb: (err: any, data?: AttachClassicLinkVpcCommandOutput) => void): void;
    attachClassicLinkVpc(args: AttachClassicLinkVpcCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AttachClassicLinkVpcCommandOutput) => void): void;
    
    attachInternetGateway(args: AttachInternetGatewayCommandInput, options?: __HttpHandlerOptions): Promise<AttachInternetGatewayCommandOutput>;
    attachInternetGateway(args: AttachInternetGatewayCommandInput, cb: (err: any, data?: AttachInternetGatewayCommandOutput) => void): void;
    attachInternetGateway(args: AttachInternetGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AttachInternetGatewayCommandOutput) => void): void;
    
    attachNetworkInterface(args: AttachNetworkInterfaceCommandInput, options?: __HttpHandlerOptions): Promise<AttachNetworkInterfaceCommandOutput>;
    attachNetworkInterface(args: AttachNetworkInterfaceCommandInput, cb: (err: any, data?: AttachNetworkInterfaceCommandOutput) => void): void;
    attachNetworkInterface(args: AttachNetworkInterfaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AttachNetworkInterfaceCommandOutput) => void): void;
    
    attachVolume(args: AttachVolumeCommandInput, options?: __HttpHandlerOptions): Promise<AttachVolumeCommandOutput>;
    attachVolume(args: AttachVolumeCommandInput, cb: (err: any, data?: AttachVolumeCommandOutput) => void): void;
    attachVolume(args: AttachVolumeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AttachVolumeCommandOutput) => void): void;
    
    attachVpnGateway(args: AttachVpnGatewayCommandInput, options?: __HttpHandlerOptions): Promise<AttachVpnGatewayCommandOutput>;
    attachVpnGateway(args: AttachVpnGatewayCommandInput, cb: (err: any, data?: AttachVpnGatewayCommandOutput) => void): void;
    attachVpnGateway(args: AttachVpnGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AttachVpnGatewayCommandOutput) => void): void;
    
    authorizeClientVpnIngress(args: AuthorizeClientVpnIngressCommandInput, options?: __HttpHandlerOptions): Promise<AuthorizeClientVpnIngressCommandOutput>;
    authorizeClientVpnIngress(args: AuthorizeClientVpnIngressCommandInput, cb: (err: any, data?: AuthorizeClientVpnIngressCommandOutput) => void): void;
    authorizeClientVpnIngress(args: AuthorizeClientVpnIngressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AuthorizeClientVpnIngressCommandOutput) => void): void;
    
    authorizeSecurityGroupEgress(args: AuthorizeSecurityGroupEgressCommandInput, options?: __HttpHandlerOptions): Promise<AuthorizeSecurityGroupEgressCommandOutput>;
    authorizeSecurityGroupEgress(args: AuthorizeSecurityGroupEgressCommandInput, cb: (err: any, data?: AuthorizeSecurityGroupEgressCommandOutput) => void): void;
    authorizeSecurityGroupEgress(args: AuthorizeSecurityGroupEgressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AuthorizeSecurityGroupEgressCommandOutput) => void): void;
    
    authorizeSecurityGroupIngress(args: AuthorizeSecurityGroupIngressCommandInput, options?: __HttpHandlerOptions): Promise<AuthorizeSecurityGroupIngressCommandOutput>;
    authorizeSecurityGroupIngress(args: AuthorizeSecurityGroupIngressCommandInput, cb: (err: any, data?: AuthorizeSecurityGroupIngressCommandOutput) => void): void;
    authorizeSecurityGroupIngress(args: AuthorizeSecurityGroupIngressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AuthorizeSecurityGroupIngressCommandOutput) => void): void;
    
    bundleInstance(args: BundleInstanceCommandInput, options?: __HttpHandlerOptions): Promise<BundleInstanceCommandOutput>;
    bundleInstance(args: BundleInstanceCommandInput, cb: (err: any, data?: BundleInstanceCommandOutput) => void): void;
    bundleInstance(args: BundleInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BundleInstanceCommandOutput) => void): void;
    
    cancelBundleTask(args: CancelBundleTaskCommandInput, options?: __HttpHandlerOptions): Promise<CancelBundleTaskCommandOutput>;
    cancelBundleTask(args: CancelBundleTaskCommandInput, cb: (err: any, data?: CancelBundleTaskCommandOutput) => void): void;
    cancelBundleTask(args: CancelBundleTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelBundleTaskCommandOutput) => void): void;
    
    cancelCapacityReservation(args: CancelCapacityReservationCommandInput, options?: __HttpHandlerOptions): Promise<CancelCapacityReservationCommandOutput>;
    cancelCapacityReservation(args: CancelCapacityReservationCommandInput, cb: (err: any, data?: CancelCapacityReservationCommandOutput) => void): void;
    cancelCapacityReservation(args: CancelCapacityReservationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelCapacityReservationCommandOutput) => void): void;
    
    cancelCapacityReservationFleets(args: CancelCapacityReservationFleetsCommandInput, options?: __HttpHandlerOptions): Promise<CancelCapacityReservationFleetsCommandOutput>;
    cancelCapacityReservationFleets(args: CancelCapacityReservationFleetsCommandInput, cb: (err: any, data?: CancelCapacityReservationFleetsCommandOutput) => void): void;
    cancelCapacityReservationFleets(args: CancelCapacityReservationFleetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelCapacityReservationFleetsCommandOutput) => void): void;
    
    cancelConversionTask(args: CancelConversionTaskCommandInput, options?: __HttpHandlerOptions): Promise<CancelConversionTaskCommandOutput>;
    cancelConversionTask(args: CancelConversionTaskCommandInput, cb: (err: any, data?: CancelConversionTaskCommandOutput) => void): void;
    cancelConversionTask(args: CancelConversionTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelConversionTaskCommandOutput) => void): void;
    
    cancelExportTask(args: CancelExportTaskCommandInput, options?: __HttpHandlerOptions): Promise<CancelExportTaskCommandOutput>;
    cancelExportTask(args: CancelExportTaskCommandInput, cb: (err: any, data?: CancelExportTaskCommandOutput) => void): void;
    cancelExportTask(args: CancelExportTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelExportTaskCommandOutput) => void): void;
    
    cancelImportTask(args: CancelImportTaskCommandInput, options?: __HttpHandlerOptions): Promise<CancelImportTaskCommandOutput>;
    cancelImportTask(args: CancelImportTaskCommandInput, cb: (err: any, data?: CancelImportTaskCommandOutput) => void): void;
    cancelImportTask(args: CancelImportTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelImportTaskCommandOutput) => void): void;
    
    cancelReservedInstancesListing(args: CancelReservedInstancesListingCommandInput, options?: __HttpHandlerOptions): Promise<CancelReservedInstancesListingCommandOutput>;
    cancelReservedInstancesListing(args: CancelReservedInstancesListingCommandInput, cb: (err: any, data?: CancelReservedInstancesListingCommandOutput) => void): void;
    cancelReservedInstancesListing(args: CancelReservedInstancesListingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelReservedInstancesListingCommandOutput) => void): void;
    
    cancelSpotFleetRequests(args: CancelSpotFleetRequestsCommandInput, options?: __HttpHandlerOptions): Promise<CancelSpotFleetRequestsCommandOutput>;
    cancelSpotFleetRequests(args: CancelSpotFleetRequestsCommandInput, cb: (err: any, data?: CancelSpotFleetRequestsCommandOutput) => void): void;
    cancelSpotFleetRequests(args: CancelSpotFleetRequestsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelSpotFleetRequestsCommandOutput) => void): void;
    
    cancelSpotInstanceRequests(args: CancelSpotInstanceRequestsCommandInput, options?: __HttpHandlerOptions): Promise<CancelSpotInstanceRequestsCommandOutput>;
    cancelSpotInstanceRequests(args: CancelSpotInstanceRequestsCommandInput, cb: (err: any, data?: CancelSpotInstanceRequestsCommandOutput) => void): void;
    cancelSpotInstanceRequests(args: CancelSpotInstanceRequestsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelSpotInstanceRequestsCommandOutput) => void): void;
    
    confirmProductInstance(args: ConfirmProductInstanceCommandInput, options?: __HttpHandlerOptions): Promise<ConfirmProductInstanceCommandOutput>;
    confirmProductInstance(args: ConfirmProductInstanceCommandInput, cb: (err: any, data?: ConfirmProductInstanceCommandOutput) => void): void;
    confirmProductInstance(args: ConfirmProductInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ConfirmProductInstanceCommandOutput) => void): void;
    
    copyFpgaImage(args: CopyFpgaImageCommandInput, options?: __HttpHandlerOptions): Promise<CopyFpgaImageCommandOutput>;
    copyFpgaImage(args: CopyFpgaImageCommandInput, cb: (err: any, data?: CopyFpgaImageCommandOutput) => void): void;
    copyFpgaImage(args: CopyFpgaImageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CopyFpgaImageCommandOutput) => void): void;
    
    copyImage(args: CopyImageCommandInput, options?: __HttpHandlerOptions): Promise<CopyImageCommandOutput>;
    copyImage(args: CopyImageCommandInput, cb: (err: any, data?: CopyImageCommandOutput) => void): void;
    copyImage(args: CopyImageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CopyImageCommandOutput) => void): void;
    
    copySnapshot(args: CopySnapshotCommandInput, options?: __HttpHandlerOptions): Promise<CopySnapshotCommandOutput>;
    copySnapshot(args: CopySnapshotCommandInput, cb: (err: any, data?: CopySnapshotCommandOutput) => void): void;
    copySnapshot(args: CopySnapshotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CopySnapshotCommandOutput) => void): void;
    
    createCapacityReservation(args: CreateCapacityReservationCommandInput, options?: __HttpHandlerOptions): Promise<CreateCapacityReservationCommandOutput>;
    createCapacityReservation(args: CreateCapacityReservationCommandInput, cb: (err: any, data?: CreateCapacityReservationCommandOutput) => void): void;
    createCapacityReservation(args: CreateCapacityReservationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateCapacityReservationCommandOutput) => void): void;
    
    createCapacityReservationFleet(args: CreateCapacityReservationFleetCommandInput, options?: __HttpHandlerOptions): Promise<CreateCapacityReservationFleetCommandOutput>;
    createCapacityReservationFleet(args: CreateCapacityReservationFleetCommandInput, cb: (err: any, data?: CreateCapacityReservationFleetCommandOutput) => void): void;
    createCapacityReservationFleet(args: CreateCapacityReservationFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateCapacityReservationFleetCommandOutput) => void): void;
    
    createCarrierGateway(args: CreateCarrierGatewayCommandInput, options?: __HttpHandlerOptions): Promise<CreateCarrierGatewayCommandOutput>;
    createCarrierGateway(args: CreateCarrierGatewayCommandInput, cb: (err: any, data?: CreateCarrierGatewayCommandOutput) => void): void;
    createCarrierGateway(args: CreateCarrierGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateCarrierGatewayCommandOutput) => void): void;
    
    createClientVpnEndpoint(args: CreateClientVpnEndpointCommandInput, options?: __HttpHandlerOptions): Promise<CreateClientVpnEndpointCommandOutput>;
    createClientVpnEndpoint(args: CreateClientVpnEndpointCommandInput, cb: (err: any, data?: CreateClientVpnEndpointCommandOutput) => void): void;
    createClientVpnEndpoint(args: CreateClientVpnEndpointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateClientVpnEndpointCommandOutput) => void): void;
    
    createClientVpnRoute(args: CreateClientVpnRouteCommandInput, options?: __HttpHandlerOptions): Promise<CreateClientVpnRouteCommandOutput>;
    createClientVpnRoute(args: CreateClientVpnRouteCommandInput, cb: (err: any, data?: CreateClientVpnRouteCommandOutput) => void): void;
    createClientVpnRoute(args: CreateClientVpnRouteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateClientVpnRouteCommandOutput) => void): void;
    
    createCustomerGateway(args: CreateCustomerGatewayCommandInput, options?: __HttpHandlerOptions): Promise<CreateCustomerGatewayCommandOutput>;
    createCustomerGateway(args: CreateCustomerGatewayCommandInput, cb: (err: any, data?: CreateCustomerGatewayCommandOutput) => void): void;
    createCustomerGateway(args: CreateCustomerGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateCustomerGatewayCommandOutput) => void): void;
    
    createDefaultSubnet(args: CreateDefaultSubnetCommandInput, options?: __HttpHandlerOptions): Promise<CreateDefaultSubnetCommandOutput>;
    createDefaultSubnet(args: CreateDefaultSubnetCommandInput, cb: (err: any, data?: CreateDefaultSubnetCommandOutput) => void): void;
    createDefaultSubnet(args: CreateDefaultSubnetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDefaultSubnetCommandOutput) => void): void;
    
    createDefaultVpc(args: CreateDefaultVpcCommandInput, options?: __HttpHandlerOptions): Promise<CreateDefaultVpcCommandOutput>;
    createDefaultVpc(args: CreateDefaultVpcCommandInput, cb: (err: any, data?: CreateDefaultVpcCommandOutput) => void): void;
    createDefaultVpc(args: CreateDefaultVpcCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDefaultVpcCommandOutput) => void): void;
    
    createDhcpOptions(args: CreateDhcpOptionsCommandInput, options?: __HttpHandlerOptions): Promise<CreateDhcpOptionsCommandOutput>;
    createDhcpOptions(args: CreateDhcpOptionsCommandInput, cb: (err: any, data?: CreateDhcpOptionsCommandOutput) => void): void;
    createDhcpOptions(args: CreateDhcpOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDhcpOptionsCommandOutput) => void): void;
    
    createEgressOnlyInternetGateway(args: CreateEgressOnlyInternetGatewayCommandInput, options?: __HttpHandlerOptions): Promise<CreateEgressOnlyInternetGatewayCommandOutput>;
    createEgressOnlyInternetGateway(args: CreateEgressOnlyInternetGatewayCommandInput, cb: (err: any, data?: CreateEgressOnlyInternetGatewayCommandOutput) => void): void;
    createEgressOnlyInternetGateway(args: CreateEgressOnlyInternetGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEgressOnlyInternetGatewayCommandOutput) => void): void;
    
    createFleet(args: CreateFleetCommandInput, options?: __HttpHandlerOptions): Promise<CreateFleetCommandOutput>;
    createFleet(args: CreateFleetCommandInput, cb: (err: any, data?: CreateFleetCommandOutput) => void): void;
    createFleet(args: CreateFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateFleetCommandOutput) => void): void;
    
    createFlowLogs(args: CreateFlowLogsCommandInput, options?: __HttpHandlerOptions): Promise<CreateFlowLogsCommandOutput>;
    createFlowLogs(args: CreateFlowLogsCommandInput, cb: (err: any, data?: CreateFlowLogsCommandOutput) => void): void;
    createFlowLogs(args: CreateFlowLogsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateFlowLogsCommandOutput) => void): void;
    
    createFpgaImage(args: CreateFpgaImageCommandInput, options?: __HttpHandlerOptions): Promise<CreateFpgaImageCommandOutput>;
    createFpgaImage(args: CreateFpgaImageCommandInput, cb: (err: any, data?: CreateFpgaImageCommandOutput) => void): void;
    createFpgaImage(args: CreateFpgaImageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateFpgaImageCommandOutput) => void): void;
    
    createImage(args: CreateImageCommandInput, options?: __HttpHandlerOptions): Promise<CreateImageCommandOutput>;
    createImage(args: CreateImageCommandInput, cb: (err: any, data?: CreateImageCommandOutput) => void): void;
    createImage(args: CreateImageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateImageCommandOutput) => void): void;
    
    createInstanceEventWindow(args: CreateInstanceEventWindowCommandInput, options?: __HttpHandlerOptions): Promise<CreateInstanceEventWindowCommandOutput>;
    createInstanceEventWindow(args: CreateInstanceEventWindowCommandInput, cb: (err: any, data?: CreateInstanceEventWindowCommandOutput) => void): void;
    createInstanceEventWindow(args: CreateInstanceEventWindowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateInstanceEventWindowCommandOutput) => void): void;
    
    createInstanceExportTask(args: CreateInstanceExportTaskCommandInput, options?: __HttpHandlerOptions): Promise<CreateInstanceExportTaskCommandOutput>;
    createInstanceExportTask(args: CreateInstanceExportTaskCommandInput, cb: (err: any, data?: CreateInstanceExportTaskCommandOutput) => void): void;
    createInstanceExportTask(args: CreateInstanceExportTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateInstanceExportTaskCommandOutput) => void): void;
    
    createInternetGateway(args: CreateInternetGatewayCommandInput, options?: __HttpHandlerOptions): Promise<CreateInternetGatewayCommandOutput>;
    createInternetGateway(args: CreateInternetGatewayCommandInput, cb: (err: any, data?: CreateInternetGatewayCommandOutput) => void): void;
    createInternetGateway(args: CreateInternetGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateInternetGatewayCommandOutput) => void): void;
    
    createIpam(args: CreateIpamCommandInput, options?: __HttpHandlerOptions): Promise<CreateIpamCommandOutput>;
    createIpam(args: CreateIpamCommandInput, cb: (err: any, data?: CreateIpamCommandOutput) => void): void;
    createIpam(args: CreateIpamCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateIpamCommandOutput) => void): void;
    
    createIpamPool(args: CreateIpamPoolCommandInput, options?: __HttpHandlerOptions): Promise<CreateIpamPoolCommandOutput>;
    createIpamPool(args: CreateIpamPoolCommandInput, cb: (err: any, data?: CreateIpamPoolCommandOutput) => void): void;
    createIpamPool(args: CreateIpamPoolCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateIpamPoolCommandOutput) => void): void;
    
    createIpamScope(args: CreateIpamScopeCommandInput, options?: __HttpHandlerOptions): Promise<CreateIpamScopeCommandOutput>;
    createIpamScope(args: CreateIpamScopeCommandInput, cb: (err: any, data?: CreateIpamScopeCommandOutput) => void): void;
    createIpamScope(args: CreateIpamScopeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateIpamScopeCommandOutput) => void): void;
    
    createKeyPair(args: CreateKeyPairCommandInput, options?: __HttpHandlerOptions): Promise<CreateKeyPairCommandOutput>;
    createKeyPair(args: CreateKeyPairCommandInput, cb: (err: any, data?: CreateKeyPairCommandOutput) => void): void;
    createKeyPair(args: CreateKeyPairCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateKeyPairCommandOutput) => void): void;
    
    createLaunchTemplate(args: CreateLaunchTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateLaunchTemplateCommandOutput>;
    createLaunchTemplate(args: CreateLaunchTemplateCommandInput, cb: (err: any, data?: CreateLaunchTemplateCommandOutput) => void): void;
    createLaunchTemplate(args: CreateLaunchTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateLaunchTemplateCommandOutput) => void): void;
    
    createLaunchTemplateVersion(args: CreateLaunchTemplateVersionCommandInput, options?: __HttpHandlerOptions): Promise<CreateLaunchTemplateVersionCommandOutput>;
    createLaunchTemplateVersion(args: CreateLaunchTemplateVersionCommandInput, cb: (err: any, data?: CreateLaunchTemplateVersionCommandOutput) => void): void;
    createLaunchTemplateVersion(args: CreateLaunchTemplateVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateLaunchTemplateVersionCommandOutput) => void): void;
    
    createLocalGatewayRoute(args: CreateLocalGatewayRouteCommandInput, options?: __HttpHandlerOptions): Promise<CreateLocalGatewayRouteCommandOutput>;
    createLocalGatewayRoute(args: CreateLocalGatewayRouteCommandInput, cb: (err: any, data?: CreateLocalGatewayRouteCommandOutput) => void): void;
    createLocalGatewayRoute(args: CreateLocalGatewayRouteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateLocalGatewayRouteCommandOutput) => void): void;
    
    createLocalGatewayRouteTableVpcAssociation(args: CreateLocalGatewayRouteTableVpcAssociationCommandInput, options?: __HttpHandlerOptions): Promise<CreateLocalGatewayRouteTableVpcAssociationCommandOutput>;
    createLocalGatewayRouteTableVpcAssociation(args: CreateLocalGatewayRouteTableVpcAssociationCommandInput, cb: (err: any, data?: CreateLocalGatewayRouteTableVpcAssociationCommandOutput) => void): void;
    createLocalGatewayRouteTableVpcAssociation(args: CreateLocalGatewayRouteTableVpcAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateLocalGatewayRouteTableVpcAssociationCommandOutput) => void): void;
    
    createManagedPrefixList(args: CreateManagedPrefixListCommandInput, options?: __HttpHandlerOptions): Promise<CreateManagedPrefixListCommandOutput>;
    createManagedPrefixList(args: CreateManagedPrefixListCommandInput, cb: (err: any, data?: CreateManagedPrefixListCommandOutput) => void): void;
    createManagedPrefixList(args: CreateManagedPrefixListCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateManagedPrefixListCommandOutput) => void): void;
    
    createNatGateway(args: CreateNatGatewayCommandInput, options?: __HttpHandlerOptions): Promise<CreateNatGatewayCommandOutput>;
    createNatGateway(args: CreateNatGatewayCommandInput, cb: (err: any, data?: CreateNatGatewayCommandOutput) => void): void;
    createNatGateway(args: CreateNatGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateNatGatewayCommandOutput) => void): void;
    
    createNetworkAcl(args: CreateNetworkAclCommandInput, options?: __HttpHandlerOptions): Promise<CreateNetworkAclCommandOutput>;
    createNetworkAcl(args: CreateNetworkAclCommandInput, cb: (err: any, data?: CreateNetworkAclCommandOutput) => void): void;
    createNetworkAcl(args: CreateNetworkAclCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateNetworkAclCommandOutput) => void): void;
    
    createNetworkAclEntry(args: CreateNetworkAclEntryCommandInput, options?: __HttpHandlerOptions): Promise<CreateNetworkAclEntryCommandOutput>;
    createNetworkAclEntry(args: CreateNetworkAclEntryCommandInput, cb: (err: any, data?: CreateNetworkAclEntryCommandOutput) => void): void;
    createNetworkAclEntry(args: CreateNetworkAclEntryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateNetworkAclEntryCommandOutput) => void): void;
    
    createNetworkInsightsAccessScope(args: CreateNetworkInsightsAccessScopeCommandInput, options?: __HttpHandlerOptions): Promise<CreateNetworkInsightsAccessScopeCommandOutput>;
    createNetworkInsightsAccessScope(args: CreateNetworkInsightsAccessScopeCommandInput, cb: (err: any, data?: CreateNetworkInsightsAccessScopeCommandOutput) => void): void;
    createNetworkInsightsAccessScope(args: CreateNetworkInsightsAccessScopeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateNetworkInsightsAccessScopeCommandOutput) => void): void;
    
    createNetworkInsightsPath(args: CreateNetworkInsightsPathCommandInput, options?: __HttpHandlerOptions): Promise<CreateNetworkInsightsPathCommandOutput>;
    createNetworkInsightsPath(args: CreateNetworkInsightsPathCommandInput, cb: (err: any, data?: CreateNetworkInsightsPathCommandOutput) => void): void;
    createNetworkInsightsPath(args: CreateNetworkInsightsPathCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateNetworkInsightsPathCommandOutput) => void): void;
    
    createNetworkInterface(args: CreateNetworkInterfaceCommandInput, options?: __HttpHandlerOptions): Promise<CreateNetworkInterfaceCommandOutput>;
    createNetworkInterface(args: CreateNetworkInterfaceCommandInput, cb: (err: any, data?: CreateNetworkInterfaceCommandOutput) => void): void;
    createNetworkInterface(args: CreateNetworkInterfaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateNetworkInterfaceCommandOutput) => void): void;
    
    createNetworkInterfacePermission(args: CreateNetworkInterfacePermissionCommandInput, options?: __HttpHandlerOptions): Promise<CreateNetworkInterfacePermissionCommandOutput>;
    createNetworkInterfacePermission(args: CreateNetworkInterfacePermissionCommandInput, cb: (err: any, data?: CreateNetworkInterfacePermissionCommandOutput) => void): void;
    createNetworkInterfacePermission(args: CreateNetworkInterfacePermissionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateNetworkInterfacePermissionCommandOutput) => void): void;
    
    createPlacementGroup(args: CreatePlacementGroupCommandInput, options?: __HttpHandlerOptions): Promise<CreatePlacementGroupCommandOutput>;
    createPlacementGroup(args: CreatePlacementGroupCommandInput, cb: (err: any, data?: CreatePlacementGroupCommandOutput) => void): void;
    createPlacementGroup(args: CreatePlacementGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreatePlacementGroupCommandOutput) => void): void;
    
    createPublicIpv4Pool(args: CreatePublicIpv4PoolCommandInput, options?: __HttpHandlerOptions): Promise<CreatePublicIpv4PoolCommandOutput>;
    createPublicIpv4Pool(args: CreatePublicIpv4PoolCommandInput, cb: (err: any, data?: CreatePublicIpv4PoolCommandOutput) => void): void;
    createPublicIpv4Pool(args: CreatePublicIpv4PoolCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreatePublicIpv4PoolCommandOutput) => void): void;
    
    createReplaceRootVolumeTask(args: CreateReplaceRootVolumeTaskCommandInput, options?: __HttpHandlerOptions): Promise<CreateReplaceRootVolumeTaskCommandOutput>;
    createReplaceRootVolumeTask(args: CreateReplaceRootVolumeTaskCommandInput, cb: (err: any, data?: CreateReplaceRootVolumeTaskCommandOutput) => void): void;
    createReplaceRootVolumeTask(args: CreateReplaceRootVolumeTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateReplaceRootVolumeTaskCommandOutput) => void): void;
    
    createReservedInstancesListing(args: CreateReservedInstancesListingCommandInput, options?: __HttpHandlerOptions): Promise<CreateReservedInstancesListingCommandOutput>;
    createReservedInstancesListing(args: CreateReservedInstancesListingCommandInput, cb: (err: any, data?: CreateReservedInstancesListingCommandOutput) => void): void;
    createReservedInstancesListing(args: CreateReservedInstancesListingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateReservedInstancesListingCommandOutput) => void): void;
    
    createRestoreImageTask(args: CreateRestoreImageTaskCommandInput, options?: __HttpHandlerOptions): Promise<CreateRestoreImageTaskCommandOutput>;
    createRestoreImageTask(args: CreateRestoreImageTaskCommandInput, cb: (err: any, data?: CreateRestoreImageTaskCommandOutput) => void): void;
    createRestoreImageTask(args: CreateRestoreImageTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRestoreImageTaskCommandOutput) => void): void;
    
    createRoute(args: CreateRouteCommandInput, options?: __HttpHandlerOptions): Promise<CreateRouteCommandOutput>;
    createRoute(args: CreateRouteCommandInput, cb: (err: any, data?: CreateRouteCommandOutput) => void): void;
    createRoute(args: CreateRouteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRouteCommandOutput) => void): void;
    
    createRouteTable(args: CreateRouteTableCommandInput, options?: __HttpHandlerOptions): Promise<CreateRouteTableCommandOutput>;
    createRouteTable(args: CreateRouteTableCommandInput, cb: (err: any, data?: CreateRouteTableCommandOutput) => void): void;
    createRouteTable(args: CreateRouteTableCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRouteTableCommandOutput) => void): void;
    
    createSecurityGroup(args: CreateSecurityGroupCommandInput, options?: __HttpHandlerOptions): Promise<CreateSecurityGroupCommandOutput>;
    createSecurityGroup(args: CreateSecurityGroupCommandInput, cb: (err: any, data?: CreateSecurityGroupCommandOutput) => void): void;
    createSecurityGroup(args: CreateSecurityGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSecurityGroupCommandOutput) => void): void;
    
    createSnapshot(args: CreateSnapshotCommandInput, options?: __HttpHandlerOptions): Promise<CreateSnapshotCommandOutput>;
    createSnapshot(args: CreateSnapshotCommandInput, cb: (err: any, data?: CreateSnapshotCommandOutput) => void): void;
    createSnapshot(args: CreateSnapshotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSnapshotCommandOutput) => void): void;
    
    createSnapshots(args: CreateSnapshotsCommandInput, options?: __HttpHandlerOptions): Promise<CreateSnapshotsCommandOutput>;
    createSnapshots(args: CreateSnapshotsCommandInput, cb: (err: any, data?: CreateSnapshotsCommandOutput) => void): void;
    createSnapshots(args: CreateSnapshotsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSnapshotsCommandOutput) => void): void;
    
    createSpotDatafeedSubscription(args: CreateSpotDatafeedSubscriptionCommandInput, options?: __HttpHandlerOptions): Promise<CreateSpotDatafeedSubscriptionCommandOutput>;
    createSpotDatafeedSubscription(args: CreateSpotDatafeedSubscriptionCommandInput, cb: (err: any, data?: CreateSpotDatafeedSubscriptionCommandOutput) => void): void;
    createSpotDatafeedSubscription(args: CreateSpotDatafeedSubscriptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSpotDatafeedSubscriptionCommandOutput) => void): void;
    
    createStoreImageTask(args: CreateStoreImageTaskCommandInput, options?: __HttpHandlerOptions): Promise<CreateStoreImageTaskCommandOutput>;
    createStoreImageTask(args: CreateStoreImageTaskCommandInput, cb: (err: any, data?: CreateStoreImageTaskCommandOutput) => void): void;
    createStoreImageTask(args: CreateStoreImageTaskCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateStoreImageTaskCommandOutput) => void): void;
    
    createSubnet(args: CreateSubnetCommandInput, options?: __HttpHandlerOptions): Promise<CreateSubnetCommandOutput>;
    createSubnet(args: CreateSubnetCommandInput, cb: (err: any, data?: CreateSubnetCommandOutput) => void): void;
    createSubnet(args: CreateSubnetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSubnetCommandOutput) => void): void;
    
    createSubnetCidrReservation(args: CreateSubnetCidrReservationCommandInput, options?: __HttpHandlerOptions): Promise<CreateSubnetCidrReservationCommandOutput>;
    createSubnetCidrReservation(args: CreateSubnetCidrReservationCommandInput, cb: (err: any, data?: CreateSubnetCidrReservationCommandOutput) => void): void;
    createSubnetCidrReservation(args: CreateSubnetCidrReservationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSubnetCidrReservationCommandOutput) => void): void;
    
    createTags(args: CreateTagsCommandInput, options?: __HttpHandlerOptions): Promise<CreateTagsCommandOutput>;
    createTags(args: CreateTagsCommandInput, cb: (err: any, data?: CreateTagsCommandOutput) => void): void;
    createTags(args: CreateTagsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTagsCommandOutput) => void): void;
    
    createTrafficMirrorFilter(args: CreateTrafficMirrorFilterCommandInput, options?: __HttpHandlerOptions): Promise<CreateTrafficMirrorFilterCommandOutput>;
    createTrafficMirrorFilter(args: CreateTrafficMirrorFilterCommandInput, cb: (err: any, data?: CreateTrafficMirrorFilterCommandOutput) => void): void;
    createTrafficMirrorFilter(args: CreateTrafficMirrorFilterCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTrafficMirrorFilterCommandOutput) => void): void;
    
    createTrafficMirrorFilterRule(args: CreateTrafficMirrorFilterRuleCommandInput, options?: __HttpHandlerOptions): Promise<CreateTrafficMirrorFilterRuleCommandOutput>;
    createTrafficMirrorFilterRule(args: CreateTrafficMirrorFilterRuleCommandInput, cb: (err: any, data?: CreateTrafficMirrorFilterRuleCommandOutput) => void): void;
    createTrafficMirrorFilterRule(args: CreateTrafficMirrorFilterRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTrafficMirrorFilterRuleCommandOutput) => void): void;
    
    createTrafficMirrorSession(args: CreateTrafficMirrorSessionCommandInput, options?: __HttpHandlerOptions): Promise<CreateTrafficMirrorSessionCommandOutput>;
    createTrafficMirrorSession(args: CreateTrafficMirrorSessionCommandInput, cb: (err: any, data?: CreateTrafficMirrorSessionCommandOutput) => void): void;
    createTrafficMirrorSession(args: CreateTrafficMirrorSessionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTrafficMirrorSessionCommandOutput) => void): void;
    
    createTrafficMirrorTarget(args: CreateTrafficMirrorTargetCommandInput, options?: __HttpHandlerOptions): Promise<CreateTrafficMirrorTargetCommandOutput>;
    createTrafficMirrorTarget(args: CreateTrafficMirrorTargetCommandInput, cb: (err: any, data?: CreateTrafficMirrorTargetCommandOutput) => void): void;
    createTrafficMirrorTarget(args: CreateTrafficMirrorTargetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTrafficMirrorTargetCommandOutput) => void): void;
    
    createTransitGateway(args: CreateTransitGatewayCommandInput, options?: __HttpHandlerOptions): Promise<CreateTransitGatewayCommandOutput>;
    createTransitGateway(args: CreateTransitGatewayCommandInput, cb: (err: any, data?: CreateTransitGatewayCommandOutput) => void): void;
    createTransitGateway(args: CreateTransitGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTransitGatewayCommandOutput) => void): void;
    
    createTransitGatewayConnect(args: CreateTransitGatewayConnectCommandInput, options?: __HttpHandlerOptions): Promise<CreateTransitGatewayConnectCommandOutput>;
    createTransitGatewayConnect(args: CreateTransitGatewayConnectCommandInput, cb: (err: any, data?: CreateTransitGatewayConnectCommandOutput) => void): void;
    createTransitGatewayConnect(args: CreateTransitGatewayConnectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTransitGatewayConnectCommandOutput) => void): void;
    
    createTransitGatewayConnectPeer(args: CreateTransitGatewayConnectPeerCommandInput, options?: __HttpHandlerOptions): Promise<CreateTransitGatewayConnectPeerCommandOutput>;
    createTransitGatewayConnectPeer(args: CreateTransitGatewayConnectPeerCommandInput, cb: (err: any, data?: CreateTransitGatewayConnectPeerCommandOutput) => void): void;
    createTransitGatewayConnectPeer(args: CreateTransitGatewayConnectPeerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTransitGatewayConnectPeerCommandOutput) => void): void;
    
    createTransitGatewayMulticastDomain(args: CreateTransitGatewayMulticastDomainCommandInput, options?: __HttpHandlerOptions): Promise<CreateTransitGatewayMulticastDomainCommandOutput>;
    createTransitGatewayMulticastDomain(args: CreateTransitGatewayMulticastDomainCommandInput, cb: (err: any, data?: CreateTransitGatewayMulticastDomainCommandOutput) => void): void;
    createTransitGatewayMulticastDomain(args: CreateTransitGatewayMulticastDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTransitGatewayMulticastDomainCommandOutput) => void): void;
    
    createTransitGatewayPeeringAttachment(args: CreateTransitGatewayPeeringAttachmentCommandInput, options?: __HttpHandlerOptions): Promise<CreateTransitGatewayPeeringAttachmentCommandOutput>;
    createTransitGatewayPeeringAttachment(args: CreateTransitGatewayPeeringAttachmentCommandInput, cb: (err: any, data?: CreateTransitGatewayPeeringAttachmentCommandOutput) => void): void;
    createTransitGatewayPeeringAttachment(args: CreateTransitGatewayPeeringAttachmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTransitGatewayPeeringAttachmentCommandOutput) => void): void;
    
    createTransitGatewayPrefixListReference(args: CreateTransitGatewayPrefixListReferenceCommandInput, options?: __HttpHandlerOptions): Promise<CreateTransitGatewayPrefixListReferenceCommandOutput>;
    createTransitGatewayPrefixListReference(args: CreateTransitGatewayPrefixListReferenceCommandInput, cb: (err: any, data?: CreateTransitGatewayPrefixListReferenceCommandOutput) => void): void;
    createTransitGatewayPrefixListReference(args: CreateTransitGatewayPrefixListReferenceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTransitGatewayPrefixListReferenceCommandOutput) => void): void;
    
    createTransitGatewayRoute(args: CreateTransitGatewayRouteCommandInput, options?: __HttpHandlerOptions): Promise<CreateTransitGatewayRouteCommandOutput>;
    createTransitGatewayRoute(args: CreateTransitGatewayRouteCommandInput, cb: (err: any, data?: CreateTransitGatewayRouteCommandOutput) => void): void;
    createTransitGatewayRoute(args: CreateTransitGatewayRouteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTransitGatewayRouteCommandOutput) => void): void;
    
    createTransitGatewayRouteTable(args: CreateTransitGatewayRouteTableCommandInput, options?: __HttpHandlerOptions): Promise<CreateTransitGatewayRouteTableCommandOutput>;
    createTransitGatewayRouteTable(args: CreateTransitGatewayRouteTableCommandInput, cb: (err: any, data?: CreateTransitGatewayRouteTableCommandOutput) => void): void;
    createTransitGatewayRouteTable(args: CreateTransitGatewayRouteTableCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTransitGatewayRouteTableCommandOutput) => void): void;
    
    createTransitGatewayVpcAttachment(args: CreateTransitGatewayVpcAttachmentCommandInput, options?: __HttpHandlerOptions): Promise<CreateTransitGatewayVpcAttachmentCommandOutput>;
    createTransitGatewayVpcAttachment(args: CreateTransitGatewayVpcAttachmentCommandInput, cb: (err: any, data?: CreateTransitGatewayVpcAttachmentCommandOutput) => void): void;
    createTransitGatewayVpcAttachment(args: CreateTransitGatewayVpcAttachmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTransitGatewayVpcAttachmentCommandOutput) => void): void;
    
    createVolume(args: CreateVolumeCommandInput, options?: __HttpHandlerOptions): Promise<CreateVolumeCommandOutput>;
    createVolume(args: CreateVolumeCommandInput, cb: (err: any, data?: CreateVolumeCommandOutput) => void): void;
    createVolume(args: CreateVolumeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVolumeCommandOutput) => void): void;
    
    createVpc(args: CreateVpcCommandInput, options?: __HttpHandlerOptions): Promise<CreateVpcCommandOutput>;
    createVpc(args: CreateVpcCommandInput, cb: (err: any, data?: CreateVpcCommandOutput) => void): void;
    createVpc(args: CreateVpcCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVpcCommandOutput) => void): void;
    
    createVpcEndpoint(args: CreateVpcEndpointCommandInput, options?: __HttpHandlerOptions): Promise<CreateVpcEndpointCommandOutput>;
    createVpcEndpoint(args: CreateVpcEndpointCommandInput, cb: (err: any, data?: CreateVpcEndpointCommandOutput) => void): void;
    createVpcEndpoint(args: CreateVpcEndpointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVpcEndpointCommandOutput) => void): void;
    
    createVpcEndpointConnectionNotification(args: CreateVpcEndpointConnectionNotificationCommandInput, options?: __HttpHandlerOptions): Promise<CreateVpcEndpointConnectionNotificationCommandOutput>;
    createVpcEndpointConnectionNotification(args: CreateVpcEndpointConnectionNotificationCommandInput, cb: (err: any, data?: CreateVpcEndpointConnectionNotificationCommandOutput) => void): void;
    createVpcEndpointConnectionNotification(args: CreateVpcEndpointConnectionNotificationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVpcEndpointConnectionNotificationCommandOutput) => void): void;
    
    createVpcEndpointServiceConfiguration(args: CreateVpcEndpointServiceConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<CreateVpcEndpointServiceConfigurationCommandOutput>;
    createVpcEndpointServiceConfiguration(args: CreateVpcEndpointServiceConfigurationCommandInput, cb: (err: any, data?: CreateVpcEndpointServiceConfigurationCommandOutput) => void): void;
    createVpcEndpointServiceConfiguration(args: CreateVpcEndpointServiceConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVpcEndpointServiceConfigurationCommandOutput) => void): void;
    
    createVpcPeeringConnection(args: CreateVpcPeeringConnectionCommandInput, options?: __HttpHandlerOptions): Promise<CreateVpcPeeringConnectionCommandOutput>;
    createVpcPeeringConnection(args: CreateVpcPeeringConnectionCommandInput, cb: (err: any, data?: CreateVpcPeeringConnectionCommandOutput) => void): void;
    createVpcPeeringConnection(args: CreateVpcPeeringConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVpcPeeringConnectionCommandOutput) => void): void;
    
    createVpnConnection(args: CreateVpnConnectionCommandInput, options?: __HttpHandlerOptions): Promise<CreateVpnConnectionCommandOutput>;
    createVpnConnection(args: CreateVpnConnectionCommandInput, cb: (err: any, data?: CreateVpnConnectionCommandOutput) => void): void;
    createVpnConnection(args: CreateVpnConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVpnConnectionCommandOutput) => void): void;
    
    createVpnConnectionRoute(args: CreateVpnConnectionRouteCommandInput, options?: __HttpHandlerOptions): Promise<CreateVpnConnectionRouteCommandOutput>;
    createVpnConnectionRoute(args: CreateVpnConnectionRouteCommandInput, cb: (err: any, data?: CreateVpnConnectionRouteCommandOutput) => void): void;
    createVpnConnectionRoute(args: CreateVpnConnectionRouteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVpnConnectionRouteCommandOutput) => void): void;
    
    createVpnGateway(args: CreateVpnGatewayCommandInput, options?: __HttpHandlerOptions): Promise<CreateVpnGatewayCommandOutput>;
    createVpnGateway(args: CreateVpnGatewayCommandInput, cb: (err: any, data?: CreateVpnGatewayCommandOutput) => void): void;
    createVpnGateway(args: CreateVpnGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVpnGatewayCommandOutput) => void): void;
    
    deleteCarrierGateway(args: DeleteCarrierGatewayCommandInput, options?: __HttpHandlerOptions): Promise<DeleteCarrierGatewayCommandOutput>;
    deleteCarrierGateway(args: DeleteCarrierGatewayCommandInput, cb: (err: any, data?: DeleteCarrierGatewayCommandOutput) => void): void;
    deleteCarrierGateway(args: DeleteCarrierGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteCarrierGatewayCommandOutput) => void): void;
    
    deleteClientVpnEndpoint(args: DeleteClientVpnEndpointCommandInput, options?: __HttpHandlerOptions): Promise<DeleteClientVpnEndpointCommandOutput>;
    deleteClientVpnEndpoint(args: DeleteClientVpnEndpointCommandInput, cb: (err: any, data?: DeleteClientVpnEndpointCommandOutput) => void): void;
    deleteClientVpnEndpoint(args: DeleteClientVpnEndpointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteClientVpnEndpointCommandOutput) => void): void;
    
    deleteClientVpnRoute(args: DeleteClientVpnRouteCommandInput, options?: __HttpHandlerOptions): Promise<DeleteClientVpnRouteCommandOutput>;
    deleteClientVpnRoute(args: DeleteClientVpnRouteCommandInput, cb: (err: any, data?: DeleteClientVpnRouteCommandOutput) => void): void;
    deleteClientVpnRoute(args: DeleteClientVpnRouteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteClientVpnRouteCommandOutput) => void): void;
    
    deleteCustomerGateway(args: DeleteCustomerGatewayCommandInput, options?: __HttpHandlerOptions): Promise<DeleteCustomerGatewayCommandOutput>;
    deleteCustomerGateway(args: DeleteCustomerGatewayCommandInput, cb: (err: any, data?: DeleteCustomerGatewayCommandOutput) => void): void;
    deleteCustomerGateway(args: DeleteCustomerGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteCustomerGatewayCommandOutput) => void): void;
    
    deleteDhcpOptions(args: DeleteDhcpOptionsCommandInput, options?: __HttpHandlerOptions): Promise<DeleteDhcpOptionsCommandOutput>;
    deleteDhcpOptions(args: DeleteDhcpOptionsCommandInput, cb: (err: any, data?: DeleteDhcpOptionsCommandOutput) => void): void;
    deleteDhcpOptions(args: DeleteDhcpOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteDhcpOptionsCommandOutput) => void): void;
    
    deleteEgressOnlyInternetGateway(args: DeleteEgressOnlyInternetGatewayCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEgressOnlyInternetGatewayCommandOutput>;
    deleteEgressOnlyInternetGateway(args: DeleteEgressOnlyInternetGatewayCommandInput, cb: (err: any, data?: DeleteEgressOnlyInternetGatewayCommandOutput) => void): void;
    deleteEgressOnlyInternetGateway(args: DeleteEgressOnlyInternetGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEgressOnlyInternetGatewayCommandOutput) => void): void;
    
    deleteFleets(args: DeleteFleetsCommandInput, options?: __HttpHandlerOptions): Promise<DeleteFleetsCommandOutput>;
    deleteFleets(args: DeleteFleetsCommandInput, cb: (err: any, data?: DeleteFleetsCommandOutput) => void): void;
    deleteFleets(args: DeleteFleetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteFleetsCommandOutput) => void): void;
    
    deleteFlowLogs(args: DeleteFlowLogsCommandInput, options?: __HttpHandlerOptions): Promise<DeleteFlowLogsCommandOutput>;
    deleteFlowLogs(args: DeleteFlowLogsCommandInput, cb: (err: any, data?: DeleteFlowLogsCommandOutput) => void): void;
    deleteFlowLogs(args: DeleteFlowLogsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteFlowLogsCommandOutput) => void): void;
    
    deleteFpgaImage(args: DeleteFpgaImageCommandInput, options?: __HttpHandlerOptions): Promise<DeleteFpgaImageCommandOutput>;
    deleteFpgaImage(args: DeleteFpgaImageCommandInput, cb: (err: any, data?: DeleteFpgaImageCommandOutput) => void): void;
    deleteFpgaImage(args: DeleteFpgaImageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteFpgaImageCommandOutput) => void): void;
    
    deleteInstanceEventWindow(args: DeleteInstanceEventWindowCommandInput, options?: __HttpHandlerOptions): Promise<DeleteInstanceEventWindowCommandOutput>;
    deleteInstanceEventWindow(args: DeleteInstanceEventWindowCommandInput, cb: (err: any, data?: DeleteInstanceEventWindowCommandOutput) => void): void;
    deleteInstanceEventWindow(args: DeleteInstanceEventWindowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteInstanceEventWindowCommandOutput) => void): void;
    
    deleteInternetGateway(args: DeleteInternetGatewayCommandInput, options?: __HttpHandlerOptions): Promise<DeleteInternetGatewayCommandOutput>;
    deleteInternetGateway(args: DeleteInternetGatewayCommandInput, cb: (err: any, data?: DeleteInternetGatewayCommandOutput) => void): void;
    deleteInternetGateway(args: DeleteInternetGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteInternetGatewayCommandOutput) => void): void;
    
    deleteIpam(args: DeleteIpamCommandInput, options?: __HttpHandlerOptions): Promise<DeleteIpamCommandOutput>;
    deleteIpam(args: DeleteIpamCommandInput, cb: (err: any, data?: DeleteIpamCommandOutput) => void): void;
    deleteIpam(args: DeleteIpamCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteIpamCommandOutput) => void): void;
    
    deleteIpamPool(args: DeleteIpamPoolCommandInput, options?: __HttpHandlerOptions): Promise<DeleteIpamPoolCommandOutput>;
    deleteIpamPool(args: DeleteIpamPoolCommandInput, cb: (err: any, data?: DeleteIpamPoolCommandOutput) => void): void;
    deleteIpamPool(args: DeleteIpamPoolCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteIpamPoolCommandOutput) => void): void;
    
    deleteIpamScope(args: DeleteIpamScopeCommandInput, options?: __HttpHandlerOptions): Promise<DeleteIpamScopeCommandOutput>;
    deleteIpamScope(args: DeleteIpamScopeCommandInput, cb: (err: any, data?: DeleteIpamScopeCommandOutput) => void): void;
    deleteIpamScope(args: DeleteIpamScopeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteIpamScopeCommandOutput) => void): void;
    
    deleteKeyPair(args: DeleteKeyPairCommandInput, options?: __HttpHandlerOptions): Promise<DeleteKeyPairCommandOutput>;
    deleteKeyPair(args: DeleteKeyPairCommandInput, cb: (err: any, data?: DeleteKeyPairCommandOutput) => void): void;
    deleteKeyPair(args: DeleteKeyPairCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteKeyPairCommandOutput) => void): void;
    
    deleteLaunchTemplate(args: DeleteLaunchTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteLaunchTemplateCommandOutput>;
    deleteLaunchTemplate(args: DeleteLaunchTemplateCommandInput, cb: (err: any, data?: DeleteLaunchTemplateCommandOutput) => void): void;
    deleteLaunchTemplate(args: DeleteLaunchTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteLaunchTemplateCommandOutput) => void): void;
    
    deleteLaunchTemplateVersions(args: DeleteLaunchTemplateVersionsCommandInput, options?: __HttpHandlerOptions): Promise<DeleteLaunchTemplateVersionsCommandOutput>;
    deleteLaunchTemplateVersions(args: DeleteLaunchTemplateVersionsCommandInput, cb: (err: any, data?: DeleteLaunchTemplateVersionsCommandOutput) => void): void;
    deleteLaunchTemplateVersions(args: DeleteLaunchTemplateVersionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteLaunchTemplateVersionsCommandOutput) => void): void;
    
    deleteLocalGatewayRoute(args: DeleteLocalGatewayRouteCommandInput, options?: __HttpHandlerOptions): Promise<DeleteLocalGatewayRouteCommandOutput>;
    deleteLocalGatewayRoute(args: DeleteLocalGatewayRouteCommandInput, cb: (err: any, data?: DeleteLocalGatewayRouteCommandOutput) => void): void;
    deleteLocalGatewayRoute(args: DeleteLocalGatewayRouteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteLocalGatewayRouteCommandOutput) => void): void;
    
    deleteLocalGatewayRouteTableVpcAssociation(args: DeleteLocalGatewayRouteTableVpcAssociationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteLocalGatewayRouteTableVpcAssociationCommandOutput>;
    deleteLocalGatewayRouteTableVpcAssociation(args: DeleteLocalGatewayRouteTableVpcAssociationCommandInput, cb: (err: any, data?: DeleteLocalGatewayRouteTableVpcAssociationCommandOutput) => void): void;
    deleteLocalGatewayRouteTableVpcAssociation(args: DeleteLocalGatewayRouteTableVpcAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteLocalGatewayRouteTableVpcAssociationCommandOutput) => void): void;
    
    deleteManagedPrefixList(args: DeleteManagedPrefixListCommandInput, options?: __HttpHandlerOptions): Promise<DeleteManagedPrefixListCommandOutput>;
    deleteManagedPrefixList(args: DeleteManagedPrefixListCommandInput, cb: (err: any, data?: DeleteManagedPrefixListCommandOutput) => void): void;
    deleteManagedPrefixList(args: DeleteManagedPrefixListCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteManagedPrefixListCommandOutput) => void): void;
    
    deleteNatGateway(args: DeleteNatGatewayCommandInput, options?: __HttpHandlerOptions): Promise<DeleteNatGatewayCommandOutput>;
    deleteNatGateway(args: DeleteNatGatewayCommandInput, cb: (err: any, data?: DeleteNatGatewayCommandOutput) => void): void;
    deleteNatGateway(args: DeleteNatGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteNatGatewayCommandOutput) => void): void;
    
    deleteNetworkAcl(args: DeleteNetworkAclCommandInput, options?: __HttpHandlerOptions): Promise<DeleteNetworkAclCommandOutput>;
    deleteNetworkAcl(args: DeleteNetworkAclCommandInput, cb: (err: any, data?: DeleteNetworkAclCommandOutput) => void): void;
    deleteNetworkAcl(args: DeleteNetworkAclCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteNetworkAclCommandOutput) => void): void;
    
    deleteNetworkAclEntry(args: DeleteNetworkAclEntryCommandInput, options?: __HttpHandlerOptions): Promise<DeleteNetworkAclEntryCommandOutput>;
    deleteNetworkAclEntry(args: DeleteNetworkAclEntryCommandInput, cb: (err: any, data?: DeleteNetworkAclEntryCommandOutput) => void): void;
    deleteNetworkAclEntry(args: DeleteNetworkAclEntryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteNetworkAclEntryCommandOutput) => void): void;
    
    deleteNetworkInsightsAccessScope(args: DeleteNetworkInsightsAccessScopeCommandInput, options?: __HttpHandlerOptions): Promise<DeleteNetworkInsightsAccessScopeCommandOutput>;
    deleteNetworkInsightsAccessScope(args: DeleteNetworkInsightsAccessScopeCommandInput, cb: (err: any, data?: DeleteNetworkInsightsAccessScopeCommandOutput) => void): void;
    deleteNetworkInsightsAccessScope(args: DeleteNetworkInsightsAccessScopeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteNetworkInsightsAccessScopeCommandOutput) => void): void;
    
    deleteNetworkInsightsAccessScopeAnalysis(args: DeleteNetworkInsightsAccessScopeAnalysisCommandInput, options?: __HttpHandlerOptions): Promise<DeleteNetworkInsightsAccessScopeAnalysisCommandOutput>;
    deleteNetworkInsightsAccessScopeAnalysis(args: DeleteNetworkInsightsAccessScopeAnalysisCommandInput, cb: (err: any, data?: DeleteNetworkInsightsAccessScopeAnalysisCommandOutput) => void): void;
    deleteNetworkInsightsAccessScopeAnalysis(args: DeleteNetworkInsightsAccessScopeAnalysisCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteNetworkInsightsAccessScopeAnalysisCommandOutput) => void): void;
    
    deleteNetworkInsightsAnalysis(args: DeleteNetworkInsightsAnalysisCommandInput, options?: __HttpHandlerOptions): Promise<DeleteNetworkInsightsAnalysisCommandOutput>;
    deleteNetworkInsightsAnalysis(args: DeleteNetworkInsightsAnalysisCommandInput, cb: (err: any, data?: DeleteNetworkInsightsAnalysisCommandOutput) => void): void;
    deleteNetworkInsightsAnalysis(args: DeleteNetworkInsightsAnalysisCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteNetworkInsightsAnalysisCommandOutput) => void): void;
    
    deleteNetworkInsightsPath(args: DeleteNetworkInsightsPathCommandInput, options?: __HttpHandlerOptions): Promise<DeleteNetworkInsightsPathCommandOutput>;
    deleteNetworkInsightsPath(args: DeleteNetworkInsightsPathCommandInput, cb: (err: any, data?: DeleteNetworkInsightsPathCommandOutput) => void): void;
    deleteNetworkInsightsPath(args: DeleteNetworkInsightsPathCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteNetworkInsightsPathCommandOutput) => void): void;
    
    deleteNetworkInterface(args: DeleteNetworkInterfaceCommandInput, options?: __HttpHandlerOptions): Promise<DeleteNetworkInterfaceCommandOutput>;
    deleteNetworkInterface(args: DeleteNetworkInterfaceCommandInput, cb: (err: any, data?: DeleteNetworkInterfaceCommandOutput) => void): void;
    deleteNetworkInterface(args: DeleteNetworkInterfaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteNetworkInterfaceCommandOutput) => void): void;
    
    deleteNetworkInterfacePermission(args: DeleteNetworkInterfacePermissionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteNetworkInterfacePermissionCommandOutput>;
    deleteNetworkInterfacePermission(args: DeleteNetworkInterfacePermissionCommandInput, cb: (err: any, data?: DeleteNetworkInterfacePermissionCommandOutput) => void): void;
    deleteNetworkInterfacePermission(args: DeleteNetworkInterfacePermissionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteNetworkInterfacePermissionCommandOutput) => void): void;
    
    deletePlacementGroup(args: DeletePlacementGroupCommandInput, options?: __HttpHandlerOptions): Promise<DeletePlacementGroupCommandOutput>;
    deletePlacementGroup(args: DeletePlacementGroupCommandInput, cb: (err: any, data?: DeletePlacementGroupCommandOutput) => void): void;
    deletePlacementGroup(args: DeletePlacementGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeletePlacementGroupCommandOutput) => void): void;
    
    deletePublicIpv4Pool(args: DeletePublicIpv4PoolCommandInput, options?: __HttpHandlerOptions): Promise<DeletePublicIpv4PoolCommandOutput>;
    deletePublicIpv4Pool(args: DeletePublicIpv4PoolCommandInput, cb: (err: any, data?: DeletePublicIpv4PoolCommandOutput) => void): void;
    deletePublicIpv4Pool(args: DeletePublicIpv4PoolCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeletePublicIpv4PoolCommandOutput) => void): void;
    
    deleteQueuedReservedInstances(args: DeleteQueuedReservedInstancesCommandInput, options?: __HttpHandlerOptions): Promise<DeleteQueuedReservedInstancesCommandOutput>;
    deleteQueuedReservedInstances(args: DeleteQueuedReservedInstancesCommandInput, cb: (err: any, data?: DeleteQueuedReservedInstancesCommandOutput) => void): void;
    deleteQueuedReservedInstances(args: DeleteQueuedReservedInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteQueuedReservedInstancesCommandOutput) => void): void;
    
    deleteRoute(args: DeleteRouteCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRouteCommandOutput>;
    deleteRoute(args: DeleteRouteCommandInput, cb: (err: any, data?: DeleteRouteCommandOutput) => void): void;
    deleteRoute(args: DeleteRouteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRouteCommandOutput) => void): void;
    
    deleteRouteTable(args: DeleteRouteTableCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRouteTableCommandOutput>;
    deleteRouteTable(args: DeleteRouteTableCommandInput, cb: (err: any, data?: DeleteRouteTableCommandOutput) => void): void;
    deleteRouteTable(args: DeleteRouteTableCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRouteTableCommandOutput) => void): void;
    
    deleteSecurityGroup(args: DeleteSecurityGroupCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSecurityGroupCommandOutput>;
    deleteSecurityGroup(args: DeleteSecurityGroupCommandInput, cb: (err: any, data?: DeleteSecurityGroupCommandOutput) => void): void;
    deleteSecurityGroup(args: DeleteSecurityGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSecurityGroupCommandOutput) => void): void;
    
    deleteSnapshot(args: DeleteSnapshotCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSnapshotCommandOutput>;
    deleteSnapshot(args: DeleteSnapshotCommandInput, cb: (err: any, data?: DeleteSnapshotCommandOutput) => void): void;
    deleteSnapshot(args: DeleteSnapshotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSnapshotCommandOutput) => void): void;
    
    deleteSpotDatafeedSubscription(args: DeleteSpotDatafeedSubscriptionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSpotDatafeedSubscriptionCommandOutput>;
    deleteSpotDatafeedSubscription(args: DeleteSpotDatafeedSubscriptionCommandInput, cb: (err: any, data?: DeleteSpotDatafeedSubscriptionCommandOutput) => void): void;
    deleteSpotDatafeedSubscription(args: DeleteSpotDatafeedSubscriptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSpotDatafeedSubscriptionCommandOutput) => void): void;
    
    deleteSubnet(args: DeleteSubnetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSubnetCommandOutput>;
    deleteSubnet(args: DeleteSubnetCommandInput, cb: (err: any, data?: DeleteSubnetCommandOutput) => void): void;
    deleteSubnet(args: DeleteSubnetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSubnetCommandOutput) => void): void;
    
    deleteSubnetCidrReservation(args: DeleteSubnetCidrReservationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSubnetCidrReservationCommandOutput>;
    deleteSubnetCidrReservation(args: DeleteSubnetCidrReservationCommandInput, cb: (err: any, data?: DeleteSubnetCidrReservationCommandOutput) => void): void;
    deleteSubnetCidrReservation(args: DeleteSubnetCidrReservationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSubnetCidrReservationCommandOutput) => void): void;
    
    deleteTags(args: DeleteTagsCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTagsCommandOutput>;
    deleteTags(args: DeleteTagsCommandInput, cb: (err: any, data?: DeleteTagsCommandOutput) => void): void;
    deleteTags(args: DeleteTagsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTagsCommandOutput) => void): void;
    
    deleteTrafficMirrorFilter(args: DeleteTrafficMirrorFilterCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTrafficMirrorFilterCommandOutput>;
    deleteTrafficMirrorFilter(args: DeleteTrafficMirrorFilterCommandInput, cb: (err: any, data?: DeleteTrafficMirrorFilterCommandOutput) => void): void;
    deleteTrafficMirrorFilter(args: DeleteTrafficMirrorFilterCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTrafficMirrorFilterCommandOutput) => void): void;
    
    deleteTrafficMirrorFilterRule(args: DeleteTrafficMirrorFilterRuleCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTrafficMirrorFilterRuleCommandOutput>;
    deleteTrafficMirrorFilterRule(args: DeleteTrafficMirrorFilterRuleCommandInput, cb: (err: any, data?: DeleteTrafficMirrorFilterRuleCommandOutput) => void): void;
    deleteTrafficMirrorFilterRule(args: DeleteTrafficMirrorFilterRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTrafficMirrorFilterRuleCommandOutput) => void): void;
    
    deleteTrafficMirrorSession(args: DeleteTrafficMirrorSessionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTrafficMirrorSessionCommandOutput>;
    deleteTrafficMirrorSession(args: DeleteTrafficMirrorSessionCommandInput, cb: (err: any, data?: DeleteTrafficMirrorSessionCommandOutput) => void): void;
    deleteTrafficMirrorSession(args: DeleteTrafficMirrorSessionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTrafficMirrorSessionCommandOutput) => void): void;
    
    deleteTrafficMirrorTarget(args: DeleteTrafficMirrorTargetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTrafficMirrorTargetCommandOutput>;
    deleteTrafficMirrorTarget(args: DeleteTrafficMirrorTargetCommandInput, cb: (err: any, data?: DeleteTrafficMirrorTargetCommandOutput) => void): void;
    deleteTrafficMirrorTarget(args: DeleteTrafficMirrorTargetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTrafficMirrorTargetCommandOutput) => void): void;
    
    deleteTransitGateway(args: DeleteTransitGatewayCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTransitGatewayCommandOutput>;
    deleteTransitGateway(args: DeleteTransitGatewayCommandInput, cb: (err: any, data?: DeleteTransitGatewayCommandOutput) => void): void;
    deleteTransitGateway(args: DeleteTransitGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTransitGatewayCommandOutput) => void): void;
    
    deleteTransitGatewayConnect(args: DeleteTransitGatewayConnectCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTransitGatewayConnectCommandOutput>;
    deleteTransitGatewayConnect(args: DeleteTransitGatewayConnectCommandInput, cb: (err: any, data?: DeleteTransitGatewayConnectCommandOutput) => void): void;
    deleteTransitGatewayConnect(args: DeleteTransitGatewayConnectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTransitGatewayConnectCommandOutput) => void): void;
    
    deleteTransitGatewayConnectPeer(args: DeleteTransitGatewayConnectPeerCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTransitGatewayConnectPeerCommandOutput>;
    deleteTransitGatewayConnectPeer(args: DeleteTransitGatewayConnectPeerCommandInput, cb: (err: any, data?: DeleteTransitGatewayConnectPeerCommandOutput) => void): void;
    deleteTransitGatewayConnectPeer(args: DeleteTransitGatewayConnectPeerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTransitGatewayConnectPeerCommandOutput) => void): void;
    
    deleteTransitGatewayMulticastDomain(args: DeleteTransitGatewayMulticastDomainCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTransitGatewayMulticastDomainCommandOutput>;
    deleteTransitGatewayMulticastDomain(args: DeleteTransitGatewayMulticastDomainCommandInput, cb: (err: any, data?: DeleteTransitGatewayMulticastDomainCommandOutput) => void): void;
    deleteTransitGatewayMulticastDomain(args: DeleteTransitGatewayMulticastDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTransitGatewayMulticastDomainCommandOutput) => void): void;
    
    deleteTransitGatewayPeeringAttachment(args: DeleteTransitGatewayPeeringAttachmentCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTransitGatewayPeeringAttachmentCommandOutput>;
    deleteTransitGatewayPeeringAttachment(args: DeleteTransitGatewayPeeringAttachmentCommandInput, cb: (err: any, data?: DeleteTransitGatewayPeeringAttachmentCommandOutput) => void): void;
    deleteTransitGatewayPeeringAttachment(args: DeleteTransitGatewayPeeringAttachmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTransitGatewayPeeringAttachmentCommandOutput) => void): void;
    
    deleteTransitGatewayPrefixListReference(args: DeleteTransitGatewayPrefixListReferenceCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTransitGatewayPrefixListReferenceCommandOutput>;
    deleteTransitGatewayPrefixListReference(args: DeleteTransitGatewayPrefixListReferenceCommandInput, cb: (err: any, data?: DeleteTransitGatewayPrefixListReferenceCommandOutput) => void): void;
    deleteTransitGatewayPrefixListReference(args: DeleteTransitGatewayPrefixListReferenceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTransitGatewayPrefixListReferenceCommandOutput) => void): void;
    
    deleteTransitGatewayRoute(args: DeleteTransitGatewayRouteCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTransitGatewayRouteCommandOutput>;
    deleteTransitGatewayRoute(args: DeleteTransitGatewayRouteCommandInput, cb: (err: any, data?: DeleteTransitGatewayRouteCommandOutput) => void): void;
    deleteTransitGatewayRoute(args: DeleteTransitGatewayRouteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTransitGatewayRouteCommandOutput) => void): void;
    
    deleteTransitGatewayRouteTable(args: DeleteTransitGatewayRouteTableCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTransitGatewayRouteTableCommandOutput>;
    deleteTransitGatewayRouteTable(args: DeleteTransitGatewayRouteTableCommandInput, cb: (err: any, data?: DeleteTransitGatewayRouteTableCommandOutput) => void): void;
    deleteTransitGatewayRouteTable(args: DeleteTransitGatewayRouteTableCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTransitGatewayRouteTableCommandOutput) => void): void;
    
    deleteTransitGatewayVpcAttachment(args: DeleteTransitGatewayVpcAttachmentCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTransitGatewayVpcAttachmentCommandOutput>;
    deleteTransitGatewayVpcAttachment(args: DeleteTransitGatewayVpcAttachmentCommandInput, cb: (err: any, data?: DeleteTransitGatewayVpcAttachmentCommandOutput) => void): void;
    deleteTransitGatewayVpcAttachment(args: DeleteTransitGatewayVpcAttachmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTransitGatewayVpcAttachmentCommandOutput) => void): void;
    
    deleteVolume(args: DeleteVolumeCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVolumeCommandOutput>;
    deleteVolume(args: DeleteVolumeCommandInput, cb: (err: any, data?: DeleteVolumeCommandOutput) => void): void;
    deleteVolume(args: DeleteVolumeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVolumeCommandOutput) => void): void;
    
    deleteVpc(args: DeleteVpcCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVpcCommandOutput>;
    deleteVpc(args: DeleteVpcCommandInput, cb: (err: any, data?: DeleteVpcCommandOutput) => void): void;
    deleteVpc(args: DeleteVpcCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVpcCommandOutput) => void): void;
    
    deleteVpcEndpointConnectionNotifications(args: DeleteVpcEndpointConnectionNotificationsCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVpcEndpointConnectionNotificationsCommandOutput>;
    deleteVpcEndpointConnectionNotifications(args: DeleteVpcEndpointConnectionNotificationsCommandInput, cb: (err: any, data?: DeleteVpcEndpointConnectionNotificationsCommandOutput) => void): void;
    deleteVpcEndpointConnectionNotifications(args: DeleteVpcEndpointConnectionNotificationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVpcEndpointConnectionNotificationsCommandOutput) => void): void;
    
    deleteVpcEndpoints(args: DeleteVpcEndpointsCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVpcEndpointsCommandOutput>;
    deleteVpcEndpoints(args: DeleteVpcEndpointsCommandInput, cb: (err: any, data?: DeleteVpcEndpointsCommandOutput) => void): void;
    deleteVpcEndpoints(args: DeleteVpcEndpointsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVpcEndpointsCommandOutput) => void): void;
    
    deleteVpcEndpointServiceConfigurations(args: DeleteVpcEndpointServiceConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVpcEndpointServiceConfigurationsCommandOutput>;
    deleteVpcEndpointServiceConfigurations(args: DeleteVpcEndpointServiceConfigurationsCommandInput, cb: (err: any, data?: DeleteVpcEndpointServiceConfigurationsCommandOutput) => void): void;
    deleteVpcEndpointServiceConfigurations(args: DeleteVpcEndpointServiceConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVpcEndpointServiceConfigurationsCommandOutput) => void): void;
    
    deleteVpcPeeringConnection(args: DeleteVpcPeeringConnectionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVpcPeeringConnectionCommandOutput>;
    deleteVpcPeeringConnection(args: DeleteVpcPeeringConnectionCommandInput, cb: (err: any, data?: DeleteVpcPeeringConnectionCommandOutput) => void): void;
    deleteVpcPeeringConnection(args: DeleteVpcPeeringConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVpcPeeringConnectionCommandOutput) => void): void;
    
    deleteVpnConnection(args: DeleteVpnConnectionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVpnConnectionCommandOutput>;
    deleteVpnConnection(args: DeleteVpnConnectionCommandInput, cb: (err: any, data?: DeleteVpnConnectionCommandOutput) => void): void;
    deleteVpnConnection(args: DeleteVpnConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVpnConnectionCommandOutput) => void): void;
    
    deleteVpnConnectionRoute(args: DeleteVpnConnectionRouteCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVpnConnectionRouteCommandOutput>;
    deleteVpnConnectionRoute(args: DeleteVpnConnectionRouteCommandInput, cb: (err: any, data?: DeleteVpnConnectionRouteCommandOutput) => void): void;
    deleteVpnConnectionRoute(args: DeleteVpnConnectionRouteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVpnConnectionRouteCommandOutput) => void): void;
    
    deleteVpnGateway(args: DeleteVpnGatewayCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVpnGatewayCommandOutput>;
    deleteVpnGateway(args: DeleteVpnGatewayCommandInput, cb: (err: any, data?: DeleteVpnGatewayCommandOutput) => void): void;
    deleteVpnGateway(args: DeleteVpnGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVpnGatewayCommandOutput) => void): void;
    
    deprovisionByoipCidr(args: DeprovisionByoipCidrCommandInput, options?: __HttpHandlerOptions): Promise<DeprovisionByoipCidrCommandOutput>;
    deprovisionByoipCidr(args: DeprovisionByoipCidrCommandInput, cb: (err: any, data?: DeprovisionByoipCidrCommandOutput) => void): void;
    deprovisionByoipCidr(args: DeprovisionByoipCidrCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeprovisionByoipCidrCommandOutput) => void): void;
    
    deprovisionIpamPoolCidr(args: DeprovisionIpamPoolCidrCommandInput, options?: __HttpHandlerOptions): Promise<DeprovisionIpamPoolCidrCommandOutput>;
    deprovisionIpamPoolCidr(args: DeprovisionIpamPoolCidrCommandInput, cb: (err: any, data?: DeprovisionIpamPoolCidrCommandOutput) => void): void;
    deprovisionIpamPoolCidr(args: DeprovisionIpamPoolCidrCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeprovisionIpamPoolCidrCommandOutput) => void): void;
    
    deprovisionPublicIpv4PoolCidr(args: DeprovisionPublicIpv4PoolCidrCommandInput, options?: __HttpHandlerOptions): Promise<DeprovisionPublicIpv4PoolCidrCommandOutput>;
    deprovisionPublicIpv4PoolCidr(args: DeprovisionPublicIpv4PoolCidrCommandInput, cb: (err: any, data?: DeprovisionPublicIpv4PoolCidrCommandOutput) => void): void;
    deprovisionPublicIpv4PoolCidr(args: DeprovisionPublicIpv4PoolCidrCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeprovisionPublicIpv4PoolCidrCommandOutput) => void): void;
    
    deregisterImage(args: DeregisterImageCommandInput, options?: __HttpHandlerOptions): Promise<DeregisterImageCommandOutput>;
    deregisterImage(args: DeregisterImageCommandInput, cb: (err: any, data?: DeregisterImageCommandOutput) => void): void;
    deregisterImage(args: DeregisterImageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeregisterImageCommandOutput) => void): void;
    
    deregisterInstanceEventNotificationAttributes(args: DeregisterInstanceEventNotificationAttributesCommandInput, options?: __HttpHandlerOptions): Promise<DeregisterInstanceEventNotificationAttributesCommandOutput>;
    deregisterInstanceEventNotificationAttributes(args: DeregisterInstanceEventNotificationAttributesCommandInput, cb: (err: any, data?: DeregisterInstanceEventNotificationAttributesCommandOutput) => void): void;
    deregisterInstanceEventNotificationAttributes(args: DeregisterInstanceEventNotificationAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeregisterInstanceEventNotificationAttributesCommandOutput) => void): void;
    
    deregisterTransitGatewayMulticastGroupMembers(args: DeregisterTransitGatewayMulticastGroupMembersCommandInput, options?: __HttpHandlerOptions): Promise<DeregisterTransitGatewayMulticastGroupMembersCommandOutput>;
    deregisterTransitGatewayMulticastGroupMembers(args: DeregisterTransitGatewayMulticastGroupMembersCommandInput, cb: (err: any, data?: DeregisterTransitGatewayMulticastGroupMembersCommandOutput) => void): void;
    deregisterTransitGatewayMulticastGroupMembers(args: DeregisterTransitGatewayMulticastGroupMembersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeregisterTransitGatewayMulticastGroupMembersCommandOutput) => void): void;
    
    deregisterTransitGatewayMulticastGroupSources(args: DeregisterTransitGatewayMulticastGroupSourcesCommandInput, options?: __HttpHandlerOptions): Promise<DeregisterTransitGatewayMulticastGroupSourcesCommandOutput>;
    deregisterTransitGatewayMulticastGroupSources(args: DeregisterTransitGatewayMulticastGroupSourcesCommandInput, cb: (err: any, data?: DeregisterTransitGatewayMulticastGroupSourcesCommandOutput) => void): void;
    deregisterTransitGatewayMulticastGroupSources(args: DeregisterTransitGatewayMulticastGroupSourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeregisterTransitGatewayMulticastGroupSourcesCommandOutput) => void): void;
    
    describeAccountAttributes(args: DescribeAccountAttributesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAccountAttributesCommandOutput>;
    describeAccountAttributes(args: DescribeAccountAttributesCommandInput, cb: (err: any, data?: DescribeAccountAttributesCommandOutput) => void): void;
    describeAccountAttributes(args: DescribeAccountAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAccountAttributesCommandOutput) => void): void;
    
    describeAddresses(args: DescribeAddressesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAddressesCommandOutput>;
    describeAddresses(args: DescribeAddressesCommandInput, cb: (err: any, data?: DescribeAddressesCommandOutput) => void): void;
    describeAddresses(args: DescribeAddressesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAddressesCommandOutput) => void): void;
    
    describeAddressesAttribute(args: DescribeAddressesAttributeCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAddressesAttributeCommandOutput>;
    describeAddressesAttribute(args: DescribeAddressesAttributeCommandInput, cb: (err: any, data?: DescribeAddressesAttributeCommandOutput) => void): void;
    describeAddressesAttribute(args: DescribeAddressesAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAddressesAttributeCommandOutput) => void): void;
    
    describeAggregateIdFormat(args: DescribeAggregateIdFormatCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAggregateIdFormatCommandOutput>;
    describeAggregateIdFormat(args: DescribeAggregateIdFormatCommandInput, cb: (err: any, data?: DescribeAggregateIdFormatCommandOutput) => void): void;
    describeAggregateIdFormat(args: DescribeAggregateIdFormatCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAggregateIdFormatCommandOutput) => void): void;
    
    describeAvailabilityZones(args: DescribeAvailabilityZonesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAvailabilityZonesCommandOutput>;
    describeAvailabilityZones(args: DescribeAvailabilityZonesCommandInput, cb: (err: any, data?: DescribeAvailabilityZonesCommandOutput) => void): void;
    describeAvailabilityZones(args: DescribeAvailabilityZonesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAvailabilityZonesCommandOutput) => void): void;
    
    describeBundleTasks(args: DescribeBundleTasksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeBundleTasksCommandOutput>;
    describeBundleTasks(args: DescribeBundleTasksCommandInput, cb: (err: any, data?: DescribeBundleTasksCommandOutput) => void): void;
    describeBundleTasks(args: DescribeBundleTasksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeBundleTasksCommandOutput) => void): void;
    
    describeByoipCidrs(args: DescribeByoipCidrsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeByoipCidrsCommandOutput>;
    describeByoipCidrs(args: DescribeByoipCidrsCommandInput, cb: (err: any, data?: DescribeByoipCidrsCommandOutput) => void): void;
    describeByoipCidrs(args: DescribeByoipCidrsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeByoipCidrsCommandOutput) => void): void;
    
    describeCapacityReservationFleets(args: DescribeCapacityReservationFleetsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCapacityReservationFleetsCommandOutput>;
    describeCapacityReservationFleets(args: DescribeCapacityReservationFleetsCommandInput, cb: (err: any, data?: DescribeCapacityReservationFleetsCommandOutput) => void): void;
    describeCapacityReservationFleets(args: DescribeCapacityReservationFleetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCapacityReservationFleetsCommandOutput) => void): void;
    
    describeCapacityReservations(args: DescribeCapacityReservationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCapacityReservationsCommandOutput>;
    describeCapacityReservations(args: DescribeCapacityReservationsCommandInput, cb: (err: any, data?: DescribeCapacityReservationsCommandOutput) => void): void;
    describeCapacityReservations(args: DescribeCapacityReservationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCapacityReservationsCommandOutput) => void): void;
    
    describeCarrierGateways(args: DescribeCarrierGatewaysCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCarrierGatewaysCommandOutput>;
    describeCarrierGateways(args: DescribeCarrierGatewaysCommandInput, cb: (err: any, data?: DescribeCarrierGatewaysCommandOutput) => void): void;
    describeCarrierGateways(args: DescribeCarrierGatewaysCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCarrierGatewaysCommandOutput) => void): void;
    
    describeClassicLinkInstances(args: DescribeClassicLinkInstancesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeClassicLinkInstancesCommandOutput>;
    describeClassicLinkInstances(args: DescribeClassicLinkInstancesCommandInput, cb: (err: any, data?: DescribeClassicLinkInstancesCommandOutput) => void): void;
    describeClassicLinkInstances(args: DescribeClassicLinkInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeClassicLinkInstancesCommandOutput) => void): void;
    
    describeClientVpnAuthorizationRules(args: DescribeClientVpnAuthorizationRulesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeClientVpnAuthorizationRulesCommandOutput>;
    describeClientVpnAuthorizationRules(args: DescribeClientVpnAuthorizationRulesCommandInput, cb: (err: any, data?: DescribeClientVpnAuthorizationRulesCommandOutput) => void): void;
    describeClientVpnAuthorizationRules(args: DescribeClientVpnAuthorizationRulesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeClientVpnAuthorizationRulesCommandOutput) => void): void;
    
    describeClientVpnConnections(args: DescribeClientVpnConnectionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeClientVpnConnectionsCommandOutput>;
    describeClientVpnConnections(args: DescribeClientVpnConnectionsCommandInput, cb: (err: any, data?: DescribeClientVpnConnectionsCommandOutput) => void): void;
    describeClientVpnConnections(args: DescribeClientVpnConnectionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeClientVpnConnectionsCommandOutput) => void): void;
    
    describeClientVpnEndpoints(args: DescribeClientVpnEndpointsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeClientVpnEndpointsCommandOutput>;
    describeClientVpnEndpoints(args: DescribeClientVpnEndpointsCommandInput, cb: (err: any, data?: DescribeClientVpnEndpointsCommandOutput) => void): void;
    describeClientVpnEndpoints(args: DescribeClientVpnEndpointsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeClientVpnEndpointsCommandOutput) => void): void;
    
    describeClientVpnRoutes(args: DescribeClientVpnRoutesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeClientVpnRoutesCommandOutput>;
    describeClientVpnRoutes(args: DescribeClientVpnRoutesCommandInput, cb: (err: any, data?: DescribeClientVpnRoutesCommandOutput) => void): void;
    describeClientVpnRoutes(args: DescribeClientVpnRoutesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeClientVpnRoutesCommandOutput) => void): void;
    
    describeClientVpnTargetNetworks(args: DescribeClientVpnTargetNetworksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeClientVpnTargetNetworksCommandOutput>;
    describeClientVpnTargetNetworks(args: DescribeClientVpnTargetNetworksCommandInput, cb: (err: any, data?: DescribeClientVpnTargetNetworksCommandOutput) => void): void;
    describeClientVpnTargetNetworks(args: DescribeClientVpnTargetNetworksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeClientVpnTargetNetworksCommandOutput) => void): void;
    
    describeCoipPools(args: DescribeCoipPoolsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCoipPoolsCommandOutput>;
    describeCoipPools(args: DescribeCoipPoolsCommandInput, cb: (err: any, data?: DescribeCoipPoolsCommandOutput) => void): void;
    describeCoipPools(args: DescribeCoipPoolsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCoipPoolsCommandOutput) => void): void;
    
    describeConversionTasks(args: DescribeConversionTasksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeConversionTasksCommandOutput>;
    describeConversionTasks(args: DescribeConversionTasksCommandInput, cb: (err: any, data?: DescribeConversionTasksCommandOutput) => void): void;
    describeConversionTasks(args: DescribeConversionTasksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeConversionTasksCommandOutput) => void): void;
    
    describeCustomerGateways(args: DescribeCustomerGatewaysCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCustomerGatewaysCommandOutput>;
    describeCustomerGateways(args: DescribeCustomerGatewaysCommandInput, cb: (err: any, data?: DescribeCustomerGatewaysCommandOutput) => void): void;
    describeCustomerGateways(args: DescribeCustomerGatewaysCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCustomerGatewaysCommandOutput) => void): void;
    
    describeDhcpOptions(args: DescribeDhcpOptionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDhcpOptionsCommandOutput>;
    describeDhcpOptions(args: DescribeDhcpOptionsCommandInput, cb: (err: any, data?: DescribeDhcpOptionsCommandOutput) => void): void;
    describeDhcpOptions(args: DescribeDhcpOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDhcpOptionsCommandOutput) => void): void;
    
    describeEgressOnlyInternetGateways(args: DescribeEgressOnlyInternetGatewaysCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEgressOnlyInternetGatewaysCommandOutput>;
    describeEgressOnlyInternetGateways(args: DescribeEgressOnlyInternetGatewaysCommandInput, cb: (err: any, data?: DescribeEgressOnlyInternetGatewaysCommandOutput) => void): void;
    describeEgressOnlyInternetGateways(args: DescribeEgressOnlyInternetGatewaysCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEgressOnlyInternetGatewaysCommandOutput) => void): void;
    
    describeElasticGpus(args: DescribeElasticGpusCommandInput, options?: __HttpHandlerOptions): Promise<DescribeElasticGpusCommandOutput>;
    describeElasticGpus(args: DescribeElasticGpusCommandInput, cb: (err: any, data?: DescribeElasticGpusCommandOutput) => void): void;
    describeElasticGpus(args: DescribeElasticGpusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeElasticGpusCommandOutput) => void): void;
    
    describeExportImageTasks(args: DescribeExportImageTasksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeExportImageTasksCommandOutput>;
    describeExportImageTasks(args: DescribeExportImageTasksCommandInput, cb: (err: any, data?: DescribeExportImageTasksCommandOutput) => void): void;
    describeExportImageTasks(args: DescribeExportImageTasksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeExportImageTasksCommandOutput) => void): void;
    
    describeExportTasks(args: DescribeExportTasksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeExportTasksCommandOutput>;
    describeExportTasks(args: DescribeExportTasksCommandInput, cb: (err: any, data?: DescribeExportTasksCommandOutput) => void): void;
    describeExportTasks(args: DescribeExportTasksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeExportTasksCommandOutput) => void): void;
    
    describeFastLaunchImages(args: DescribeFastLaunchImagesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFastLaunchImagesCommandOutput>;
    describeFastLaunchImages(args: DescribeFastLaunchImagesCommandInput, cb: (err: any, data?: DescribeFastLaunchImagesCommandOutput) => void): void;
    describeFastLaunchImages(args: DescribeFastLaunchImagesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFastLaunchImagesCommandOutput) => void): void;
    
    describeFastSnapshotRestores(args: DescribeFastSnapshotRestoresCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFastSnapshotRestoresCommandOutput>;
    describeFastSnapshotRestores(args: DescribeFastSnapshotRestoresCommandInput, cb: (err: any, data?: DescribeFastSnapshotRestoresCommandOutput) => void): void;
    describeFastSnapshotRestores(args: DescribeFastSnapshotRestoresCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFastSnapshotRestoresCommandOutput) => void): void;
    
    describeFleetHistory(args: DescribeFleetHistoryCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFleetHistoryCommandOutput>;
    describeFleetHistory(args: DescribeFleetHistoryCommandInput, cb: (err: any, data?: DescribeFleetHistoryCommandOutput) => void): void;
    describeFleetHistory(args: DescribeFleetHistoryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFleetHistoryCommandOutput) => void): void;
    
    describeFleetInstances(args: DescribeFleetInstancesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFleetInstancesCommandOutput>;
    describeFleetInstances(args: DescribeFleetInstancesCommandInput, cb: (err: any, data?: DescribeFleetInstancesCommandOutput) => void): void;
    describeFleetInstances(args: DescribeFleetInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFleetInstancesCommandOutput) => void): void;
    
    describeFleets(args: DescribeFleetsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFleetsCommandOutput>;
    describeFleets(args: DescribeFleetsCommandInput, cb: (err: any, data?: DescribeFleetsCommandOutput) => void): void;
    describeFleets(args: DescribeFleetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFleetsCommandOutput) => void): void;
    
    describeFlowLogs(args: DescribeFlowLogsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFlowLogsCommandOutput>;
    describeFlowLogs(args: DescribeFlowLogsCommandInput, cb: (err: any, data?: DescribeFlowLogsCommandOutput) => void): void;
    describeFlowLogs(args: DescribeFlowLogsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFlowLogsCommandOutput) => void): void;
    
    describeFpgaImageAttribute(args: DescribeFpgaImageAttributeCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFpgaImageAttributeCommandOutput>;
    describeFpgaImageAttribute(args: DescribeFpgaImageAttributeCommandInput, cb: (err: any, data?: DescribeFpgaImageAttributeCommandOutput) => void): void;
    describeFpgaImageAttribute(args: DescribeFpgaImageAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFpgaImageAttributeCommandOutput) => void): void;
    
    describeFpgaImages(args: DescribeFpgaImagesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFpgaImagesCommandOutput>;
    describeFpgaImages(args: DescribeFpgaImagesCommandInput, cb: (err: any, data?: DescribeFpgaImagesCommandOutput) => void): void;
    describeFpgaImages(args: DescribeFpgaImagesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFpgaImagesCommandOutput) => void): void;
    
    describeHostReservationOfferings(args: DescribeHostReservationOfferingsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeHostReservationOfferingsCommandOutput>;
    describeHostReservationOfferings(args: DescribeHostReservationOfferingsCommandInput, cb: (err: any, data?: DescribeHostReservationOfferingsCommandOutput) => void): void;
    describeHostReservationOfferings(args: DescribeHostReservationOfferingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeHostReservationOfferingsCommandOutput) => void): void;
    
    describeHostReservations(args: DescribeHostReservationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeHostReservationsCommandOutput>;
    describeHostReservations(args: DescribeHostReservationsCommandInput, cb: (err: any, data?: DescribeHostReservationsCommandOutput) => void): void;
    describeHostReservations(args: DescribeHostReservationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeHostReservationsCommandOutput) => void): void;
    
    describeHosts(args: DescribeHostsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeHostsCommandOutput>;
    describeHosts(args: DescribeHostsCommandInput, cb: (err: any, data?: DescribeHostsCommandOutput) => void): void;
    describeHosts(args: DescribeHostsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeHostsCommandOutput) => void): void;
    
    describeIamInstanceProfileAssociations(args: DescribeIamInstanceProfileAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeIamInstanceProfileAssociationsCommandOutput>;
    describeIamInstanceProfileAssociations(args: DescribeIamInstanceProfileAssociationsCommandInput, cb: (err: any, data?: DescribeIamInstanceProfileAssociationsCommandOutput) => void): void;
    describeIamInstanceProfileAssociations(args: DescribeIamInstanceProfileAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeIamInstanceProfileAssociationsCommandOutput) => void): void;
    
    describeIdentityIdFormat(args: DescribeIdentityIdFormatCommandInput, options?: __HttpHandlerOptions): Promise<DescribeIdentityIdFormatCommandOutput>;
    describeIdentityIdFormat(args: DescribeIdentityIdFormatCommandInput, cb: (err: any, data?: DescribeIdentityIdFormatCommandOutput) => void): void;
    describeIdentityIdFormat(args: DescribeIdentityIdFormatCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeIdentityIdFormatCommandOutput) => void): void;
    
    describeIdFormat(args: DescribeIdFormatCommandInput, options?: __HttpHandlerOptions): Promise<DescribeIdFormatCommandOutput>;
    describeIdFormat(args: DescribeIdFormatCommandInput, cb: (err: any, data?: DescribeIdFormatCommandOutput) => void): void;
    describeIdFormat(args: DescribeIdFormatCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeIdFormatCommandOutput) => void): void;
    
    describeImageAttribute(args: DescribeImageAttributeCommandInput, options?: __HttpHandlerOptions): Promise<DescribeImageAttributeCommandOutput>;
    describeImageAttribute(args: DescribeImageAttributeCommandInput, cb: (err: any, data?: DescribeImageAttributeCommandOutput) => void): void;
    describeImageAttribute(args: DescribeImageAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeImageAttributeCommandOutput) => void): void;
    
    describeImages(args: DescribeImagesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeImagesCommandOutput>;
    describeImages(args: DescribeImagesCommandInput, cb: (err: any, data?: DescribeImagesCommandOutput) => void): void;
    describeImages(args: DescribeImagesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeImagesCommandOutput) => void): void;
    
    describeImportImageTasks(args: DescribeImportImageTasksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeImportImageTasksCommandOutput>;
    describeImportImageTasks(args: DescribeImportImageTasksCommandInput, cb: (err: any, data?: DescribeImportImageTasksCommandOutput) => void): void;
    describeImportImageTasks(args: DescribeImportImageTasksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeImportImageTasksCommandOutput) => void): void;
    
    describeImportSnapshotTasks(args: DescribeImportSnapshotTasksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeImportSnapshotTasksCommandOutput>;
    describeImportSnapshotTasks(args: DescribeImportSnapshotTasksCommandInput, cb: (err: any, data?: DescribeImportSnapshotTasksCommandOutput) => void): void;
    describeImportSnapshotTasks(args: DescribeImportSnapshotTasksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeImportSnapshotTasksCommandOutput) => void): void;
    
    describeInstanceAttribute(args: DescribeInstanceAttributeCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstanceAttributeCommandOutput>;
    describeInstanceAttribute(args: DescribeInstanceAttributeCommandInput, cb: (err: any, data?: DescribeInstanceAttributeCommandOutput) => void): void;
    describeInstanceAttribute(args: DescribeInstanceAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstanceAttributeCommandOutput) => void): void;
    
    describeInstanceCreditSpecifications(args: DescribeInstanceCreditSpecificationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstanceCreditSpecificationsCommandOutput>;
    describeInstanceCreditSpecifications(args: DescribeInstanceCreditSpecificationsCommandInput, cb: (err: any, data?: DescribeInstanceCreditSpecificationsCommandOutput) => void): void;
    describeInstanceCreditSpecifications(args: DescribeInstanceCreditSpecificationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstanceCreditSpecificationsCommandOutput) => void): void;
    
    describeInstanceEventNotificationAttributes(args: DescribeInstanceEventNotificationAttributesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstanceEventNotificationAttributesCommandOutput>;
    describeInstanceEventNotificationAttributes(args: DescribeInstanceEventNotificationAttributesCommandInput, cb: (err: any, data?: DescribeInstanceEventNotificationAttributesCommandOutput) => void): void;
    describeInstanceEventNotificationAttributes(args: DescribeInstanceEventNotificationAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstanceEventNotificationAttributesCommandOutput) => void): void;
    
    describeInstanceEventWindows(args: DescribeInstanceEventWindowsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstanceEventWindowsCommandOutput>;
    describeInstanceEventWindows(args: DescribeInstanceEventWindowsCommandInput, cb: (err: any, data?: DescribeInstanceEventWindowsCommandOutput) => void): void;
    describeInstanceEventWindows(args: DescribeInstanceEventWindowsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstanceEventWindowsCommandOutput) => void): void;
    
    describeInstances(args: DescribeInstancesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstancesCommandOutput>;
    describeInstances(args: DescribeInstancesCommandInput, cb: (err: any, data?: DescribeInstancesCommandOutput) => void): void;
    describeInstances(args: DescribeInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstancesCommandOutput) => void): void;
    
    describeInstanceStatus(args: DescribeInstanceStatusCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstanceStatusCommandOutput>;
    describeInstanceStatus(args: DescribeInstanceStatusCommandInput, cb: (err: any, data?: DescribeInstanceStatusCommandOutput) => void): void;
    describeInstanceStatus(args: DescribeInstanceStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstanceStatusCommandOutput) => void): void;
    
    describeInstanceTypeOfferings(args: DescribeInstanceTypeOfferingsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstanceTypeOfferingsCommandOutput>;
    describeInstanceTypeOfferings(args: DescribeInstanceTypeOfferingsCommandInput, cb: (err: any, data?: DescribeInstanceTypeOfferingsCommandOutput) => void): void;
    describeInstanceTypeOfferings(args: DescribeInstanceTypeOfferingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstanceTypeOfferingsCommandOutput) => void): void;
    
    describeInstanceTypes(args: DescribeInstanceTypesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstanceTypesCommandOutput>;
    describeInstanceTypes(args: DescribeInstanceTypesCommandInput, cb: (err: any, data?: DescribeInstanceTypesCommandOutput) => void): void;
    describeInstanceTypes(args: DescribeInstanceTypesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstanceTypesCommandOutput) => void): void;
    
    describeInternetGateways(args: DescribeInternetGatewaysCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInternetGatewaysCommandOutput>;
    describeInternetGateways(args: DescribeInternetGatewaysCommandInput, cb: (err: any, data?: DescribeInternetGatewaysCommandOutput) => void): void;
    describeInternetGateways(args: DescribeInternetGatewaysCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInternetGatewaysCommandOutput) => void): void;
    
    describeIpamPools(args: DescribeIpamPoolsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeIpamPoolsCommandOutput>;
    describeIpamPools(args: DescribeIpamPoolsCommandInput, cb: (err: any, data?: DescribeIpamPoolsCommandOutput) => void): void;
    describeIpamPools(args: DescribeIpamPoolsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeIpamPoolsCommandOutput) => void): void;
    
    describeIpams(args: DescribeIpamsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeIpamsCommandOutput>;
    describeIpams(args: DescribeIpamsCommandInput, cb: (err: any, data?: DescribeIpamsCommandOutput) => void): void;
    describeIpams(args: DescribeIpamsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeIpamsCommandOutput) => void): void;
    
    describeIpamScopes(args: DescribeIpamScopesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeIpamScopesCommandOutput>;
    describeIpamScopes(args: DescribeIpamScopesCommandInput, cb: (err: any, data?: DescribeIpamScopesCommandOutput) => void): void;
    describeIpamScopes(args: DescribeIpamScopesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeIpamScopesCommandOutput) => void): void;
    
    describeIpv6Pools(args: DescribeIpv6PoolsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeIpv6PoolsCommandOutput>;
    describeIpv6Pools(args: DescribeIpv6PoolsCommandInput, cb: (err: any, data?: DescribeIpv6PoolsCommandOutput) => void): void;
    describeIpv6Pools(args: DescribeIpv6PoolsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeIpv6PoolsCommandOutput) => void): void;
    
    describeKeyPairs(args: DescribeKeyPairsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeKeyPairsCommandOutput>;
    describeKeyPairs(args: DescribeKeyPairsCommandInput, cb: (err: any, data?: DescribeKeyPairsCommandOutput) => void): void;
    describeKeyPairs(args: DescribeKeyPairsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeKeyPairsCommandOutput) => void): void;
    
    describeLaunchTemplates(args: DescribeLaunchTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeLaunchTemplatesCommandOutput>;
    describeLaunchTemplates(args: DescribeLaunchTemplatesCommandInput, cb: (err: any, data?: DescribeLaunchTemplatesCommandOutput) => void): void;
    describeLaunchTemplates(args: DescribeLaunchTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeLaunchTemplatesCommandOutput) => void): void;
    
    describeLaunchTemplateVersions(args: DescribeLaunchTemplateVersionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeLaunchTemplateVersionsCommandOutput>;
    describeLaunchTemplateVersions(args: DescribeLaunchTemplateVersionsCommandInput, cb: (err: any, data?: DescribeLaunchTemplateVersionsCommandOutput) => void): void;
    describeLaunchTemplateVersions(args: DescribeLaunchTemplateVersionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeLaunchTemplateVersionsCommandOutput) => void): void;
    
    describeLocalGatewayRouteTables(args: DescribeLocalGatewayRouteTablesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeLocalGatewayRouteTablesCommandOutput>;
    describeLocalGatewayRouteTables(args: DescribeLocalGatewayRouteTablesCommandInput, cb: (err: any, data?: DescribeLocalGatewayRouteTablesCommandOutput) => void): void;
    describeLocalGatewayRouteTables(args: DescribeLocalGatewayRouteTablesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeLocalGatewayRouteTablesCommandOutput) => void): void;
    
    describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations(args: DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsCommandOutput>;
    describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations(args: DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsCommandInput, cb: (err: any, data?: DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsCommandOutput) => void): void;
    describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations(args: DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsCommandOutput) => void): void;
    
    describeLocalGatewayRouteTableVpcAssociations(args: DescribeLocalGatewayRouteTableVpcAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeLocalGatewayRouteTableVpcAssociationsCommandOutput>;
    describeLocalGatewayRouteTableVpcAssociations(args: DescribeLocalGatewayRouteTableVpcAssociationsCommandInput, cb: (err: any, data?: DescribeLocalGatewayRouteTableVpcAssociationsCommandOutput) => void): void;
    describeLocalGatewayRouteTableVpcAssociations(args: DescribeLocalGatewayRouteTableVpcAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeLocalGatewayRouteTableVpcAssociationsCommandOutput) => void): void;
    
    describeLocalGateways(args: DescribeLocalGatewaysCommandInput, options?: __HttpHandlerOptions): Promise<DescribeLocalGatewaysCommandOutput>;
    describeLocalGateways(args: DescribeLocalGatewaysCommandInput, cb: (err: any, data?: DescribeLocalGatewaysCommandOutput) => void): void;
    describeLocalGateways(args: DescribeLocalGatewaysCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeLocalGatewaysCommandOutput) => void): void;
    
    describeLocalGatewayVirtualInterfaceGroups(args: DescribeLocalGatewayVirtualInterfaceGroupsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeLocalGatewayVirtualInterfaceGroupsCommandOutput>;
    describeLocalGatewayVirtualInterfaceGroups(args: DescribeLocalGatewayVirtualInterfaceGroupsCommandInput, cb: (err: any, data?: DescribeLocalGatewayVirtualInterfaceGroupsCommandOutput) => void): void;
    describeLocalGatewayVirtualInterfaceGroups(args: DescribeLocalGatewayVirtualInterfaceGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeLocalGatewayVirtualInterfaceGroupsCommandOutput) => void): void;
    
    describeLocalGatewayVirtualInterfaces(args: DescribeLocalGatewayVirtualInterfacesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeLocalGatewayVirtualInterfacesCommandOutput>;
    describeLocalGatewayVirtualInterfaces(args: DescribeLocalGatewayVirtualInterfacesCommandInput, cb: (err: any, data?: DescribeLocalGatewayVirtualInterfacesCommandOutput) => void): void;
    describeLocalGatewayVirtualInterfaces(args: DescribeLocalGatewayVirtualInterfacesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeLocalGatewayVirtualInterfacesCommandOutput) => void): void;
    
    describeManagedPrefixLists(args: DescribeManagedPrefixListsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeManagedPrefixListsCommandOutput>;
    describeManagedPrefixLists(args: DescribeManagedPrefixListsCommandInput, cb: (err: any, data?: DescribeManagedPrefixListsCommandOutput) => void): void;
    describeManagedPrefixLists(args: DescribeManagedPrefixListsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeManagedPrefixListsCommandOutput) => void): void;
    
    describeMovingAddresses(args: DescribeMovingAddressesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeMovingAddressesCommandOutput>;
    describeMovingAddresses(args: DescribeMovingAddressesCommandInput, cb: (err: any, data?: DescribeMovingAddressesCommandOutput) => void): void;
    describeMovingAddresses(args: DescribeMovingAddressesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeMovingAddressesCommandOutput) => void): void;
    
    describeNatGateways(args: DescribeNatGatewaysCommandInput, options?: __HttpHandlerOptions): Promise<DescribeNatGatewaysCommandOutput>;
    describeNatGateways(args: DescribeNatGatewaysCommandInput, cb: (err: any, data?: DescribeNatGatewaysCommandOutput) => void): void;
    describeNatGateways(args: DescribeNatGatewaysCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeNatGatewaysCommandOutput) => void): void;
    
    describeNetworkAcls(args: DescribeNetworkAclsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeNetworkAclsCommandOutput>;
    describeNetworkAcls(args: DescribeNetworkAclsCommandInput, cb: (err: any, data?: DescribeNetworkAclsCommandOutput) => void): void;
    describeNetworkAcls(args: DescribeNetworkAclsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeNetworkAclsCommandOutput) => void): void;
    
    describeNetworkInsightsAccessScopeAnalyses(args: DescribeNetworkInsightsAccessScopeAnalysesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeNetworkInsightsAccessScopeAnalysesCommandOutput>;
    describeNetworkInsightsAccessScopeAnalyses(args: DescribeNetworkInsightsAccessScopeAnalysesCommandInput, cb: (err: any, data?: DescribeNetworkInsightsAccessScopeAnalysesCommandOutput) => void): void;
    describeNetworkInsightsAccessScopeAnalyses(args: DescribeNetworkInsightsAccessScopeAnalysesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeNetworkInsightsAccessScopeAnalysesCommandOutput) => void): void;
    
    describeNetworkInsightsAccessScopes(args: DescribeNetworkInsightsAccessScopesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeNetworkInsightsAccessScopesCommandOutput>;
    describeNetworkInsightsAccessScopes(args: DescribeNetworkInsightsAccessScopesCommandInput, cb: (err: any, data?: DescribeNetworkInsightsAccessScopesCommandOutput) => void): void;
    describeNetworkInsightsAccessScopes(args: DescribeNetworkInsightsAccessScopesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeNetworkInsightsAccessScopesCommandOutput) => void): void;
    
    describeNetworkInsightsAnalyses(args: DescribeNetworkInsightsAnalysesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeNetworkInsightsAnalysesCommandOutput>;
    describeNetworkInsightsAnalyses(args: DescribeNetworkInsightsAnalysesCommandInput, cb: (err: any, data?: DescribeNetworkInsightsAnalysesCommandOutput) => void): void;
    describeNetworkInsightsAnalyses(args: DescribeNetworkInsightsAnalysesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeNetworkInsightsAnalysesCommandOutput) => void): void;
    
    describeNetworkInsightsPaths(args: DescribeNetworkInsightsPathsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeNetworkInsightsPathsCommandOutput>;
    describeNetworkInsightsPaths(args: DescribeNetworkInsightsPathsCommandInput, cb: (err: any, data?: DescribeNetworkInsightsPathsCommandOutput) => void): void;
    describeNetworkInsightsPaths(args: DescribeNetworkInsightsPathsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeNetworkInsightsPathsCommandOutput) => void): void;
    
    describeNetworkInterfaceAttribute(args: DescribeNetworkInterfaceAttributeCommandInput, options?: __HttpHandlerOptions): Promise<DescribeNetworkInterfaceAttributeCommandOutput>;
    describeNetworkInterfaceAttribute(args: DescribeNetworkInterfaceAttributeCommandInput, cb: (err: any, data?: DescribeNetworkInterfaceAttributeCommandOutput) => void): void;
    describeNetworkInterfaceAttribute(args: DescribeNetworkInterfaceAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeNetworkInterfaceAttributeCommandOutput) => void): void;
    
    describeNetworkInterfacePermissions(args: DescribeNetworkInterfacePermissionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeNetworkInterfacePermissionsCommandOutput>;
    describeNetworkInterfacePermissions(args: DescribeNetworkInterfacePermissionsCommandInput, cb: (err: any, data?: DescribeNetworkInterfacePermissionsCommandOutput) => void): void;
    describeNetworkInterfacePermissions(args: DescribeNetworkInterfacePermissionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeNetworkInterfacePermissionsCommandOutput) => void): void;
    
    describeNetworkInterfaces(args: DescribeNetworkInterfacesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeNetworkInterfacesCommandOutput>;
    describeNetworkInterfaces(args: DescribeNetworkInterfacesCommandInput, cb: (err: any, data?: DescribeNetworkInterfacesCommandOutput) => void): void;
    describeNetworkInterfaces(args: DescribeNetworkInterfacesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeNetworkInterfacesCommandOutput) => void): void;
    
    describePlacementGroups(args: DescribePlacementGroupsCommandInput, options?: __HttpHandlerOptions): Promise<DescribePlacementGroupsCommandOutput>;
    describePlacementGroups(args: DescribePlacementGroupsCommandInput, cb: (err: any, data?: DescribePlacementGroupsCommandOutput) => void): void;
    describePlacementGroups(args: DescribePlacementGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribePlacementGroupsCommandOutput) => void): void;
    
    describePrefixLists(args: DescribePrefixListsCommandInput, options?: __HttpHandlerOptions): Promise<DescribePrefixListsCommandOutput>;
    describePrefixLists(args: DescribePrefixListsCommandInput, cb: (err: any, data?: DescribePrefixListsCommandOutput) => void): void;
    describePrefixLists(args: DescribePrefixListsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribePrefixListsCommandOutput) => void): void;
    
    describePrincipalIdFormat(args: DescribePrincipalIdFormatCommandInput, options?: __HttpHandlerOptions): Promise<DescribePrincipalIdFormatCommandOutput>;
    describePrincipalIdFormat(args: DescribePrincipalIdFormatCommandInput, cb: (err: any, data?: DescribePrincipalIdFormatCommandOutput) => void): void;
    describePrincipalIdFormat(args: DescribePrincipalIdFormatCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribePrincipalIdFormatCommandOutput) => void): void;
    
    describePublicIpv4Pools(args: DescribePublicIpv4PoolsCommandInput, options?: __HttpHandlerOptions): Promise<DescribePublicIpv4PoolsCommandOutput>;
    describePublicIpv4Pools(args: DescribePublicIpv4PoolsCommandInput, cb: (err: any, data?: DescribePublicIpv4PoolsCommandOutput) => void): void;
    describePublicIpv4Pools(args: DescribePublicIpv4PoolsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribePublicIpv4PoolsCommandOutput) => void): void;
    
    describeRegions(args: DescribeRegionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeRegionsCommandOutput>;
    describeRegions(args: DescribeRegionsCommandInput, cb: (err: any, data?: DescribeRegionsCommandOutput) => void): void;
    describeRegions(args: DescribeRegionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeRegionsCommandOutput) => void): void;
    
    describeReplaceRootVolumeTasks(args: DescribeReplaceRootVolumeTasksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeReplaceRootVolumeTasksCommandOutput>;
    describeReplaceRootVolumeTasks(args: DescribeReplaceRootVolumeTasksCommandInput, cb: (err: any, data?: DescribeReplaceRootVolumeTasksCommandOutput) => void): void;
    describeReplaceRootVolumeTasks(args: DescribeReplaceRootVolumeTasksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeReplaceRootVolumeTasksCommandOutput) => void): void;
    
    describeReservedInstances(args: DescribeReservedInstancesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeReservedInstancesCommandOutput>;
    describeReservedInstances(args: DescribeReservedInstancesCommandInput, cb: (err: any, data?: DescribeReservedInstancesCommandOutput) => void): void;
    describeReservedInstances(args: DescribeReservedInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeReservedInstancesCommandOutput) => void): void;
    
    describeReservedInstancesListings(args: DescribeReservedInstancesListingsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeReservedInstancesListingsCommandOutput>;
    describeReservedInstancesListings(args: DescribeReservedInstancesListingsCommandInput, cb: (err: any, data?: DescribeReservedInstancesListingsCommandOutput) => void): void;
    describeReservedInstancesListings(args: DescribeReservedInstancesListingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeReservedInstancesListingsCommandOutput) => void): void;
    
    describeReservedInstancesModifications(args: DescribeReservedInstancesModificationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeReservedInstancesModificationsCommandOutput>;
    describeReservedInstancesModifications(args: DescribeReservedInstancesModificationsCommandInput, cb: (err: any, data?: DescribeReservedInstancesModificationsCommandOutput) => void): void;
    describeReservedInstancesModifications(args: DescribeReservedInstancesModificationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeReservedInstancesModificationsCommandOutput) => void): void;
    
    describeReservedInstancesOfferings(args: DescribeReservedInstancesOfferingsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeReservedInstancesOfferingsCommandOutput>;
    describeReservedInstancesOfferings(args: DescribeReservedInstancesOfferingsCommandInput, cb: (err: any, data?: DescribeReservedInstancesOfferingsCommandOutput) => void): void;
    describeReservedInstancesOfferings(args: DescribeReservedInstancesOfferingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeReservedInstancesOfferingsCommandOutput) => void): void;
    
    describeRouteTables(args: DescribeRouteTablesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeRouteTablesCommandOutput>;
    describeRouteTables(args: DescribeRouteTablesCommandInput, cb: (err: any, data?: DescribeRouteTablesCommandOutput) => void): void;
    describeRouteTables(args: DescribeRouteTablesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeRouteTablesCommandOutput) => void): void;
    
    describeScheduledInstanceAvailability(args: DescribeScheduledInstanceAvailabilityCommandInput, options?: __HttpHandlerOptions): Promise<DescribeScheduledInstanceAvailabilityCommandOutput>;
    describeScheduledInstanceAvailability(args: DescribeScheduledInstanceAvailabilityCommandInput, cb: (err: any, data?: DescribeScheduledInstanceAvailabilityCommandOutput) => void): void;
    describeScheduledInstanceAvailability(args: DescribeScheduledInstanceAvailabilityCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeScheduledInstanceAvailabilityCommandOutput) => void): void;
    
    describeScheduledInstances(args: DescribeScheduledInstancesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeScheduledInstancesCommandOutput>;
    describeScheduledInstances(args: DescribeScheduledInstancesCommandInput, cb: (err: any, data?: DescribeScheduledInstancesCommandOutput) => void): void;
    describeScheduledInstances(args: DescribeScheduledInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeScheduledInstancesCommandOutput) => void): void;
    
    describeSecurityGroupReferences(args: DescribeSecurityGroupReferencesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSecurityGroupReferencesCommandOutput>;
    describeSecurityGroupReferences(args: DescribeSecurityGroupReferencesCommandInput, cb: (err: any, data?: DescribeSecurityGroupReferencesCommandOutput) => void): void;
    describeSecurityGroupReferences(args: DescribeSecurityGroupReferencesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSecurityGroupReferencesCommandOutput) => void): void;
    
    describeSecurityGroupRules(args: DescribeSecurityGroupRulesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSecurityGroupRulesCommandOutput>;
    describeSecurityGroupRules(args: DescribeSecurityGroupRulesCommandInput, cb: (err: any, data?: DescribeSecurityGroupRulesCommandOutput) => void): void;
    describeSecurityGroupRules(args: DescribeSecurityGroupRulesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSecurityGroupRulesCommandOutput) => void): void;
    
    describeSecurityGroups(args: DescribeSecurityGroupsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSecurityGroupsCommandOutput>;
    describeSecurityGroups(args: DescribeSecurityGroupsCommandInput, cb: (err: any, data?: DescribeSecurityGroupsCommandOutput) => void): void;
    describeSecurityGroups(args: DescribeSecurityGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSecurityGroupsCommandOutput) => void): void;
    
    describeSnapshotAttribute(args: DescribeSnapshotAttributeCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSnapshotAttributeCommandOutput>;
    describeSnapshotAttribute(args: DescribeSnapshotAttributeCommandInput, cb: (err: any, data?: DescribeSnapshotAttributeCommandOutput) => void): void;
    describeSnapshotAttribute(args: DescribeSnapshotAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSnapshotAttributeCommandOutput) => void): void;
    
    describeSnapshots(args: DescribeSnapshotsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSnapshotsCommandOutput>;
    describeSnapshots(args: DescribeSnapshotsCommandInput, cb: (err: any, data?: DescribeSnapshotsCommandOutput) => void): void;
    describeSnapshots(args: DescribeSnapshotsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSnapshotsCommandOutput) => void): void;
    
    describeSnapshotTierStatus(args: DescribeSnapshotTierStatusCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSnapshotTierStatusCommandOutput>;
    describeSnapshotTierStatus(args: DescribeSnapshotTierStatusCommandInput, cb: (err: any, data?: DescribeSnapshotTierStatusCommandOutput) => void): void;
    describeSnapshotTierStatus(args: DescribeSnapshotTierStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSnapshotTierStatusCommandOutput) => void): void;
    
    describeSpotDatafeedSubscription(args: DescribeSpotDatafeedSubscriptionCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSpotDatafeedSubscriptionCommandOutput>;
    describeSpotDatafeedSubscription(args: DescribeSpotDatafeedSubscriptionCommandInput, cb: (err: any, data?: DescribeSpotDatafeedSubscriptionCommandOutput) => void): void;
    describeSpotDatafeedSubscription(args: DescribeSpotDatafeedSubscriptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSpotDatafeedSubscriptionCommandOutput) => void): void;
    
    describeSpotFleetInstances(args: DescribeSpotFleetInstancesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSpotFleetInstancesCommandOutput>;
    describeSpotFleetInstances(args: DescribeSpotFleetInstancesCommandInput, cb: (err: any, data?: DescribeSpotFleetInstancesCommandOutput) => void): void;
    describeSpotFleetInstances(args: DescribeSpotFleetInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSpotFleetInstancesCommandOutput) => void): void;
    
    describeSpotFleetRequestHistory(args: DescribeSpotFleetRequestHistoryCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSpotFleetRequestHistoryCommandOutput>;
    describeSpotFleetRequestHistory(args: DescribeSpotFleetRequestHistoryCommandInput, cb: (err: any, data?: DescribeSpotFleetRequestHistoryCommandOutput) => void): void;
    describeSpotFleetRequestHistory(args: DescribeSpotFleetRequestHistoryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSpotFleetRequestHistoryCommandOutput) => void): void;
    
    describeSpotFleetRequests(args: DescribeSpotFleetRequestsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSpotFleetRequestsCommandOutput>;
    describeSpotFleetRequests(args: DescribeSpotFleetRequestsCommandInput, cb: (err: any, data?: DescribeSpotFleetRequestsCommandOutput) => void): void;
    describeSpotFleetRequests(args: DescribeSpotFleetRequestsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSpotFleetRequestsCommandOutput) => void): void;
    
    describeSpotInstanceRequests(args: DescribeSpotInstanceRequestsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSpotInstanceRequestsCommandOutput>;
    describeSpotInstanceRequests(args: DescribeSpotInstanceRequestsCommandInput, cb: (err: any, data?: DescribeSpotInstanceRequestsCommandOutput) => void): void;
    describeSpotInstanceRequests(args: DescribeSpotInstanceRequestsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSpotInstanceRequestsCommandOutput) => void): void;
    
    describeSpotPriceHistory(args: DescribeSpotPriceHistoryCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSpotPriceHistoryCommandOutput>;
    describeSpotPriceHistory(args: DescribeSpotPriceHistoryCommandInput, cb: (err: any, data?: DescribeSpotPriceHistoryCommandOutput) => void): void;
    describeSpotPriceHistory(args: DescribeSpotPriceHistoryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSpotPriceHistoryCommandOutput) => void): void;
    
    describeStaleSecurityGroups(args: DescribeStaleSecurityGroupsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStaleSecurityGroupsCommandOutput>;
    describeStaleSecurityGroups(args: DescribeStaleSecurityGroupsCommandInput, cb: (err: any, data?: DescribeStaleSecurityGroupsCommandOutput) => void): void;
    describeStaleSecurityGroups(args: DescribeStaleSecurityGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStaleSecurityGroupsCommandOutput) => void): void;
    
    describeStoreImageTasks(args: DescribeStoreImageTasksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStoreImageTasksCommandOutput>;
    describeStoreImageTasks(args: DescribeStoreImageTasksCommandInput, cb: (err: any, data?: DescribeStoreImageTasksCommandOutput) => void): void;
    describeStoreImageTasks(args: DescribeStoreImageTasksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStoreImageTasksCommandOutput) => void): void;
    
    describeSubnets(args: DescribeSubnetsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSubnetsCommandOutput>;
    describeSubnets(args: DescribeSubnetsCommandInput, cb: (err: any, data?: DescribeSubnetsCommandOutput) => void): void;
    describeSubnets(args: DescribeSubnetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSubnetsCommandOutput) => void): void;
    
    describeTags(args: DescribeTagsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTagsCommandOutput>;
    describeTags(args: DescribeTagsCommandInput, cb: (err: any, data?: DescribeTagsCommandOutput) => void): void;
    describeTags(args: DescribeTagsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTagsCommandOutput) => void): void;
    
    describeTrafficMirrorFilters(args: DescribeTrafficMirrorFiltersCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTrafficMirrorFiltersCommandOutput>;
    describeTrafficMirrorFilters(args: DescribeTrafficMirrorFiltersCommandInput, cb: (err: any, data?: DescribeTrafficMirrorFiltersCommandOutput) => void): void;
    describeTrafficMirrorFilters(args: DescribeTrafficMirrorFiltersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTrafficMirrorFiltersCommandOutput) => void): void;
    
    describeTrafficMirrorSessions(args: DescribeTrafficMirrorSessionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTrafficMirrorSessionsCommandOutput>;
    describeTrafficMirrorSessions(args: DescribeTrafficMirrorSessionsCommandInput, cb: (err: any, data?: DescribeTrafficMirrorSessionsCommandOutput) => void): void;
    describeTrafficMirrorSessions(args: DescribeTrafficMirrorSessionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTrafficMirrorSessionsCommandOutput) => void): void;
    
    describeTrafficMirrorTargets(args: DescribeTrafficMirrorTargetsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTrafficMirrorTargetsCommandOutput>;
    describeTrafficMirrorTargets(args: DescribeTrafficMirrorTargetsCommandInput, cb: (err: any, data?: DescribeTrafficMirrorTargetsCommandOutput) => void): void;
    describeTrafficMirrorTargets(args: DescribeTrafficMirrorTargetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTrafficMirrorTargetsCommandOutput) => void): void;
    
    describeTransitGatewayAttachments(args: DescribeTransitGatewayAttachmentsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTransitGatewayAttachmentsCommandOutput>;
    describeTransitGatewayAttachments(args: DescribeTransitGatewayAttachmentsCommandInput, cb: (err: any, data?: DescribeTransitGatewayAttachmentsCommandOutput) => void): void;
    describeTransitGatewayAttachments(args: DescribeTransitGatewayAttachmentsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTransitGatewayAttachmentsCommandOutput) => void): void;
    
    describeTransitGatewayConnectPeers(args: DescribeTransitGatewayConnectPeersCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTransitGatewayConnectPeersCommandOutput>;
    describeTransitGatewayConnectPeers(args: DescribeTransitGatewayConnectPeersCommandInput, cb: (err: any, data?: DescribeTransitGatewayConnectPeersCommandOutput) => void): void;
    describeTransitGatewayConnectPeers(args: DescribeTransitGatewayConnectPeersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTransitGatewayConnectPeersCommandOutput) => void): void;
    
    describeTransitGatewayConnects(args: DescribeTransitGatewayConnectsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTransitGatewayConnectsCommandOutput>;
    describeTransitGatewayConnects(args: DescribeTransitGatewayConnectsCommandInput, cb: (err: any, data?: DescribeTransitGatewayConnectsCommandOutput) => void): void;
    describeTransitGatewayConnects(args: DescribeTransitGatewayConnectsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTransitGatewayConnectsCommandOutput) => void): void;
    
    describeTransitGatewayMulticastDomains(args: DescribeTransitGatewayMulticastDomainsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTransitGatewayMulticastDomainsCommandOutput>;
    describeTransitGatewayMulticastDomains(args: DescribeTransitGatewayMulticastDomainsCommandInput, cb: (err: any, data?: DescribeTransitGatewayMulticastDomainsCommandOutput) => void): void;
    describeTransitGatewayMulticastDomains(args: DescribeTransitGatewayMulticastDomainsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTransitGatewayMulticastDomainsCommandOutput) => void): void;
    
    describeTransitGatewayPeeringAttachments(args: DescribeTransitGatewayPeeringAttachmentsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTransitGatewayPeeringAttachmentsCommandOutput>;
    describeTransitGatewayPeeringAttachments(args: DescribeTransitGatewayPeeringAttachmentsCommandInput, cb: (err: any, data?: DescribeTransitGatewayPeeringAttachmentsCommandOutput) => void): void;
    describeTransitGatewayPeeringAttachments(args: DescribeTransitGatewayPeeringAttachmentsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTransitGatewayPeeringAttachmentsCommandOutput) => void): void;
    
    describeTransitGatewayRouteTables(args: DescribeTransitGatewayRouteTablesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTransitGatewayRouteTablesCommandOutput>;
    describeTransitGatewayRouteTables(args: DescribeTransitGatewayRouteTablesCommandInput, cb: (err: any, data?: DescribeTransitGatewayRouteTablesCommandOutput) => void): void;
    describeTransitGatewayRouteTables(args: DescribeTransitGatewayRouteTablesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTransitGatewayRouteTablesCommandOutput) => void): void;
    
    describeTransitGateways(args: DescribeTransitGatewaysCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTransitGatewaysCommandOutput>;
    describeTransitGateways(args: DescribeTransitGatewaysCommandInput, cb: (err: any, data?: DescribeTransitGatewaysCommandOutput) => void): void;
    describeTransitGateways(args: DescribeTransitGatewaysCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTransitGatewaysCommandOutput) => void): void;
    
    describeTransitGatewayVpcAttachments(args: DescribeTransitGatewayVpcAttachmentsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTransitGatewayVpcAttachmentsCommandOutput>;
    describeTransitGatewayVpcAttachments(args: DescribeTransitGatewayVpcAttachmentsCommandInput, cb: (err: any, data?: DescribeTransitGatewayVpcAttachmentsCommandOutput) => void): void;
    describeTransitGatewayVpcAttachments(args: DescribeTransitGatewayVpcAttachmentsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTransitGatewayVpcAttachmentsCommandOutput) => void): void;
    
    describeTrunkInterfaceAssociations(args: DescribeTrunkInterfaceAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTrunkInterfaceAssociationsCommandOutput>;
    describeTrunkInterfaceAssociations(args: DescribeTrunkInterfaceAssociationsCommandInput, cb: (err: any, data?: DescribeTrunkInterfaceAssociationsCommandOutput) => void): void;
    describeTrunkInterfaceAssociations(args: DescribeTrunkInterfaceAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTrunkInterfaceAssociationsCommandOutput) => void): void;
    
    describeVolumeAttribute(args: DescribeVolumeAttributeCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVolumeAttributeCommandOutput>;
    describeVolumeAttribute(args: DescribeVolumeAttributeCommandInput, cb: (err: any, data?: DescribeVolumeAttributeCommandOutput) => void): void;
    describeVolumeAttribute(args: DescribeVolumeAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVolumeAttributeCommandOutput) => void): void;
    
    describeVolumes(args: DescribeVolumesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVolumesCommandOutput>;
    describeVolumes(args: DescribeVolumesCommandInput, cb: (err: any, data?: DescribeVolumesCommandOutput) => void): void;
    describeVolumes(args: DescribeVolumesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVolumesCommandOutput) => void): void;
    
    describeVolumesModifications(args: DescribeVolumesModificationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVolumesModificationsCommandOutput>;
    describeVolumesModifications(args: DescribeVolumesModificationsCommandInput, cb: (err: any, data?: DescribeVolumesModificationsCommandOutput) => void): void;
    describeVolumesModifications(args: DescribeVolumesModificationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVolumesModificationsCommandOutput) => void): void;
    
    describeVolumeStatus(args: DescribeVolumeStatusCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVolumeStatusCommandOutput>;
    describeVolumeStatus(args: DescribeVolumeStatusCommandInput, cb: (err: any, data?: DescribeVolumeStatusCommandOutput) => void): void;
    describeVolumeStatus(args: DescribeVolumeStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVolumeStatusCommandOutput) => void): void;
    
    describeVpcAttribute(args: DescribeVpcAttributeCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpcAttributeCommandOutput>;
    describeVpcAttribute(args: DescribeVpcAttributeCommandInput, cb: (err: any, data?: DescribeVpcAttributeCommandOutput) => void): void;
    describeVpcAttribute(args: DescribeVpcAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpcAttributeCommandOutput) => void): void;
    
    describeVpcClassicLink(args: DescribeVpcClassicLinkCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpcClassicLinkCommandOutput>;
    describeVpcClassicLink(args: DescribeVpcClassicLinkCommandInput, cb: (err: any, data?: DescribeVpcClassicLinkCommandOutput) => void): void;
    describeVpcClassicLink(args: DescribeVpcClassicLinkCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpcClassicLinkCommandOutput) => void): void;
    
    describeVpcClassicLinkDnsSupport(args: DescribeVpcClassicLinkDnsSupportCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpcClassicLinkDnsSupportCommandOutput>;
    describeVpcClassicLinkDnsSupport(args: DescribeVpcClassicLinkDnsSupportCommandInput, cb: (err: any, data?: DescribeVpcClassicLinkDnsSupportCommandOutput) => void): void;
    describeVpcClassicLinkDnsSupport(args: DescribeVpcClassicLinkDnsSupportCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpcClassicLinkDnsSupportCommandOutput) => void): void;
    
    describeVpcEndpointConnectionNotifications(args: DescribeVpcEndpointConnectionNotificationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpcEndpointConnectionNotificationsCommandOutput>;
    describeVpcEndpointConnectionNotifications(args: DescribeVpcEndpointConnectionNotificationsCommandInput, cb: (err: any, data?: DescribeVpcEndpointConnectionNotificationsCommandOutput) => void): void;
    describeVpcEndpointConnectionNotifications(args: DescribeVpcEndpointConnectionNotificationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpcEndpointConnectionNotificationsCommandOutput) => void): void;
    
    describeVpcEndpointConnections(args: DescribeVpcEndpointConnectionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpcEndpointConnectionsCommandOutput>;
    describeVpcEndpointConnections(args: DescribeVpcEndpointConnectionsCommandInput, cb: (err: any, data?: DescribeVpcEndpointConnectionsCommandOutput) => void): void;
    describeVpcEndpointConnections(args: DescribeVpcEndpointConnectionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpcEndpointConnectionsCommandOutput) => void): void;
    
    describeVpcEndpoints(args: DescribeVpcEndpointsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpcEndpointsCommandOutput>;
    describeVpcEndpoints(args: DescribeVpcEndpointsCommandInput, cb: (err: any, data?: DescribeVpcEndpointsCommandOutput) => void): void;
    describeVpcEndpoints(args: DescribeVpcEndpointsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpcEndpointsCommandOutput) => void): void;
    
    describeVpcEndpointServiceConfigurations(args: DescribeVpcEndpointServiceConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpcEndpointServiceConfigurationsCommandOutput>;
    describeVpcEndpointServiceConfigurations(args: DescribeVpcEndpointServiceConfigurationsCommandInput, cb: (err: any, data?: DescribeVpcEndpointServiceConfigurationsCommandOutput) => void): void;
    describeVpcEndpointServiceConfigurations(args: DescribeVpcEndpointServiceConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpcEndpointServiceConfigurationsCommandOutput) => void): void;
    
    describeVpcEndpointServicePermissions(args: DescribeVpcEndpointServicePermissionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpcEndpointServicePermissionsCommandOutput>;
    describeVpcEndpointServicePermissions(args: DescribeVpcEndpointServicePermissionsCommandInput, cb: (err: any, data?: DescribeVpcEndpointServicePermissionsCommandOutput) => void): void;
    describeVpcEndpointServicePermissions(args: DescribeVpcEndpointServicePermissionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpcEndpointServicePermissionsCommandOutput) => void): void;
    
    describeVpcEndpointServices(args: DescribeVpcEndpointServicesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpcEndpointServicesCommandOutput>;
    describeVpcEndpointServices(args: DescribeVpcEndpointServicesCommandInput, cb: (err: any, data?: DescribeVpcEndpointServicesCommandOutput) => void): void;
    describeVpcEndpointServices(args: DescribeVpcEndpointServicesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpcEndpointServicesCommandOutput) => void): void;
    
    describeVpcPeeringConnections(args: DescribeVpcPeeringConnectionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpcPeeringConnectionsCommandOutput>;
    describeVpcPeeringConnections(args: DescribeVpcPeeringConnectionsCommandInput, cb: (err: any, data?: DescribeVpcPeeringConnectionsCommandOutput) => void): void;
    describeVpcPeeringConnections(args: DescribeVpcPeeringConnectionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpcPeeringConnectionsCommandOutput) => void): void;
    
    describeVpcs(args: DescribeVpcsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpcsCommandOutput>;
    describeVpcs(args: DescribeVpcsCommandInput, cb: (err: any, data?: DescribeVpcsCommandOutput) => void): void;
    describeVpcs(args: DescribeVpcsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpcsCommandOutput) => void): void;
    
    describeVpnConnections(args: DescribeVpnConnectionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpnConnectionsCommandOutput>;
    describeVpnConnections(args: DescribeVpnConnectionsCommandInput, cb: (err: any, data?: DescribeVpnConnectionsCommandOutput) => void): void;
    describeVpnConnections(args: DescribeVpnConnectionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpnConnectionsCommandOutput) => void): void;
    
    describeVpnGateways(args: DescribeVpnGatewaysCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVpnGatewaysCommandOutput>;
    describeVpnGateways(args: DescribeVpnGatewaysCommandInput, cb: (err: any, data?: DescribeVpnGatewaysCommandOutput) => void): void;
    describeVpnGateways(args: DescribeVpnGatewaysCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVpnGatewaysCommandOutput) => void): void;
    
    detachClassicLinkVpc(args: DetachClassicLinkVpcCommandInput, options?: __HttpHandlerOptions): Promise<DetachClassicLinkVpcCommandOutput>;
    detachClassicLinkVpc(args: DetachClassicLinkVpcCommandInput, cb: (err: any, data?: DetachClassicLinkVpcCommandOutput) => void): void;
    detachClassicLinkVpc(args: DetachClassicLinkVpcCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetachClassicLinkVpcCommandOutput) => void): void;
    
    detachInternetGateway(args: DetachInternetGatewayCommandInput, options?: __HttpHandlerOptions): Promise<DetachInternetGatewayCommandOutput>;
    detachInternetGateway(args: DetachInternetGatewayCommandInput, cb: (err: any, data?: DetachInternetGatewayCommandOutput) => void): void;
    detachInternetGateway(args: DetachInternetGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetachInternetGatewayCommandOutput) => void): void;
    
    detachNetworkInterface(args: DetachNetworkInterfaceCommandInput, options?: __HttpHandlerOptions): Promise<DetachNetworkInterfaceCommandOutput>;
    detachNetworkInterface(args: DetachNetworkInterfaceCommandInput, cb: (err: any, data?: DetachNetworkInterfaceCommandOutput) => void): void;
    detachNetworkInterface(args: DetachNetworkInterfaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetachNetworkInterfaceCommandOutput) => void): void;
    
    detachVolume(args: DetachVolumeCommandInput, options?: __HttpHandlerOptions): Promise<DetachVolumeCommandOutput>;
    detachVolume(args: DetachVolumeCommandInput, cb: (err: any, data?: DetachVolumeCommandOutput) => void): void;
    detachVolume(args: DetachVolumeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetachVolumeCommandOutput) => void): void;
    
    detachVpnGateway(args: DetachVpnGatewayCommandInput, options?: __HttpHandlerOptions): Promise<DetachVpnGatewayCommandOutput>;
    detachVpnGateway(args: DetachVpnGatewayCommandInput, cb: (err: any, data?: DetachVpnGatewayCommandOutput) => void): void;
    detachVpnGateway(args: DetachVpnGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetachVpnGatewayCommandOutput) => void): void;
    
    disableEbsEncryptionByDefault(args: DisableEbsEncryptionByDefaultCommandInput, options?: __HttpHandlerOptions): Promise<DisableEbsEncryptionByDefaultCommandOutput>;
    disableEbsEncryptionByDefault(args: DisableEbsEncryptionByDefaultCommandInput, cb: (err: any, data?: DisableEbsEncryptionByDefaultCommandOutput) => void): void;
    disableEbsEncryptionByDefault(args: DisableEbsEncryptionByDefaultCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableEbsEncryptionByDefaultCommandOutput) => void): void;
    
    disableFastLaunch(args: DisableFastLaunchCommandInput, options?: __HttpHandlerOptions): Promise<DisableFastLaunchCommandOutput>;
    disableFastLaunch(args: DisableFastLaunchCommandInput, cb: (err: any, data?: DisableFastLaunchCommandOutput) => void): void;
    disableFastLaunch(args: DisableFastLaunchCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableFastLaunchCommandOutput) => void): void;
    
    disableFastSnapshotRestores(args: DisableFastSnapshotRestoresCommandInput, options?: __HttpHandlerOptions): Promise<DisableFastSnapshotRestoresCommandOutput>;
    disableFastSnapshotRestores(args: DisableFastSnapshotRestoresCommandInput, cb: (err: any, data?: DisableFastSnapshotRestoresCommandOutput) => void): void;
    disableFastSnapshotRestores(args: DisableFastSnapshotRestoresCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableFastSnapshotRestoresCommandOutput) => void): void;
    
    disableImageDeprecation(args: DisableImageDeprecationCommandInput, options?: __HttpHandlerOptions): Promise<DisableImageDeprecationCommandOutput>;
    disableImageDeprecation(args: DisableImageDeprecationCommandInput, cb: (err: any, data?: DisableImageDeprecationCommandOutput) => void): void;
    disableImageDeprecation(args: DisableImageDeprecationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableImageDeprecationCommandOutput) => void): void;
    
    disableIpamOrganizationAdminAccount(args: DisableIpamOrganizationAdminAccountCommandInput, options?: __HttpHandlerOptions): Promise<DisableIpamOrganizationAdminAccountCommandOutput>;
    disableIpamOrganizationAdminAccount(args: DisableIpamOrganizationAdminAccountCommandInput, cb: (err: any, data?: DisableIpamOrganizationAdminAccountCommandOutput) => void): void;
    disableIpamOrganizationAdminAccount(args: DisableIpamOrganizationAdminAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableIpamOrganizationAdminAccountCommandOutput) => void): void;
    
    disableSerialConsoleAccess(args: DisableSerialConsoleAccessCommandInput, options?: __HttpHandlerOptions): Promise<DisableSerialConsoleAccessCommandOutput>;
    disableSerialConsoleAccess(args: DisableSerialConsoleAccessCommandInput, cb: (err: any, data?: DisableSerialConsoleAccessCommandOutput) => void): void;
    disableSerialConsoleAccess(args: DisableSerialConsoleAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableSerialConsoleAccessCommandOutput) => void): void;
    
    disableTransitGatewayRouteTablePropagation(args: DisableTransitGatewayRouteTablePropagationCommandInput, options?: __HttpHandlerOptions): Promise<DisableTransitGatewayRouteTablePropagationCommandOutput>;
    disableTransitGatewayRouteTablePropagation(args: DisableTransitGatewayRouteTablePropagationCommandInput, cb: (err: any, data?: DisableTransitGatewayRouteTablePropagationCommandOutput) => void): void;
    disableTransitGatewayRouteTablePropagation(args: DisableTransitGatewayRouteTablePropagationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableTransitGatewayRouteTablePropagationCommandOutput) => void): void;
    
    disableVgwRoutePropagation(args: DisableVgwRoutePropagationCommandInput, options?: __HttpHandlerOptions): Promise<DisableVgwRoutePropagationCommandOutput>;
    disableVgwRoutePropagation(args: DisableVgwRoutePropagationCommandInput, cb: (err: any, data?: DisableVgwRoutePropagationCommandOutput) => void): void;
    disableVgwRoutePropagation(args: DisableVgwRoutePropagationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableVgwRoutePropagationCommandOutput) => void): void;
    
    disableVpcClassicLink(args: DisableVpcClassicLinkCommandInput, options?: __HttpHandlerOptions): Promise<DisableVpcClassicLinkCommandOutput>;
    disableVpcClassicLink(args: DisableVpcClassicLinkCommandInput, cb: (err: any, data?: DisableVpcClassicLinkCommandOutput) => void): void;
    disableVpcClassicLink(args: DisableVpcClassicLinkCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableVpcClassicLinkCommandOutput) => void): void;
    
    disableVpcClassicLinkDnsSupport(args: DisableVpcClassicLinkDnsSupportCommandInput, options?: __HttpHandlerOptions): Promise<DisableVpcClassicLinkDnsSupportCommandOutput>;
    disableVpcClassicLinkDnsSupport(args: DisableVpcClassicLinkDnsSupportCommandInput, cb: (err: any, data?: DisableVpcClassicLinkDnsSupportCommandOutput) => void): void;
    disableVpcClassicLinkDnsSupport(args: DisableVpcClassicLinkDnsSupportCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableVpcClassicLinkDnsSupportCommandOutput) => void): void;
    
    disassociateAddress(args: DisassociateAddressCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateAddressCommandOutput>;
    disassociateAddress(args: DisassociateAddressCommandInput, cb: (err: any, data?: DisassociateAddressCommandOutput) => void): void;
    disassociateAddress(args: DisassociateAddressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateAddressCommandOutput) => void): void;
    
    disassociateClientVpnTargetNetwork(args: DisassociateClientVpnTargetNetworkCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateClientVpnTargetNetworkCommandOutput>;
    disassociateClientVpnTargetNetwork(args: DisassociateClientVpnTargetNetworkCommandInput, cb: (err: any, data?: DisassociateClientVpnTargetNetworkCommandOutput) => void): void;
    disassociateClientVpnTargetNetwork(args: DisassociateClientVpnTargetNetworkCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateClientVpnTargetNetworkCommandOutput) => void): void;
    
    disassociateEnclaveCertificateIamRole(args: DisassociateEnclaveCertificateIamRoleCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateEnclaveCertificateIamRoleCommandOutput>;
    disassociateEnclaveCertificateIamRole(args: DisassociateEnclaveCertificateIamRoleCommandInput, cb: (err: any, data?: DisassociateEnclaveCertificateIamRoleCommandOutput) => void): void;
    disassociateEnclaveCertificateIamRole(args: DisassociateEnclaveCertificateIamRoleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateEnclaveCertificateIamRoleCommandOutput) => void): void;
    
    disassociateIamInstanceProfile(args: DisassociateIamInstanceProfileCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateIamInstanceProfileCommandOutput>;
    disassociateIamInstanceProfile(args: DisassociateIamInstanceProfileCommandInput, cb: (err: any, data?: DisassociateIamInstanceProfileCommandOutput) => void): void;
    disassociateIamInstanceProfile(args: DisassociateIamInstanceProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateIamInstanceProfileCommandOutput) => void): void;
    
    disassociateInstanceEventWindow(args: DisassociateInstanceEventWindowCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateInstanceEventWindowCommandOutput>;
    disassociateInstanceEventWindow(args: DisassociateInstanceEventWindowCommandInput, cb: (err: any, data?: DisassociateInstanceEventWindowCommandOutput) => void): void;
    disassociateInstanceEventWindow(args: DisassociateInstanceEventWindowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateInstanceEventWindowCommandOutput) => void): void;
    
    disassociateRouteTable(args: DisassociateRouteTableCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateRouteTableCommandOutput>;
    disassociateRouteTable(args: DisassociateRouteTableCommandInput, cb: (err: any, data?: DisassociateRouteTableCommandOutput) => void): void;
    disassociateRouteTable(args: DisassociateRouteTableCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateRouteTableCommandOutput) => void): void;
    
    disassociateSubnetCidrBlock(args: DisassociateSubnetCidrBlockCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateSubnetCidrBlockCommandOutput>;
    disassociateSubnetCidrBlock(args: DisassociateSubnetCidrBlockCommandInput, cb: (err: any, data?: DisassociateSubnetCidrBlockCommandOutput) => void): void;
    disassociateSubnetCidrBlock(args: DisassociateSubnetCidrBlockCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateSubnetCidrBlockCommandOutput) => void): void;
    
    disassociateTransitGatewayMulticastDomain(args: DisassociateTransitGatewayMulticastDomainCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateTransitGatewayMulticastDomainCommandOutput>;
    disassociateTransitGatewayMulticastDomain(args: DisassociateTransitGatewayMulticastDomainCommandInput, cb: (err: any, data?: DisassociateTransitGatewayMulticastDomainCommandOutput) => void): void;
    disassociateTransitGatewayMulticastDomain(args: DisassociateTransitGatewayMulticastDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateTransitGatewayMulticastDomainCommandOutput) => void): void;
    
    disassociateTransitGatewayRouteTable(args: DisassociateTransitGatewayRouteTableCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateTransitGatewayRouteTableCommandOutput>;
    disassociateTransitGatewayRouteTable(args: DisassociateTransitGatewayRouteTableCommandInput, cb: (err: any, data?: DisassociateTransitGatewayRouteTableCommandOutput) => void): void;
    disassociateTransitGatewayRouteTable(args: DisassociateTransitGatewayRouteTableCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateTransitGatewayRouteTableCommandOutput) => void): void;
    
    disassociateTrunkInterface(args: DisassociateTrunkInterfaceCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateTrunkInterfaceCommandOutput>;
    disassociateTrunkInterface(args: DisassociateTrunkInterfaceCommandInput, cb: (err: any, data?: DisassociateTrunkInterfaceCommandOutput) => void): void;
    disassociateTrunkInterface(args: DisassociateTrunkInterfaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateTrunkInterfaceCommandOutput) => void): void;
    
    disassociateVpcCidrBlock(args: DisassociateVpcCidrBlockCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateVpcCidrBlockCommandOutput>;
    disassociateVpcCidrBlock(args: DisassociateVpcCidrBlockCommandInput, cb: (err: any, data?: DisassociateVpcCidrBlockCommandOutput) => void): void;
    disassociateVpcCidrBlock(args: DisassociateVpcCidrBlockCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateVpcCidrBlockCommandOutput) => void): void;
    
    enableEbsEncryptionByDefault(args: EnableEbsEncryptionByDefaultCommandInput, options?: __HttpHandlerOptions): Promise<EnableEbsEncryptionByDefaultCommandOutput>;
    enableEbsEncryptionByDefault(args: EnableEbsEncryptionByDefaultCommandInput, cb: (err: any, data?: EnableEbsEncryptionByDefaultCommandOutput) => void): void;
    enableEbsEncryptionByDefault(args: EnableEbsEncryptionByDefaultCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableEbsEncryptionByDefaultCommandOutput) => void): void;
    
    enableFastLaunch(args: EnableFastLaunchCommandInput, options?: __HttpHandlerOptions): Promise<EnableFastLaunchCommandOutput>;
    enableFastLaunch(args: EnableFastLaunchCommandInput, cb: (err: any, data?: EnableFastLaunchCommandOutput) => void): void;
    enableFastLaunch(args: EnableFastLaunchCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableFastLaunchCommandOutput) => void): void;
    
    enableFastSnapshotRestores(args: EnableFastSnapshotRestoresCommandInput, options?: __HttpHandlerOptions): Promise<EnableFastSnapshotRestoresCommandOutput>;
    enableFastSnapshotRestores(args: EnableFastSnapshotRestoresCommandInput, cb: (err: any, data?: EnableFastSnapshotRestoresCommandOutput) => void): void;
    enableFastSnapshotRestores(args: EnableFastSnapshotRestoresCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableFastSnapshotRestoresCommandOutput) => void): void;
    
    enableImageDeprecation(args: EnableImageDeprecationCommandInput, options?: __HttpHandlerOptions): Promise<EnableImageDeprecationCommandOutput>;
    enableImageDeprecation(args: EnableImageDeprecationCommandInput, cb: (err: any, data?: EnableImageDeprecationCommandOutput) => void): void;
    enableImageDeprecation(args: EnableImageDeprecationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableImageDeprecationCommandOutput) => void): void;
    
    enableIpamOrganizationAdminAccount(args: EnableIpamOrganizationAdminAccountCommandInput, options?: __HttpHandlerOptions): Promise<EnableIpamOrganizationAdminAccountCommandOutput>;
    enableIpamOrganizationAdminAccount(args: EnableIpamOrganizationAdminAccountCommandInput, cb: (err: any, data?: EnableIpamOrganizationAdminAccountCommandOutput) => void): void;
    enableIpamOrganizationAdminAccount(args: EnableIpamOrganizationAdminAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableIpamOrganizationAdminAccountCommandOutput) => void): void;
    
    enableSerialConsoleAccess(args: EnableSerialConsoleAccessCommandInput, options?: __HttpHandlerOptions): Promise<EnableSerialConsoleAccessCommandOutput>;
    enableSerialConsoleAccess(args: EnableSerialConsoleAccessCommandInput, cb: (err: any, data?: EnableSerialConsoleAccessCommandOutput) => void): void;
    enableSerialConsoleAccess(args: EnableSerialConsoleAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableSerialConsoleAccessCommandOutput) => void): void;
    
    enableTransitGatewayRouteTablePropagation(args: EnableTransitGatewayRouteTablePropagationCommandInput, options?: __HttpHandlerOptions): Promise<EnableTransitGatewayRouteTablePropagationCommandOutput>;
    enableTransitGatewayRouteTablePropagation(args: EnableTransitGatewayRouteTablePropagationCommandInput, cb: (err: any, data?: EnableTransitGatewayRouteTablePropagationCommandOutput) => void): void;
    enableTransitGatewayRouteTablePropagation(args: EnableTransitGatewayRouteTablePropagationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableTransitGatewayRouteTablePropagationCommandOutput) => void): void;
    
    enableVgwRoutePropagation(args: EnableVgwRoutePropagationCommandInput, options?: __HttpHandlerOptions): Promise<EnableVgwRoutePropagationCommandOutput>;
    enableVgwRoutePropagation(args: EnableVgwRoutePropagationCommandInput, cb: (err: any, data?: EnableVgwRoutePropagationCommandOutput) => void): void;
    enableVgwRoutePropagation(args: EnableVgwRoutePropagationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableVgwRoutePropagationCommandOutput) => void): void;
    
    enableVolumeIO(args: EnableVolumeIOCommandInput, options?: __HttpHandlerOptions): Promise<EnableVolumeIOCommandOutput>;
    enableVolumeIO(args: EnableVolumeIOCommandInput, cb: (err: any, data?: EnableVolumeIOCommandOutput) => void): void;
    enableVolumeIO(args: EnableVolumeIOCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableVolumeIOCommandOutput) => void): void;
    
    enableVpcClassicLink(args: EnableVpcClassicLinkCommandInput, options?: __HttpHandlerOptions): Promise<EnableVpcClassicLinkCommandOutput>;
    enableVpcClassicLink(args: EnableVpcClassicLinkCommandInput, cb: (err: any, data?: EnableVpcClassicLinkCommandOutput) => void): void;
    enableVpcClassicLink(args: EnableVpcClassicLinkCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableVpcClassicLinkCommandOutput) => void): void;
    
    enableVpcClassicLinkDnsSupport(args: EnableVpcClassicLinkDnsSupportCommandInput, options?: __HttpHandlerOptions): Promise<EnableVpcClassicLinkDnsSupportCommandOutput>;
    enableVpcClassicLinkDnsSupport(args: EnableVpcClassicLinkDnsSupportCommandInput, cb: (err: any, data?: EnableVpcClassicLinkDnsSupportCommandOutput) => void): void;
    enableVpcClassicLinkDnsSupport(args: EnableVpcClassicLinkDnsSupportCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableVpcClassicLinkDnsSupportCommandOutput) => void): void;
    
    exportClientVpnClientCertificateRevocationList(args: ExportClientVpnClientCertificateRevocationListCommandInput, options?: __HttpHandlerOptions): Promise<ExportClientVpnClientCertificateRevocationListCommandOutput>;
    exportClientVpnClientCertificateRevocationList(args: ExportClientVpnClientCertificateRevocationListCommandInput, cb: (err: any, data?: ExportClientVpnClientCertificateRevocationListCommandOutput) => void): void;
    exportClientVpnClientCertificateRevocationList(args: ExportClientVpnClientCertificateRevocationListCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ExportClientVpnClientCertificateRevocationListCommandOutput) => void): void;
    
    exportClientVpnClientConfiguration(args: ExportClientVpnClientConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<ExportClientVpnClientConfigurationCommandOutput>;
    exportClientVpnClientConfiguration(args: ExportClientVpnClientConfigurationCommandInput, cb: (err: any, data?: ExportClientVpnClientConfigurationCommandOutput) => void): void;
    exportClientVpnClientConfiguration(args: ExportClientVpnClientConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ExportClientVpnClientConfigurationCommandOutput) => void): void;
    
    exportImage(args: ExportImageCommandInput, options?: __HttpHandlerOptions): Promise<ExportImageCommandOutput>;
    exportImage(args: ExportImageCommandInput, cb: (err: any, data?: ExportImageCommandOutput) => void): void;
    exportImage(args: ExportImageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ExportImageCommandOutput) => void): void;
    
    exportTransitGatewayRoutes(args: ExportTransitGatewayRoutesCommandInput, options?: __HttpHandlerOptions): Promise<ExportTransitGatewayRoutesCommandOutput>;
    exportTransitGatewayRoutes(args: ExportTransitGatewayRoutesCommandInput, cb: (err: any, data?: ExportTransitGatewayRoutesCommandOutput) => void): void;
    exportTransitGatewayRoutes(args: ExportTransitGatewayRoutesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ExportTransitGatewayRoutesCommandOutput) => void): void;
    
    getAssociatedEnclaveCertificateIamRoles(args: GetAssociatedEnclaveCertificateIamRolesCommandInput, options?: __HttpHandlerOptions): Promise<GetAssociatedEnclaveCertificateIamRolesCommandOutput>;
    getAssociatedEnclaveCertificateIamRoles(args: GetAssociatedEnclaveCertificateIamRolesCommandInput, cb: (err: any, data?: GetAssociatedEnclaveCertificateIamRolesCommandOutput) => void): void;
    getAssociatedEnclaveCertificateIamRoles(args: GetAssociatedEnclaveCertificateIamRolesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAssociatedEnclaveCertificateIamRolesCommandOutput) => void): void;
    
    getAssociatedIpv6PoolCidrs(args: GetAssociatedIpv6PoolCidrsCommandInput, options?: __HttpHandlerOptions): Promise<GetAssociatedIpv6PoolCidrsCommandOutput>;
    getAssociatedIpv6PoolCidrs(args: GetAssociatedIpv6PoolCidrsCommandInput, cb: (err: any, data?: GetAssociatedIpv6PoolCidrsCommandOutput) => void): void;
    getAssociatedIpv6PoolCidrs(args: GetAssociatedIpv6PoolCidrsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAssociatedIpv6PoolCidrsCommandOutput) => void): void;
    
    getCapacityReservationUsage(args: GetCapacityReservationUsageCommandInput, options?: __HttpHandlerOptions): Promise<GetCapacityReservationUsageCommandOutput>;
    getCapacityReservationUsage(args: GetCapacityReservationUsageCommandInput, cb: (err: any, data?: GetCapacityReservationUsageCommandOutput) => void): void;
    getCapacityReservationUsage(args: GetCapacityReservationUsageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetCapacityReservationUsageCommandOutput) => void): void;
    
    getCoipPoolUsage(args: GetCoipPoolUsageCommandInput, options?: __HttpHandlerOptions): Promise<GetCoipPoolUsageCommandOutput>;
    getCoipPoolUsage(args: GetCoipPoolUsageCommandInput, cb: (err: any, data?: GetCoipPoolUsageCommandOutput) => void): void;
    getCoipPoolUsage(args: GetCoipPoolUsageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetCoipPoolUsageCommandOutput) => void): void;
    
    getConsoleOutput(args: GetConsoleOutputCommandInput, options?: __HttpHandlerOptions): Promise<GetConsoleOutputCommandOutput>;
    getConsoleOutput(args: GetConsoleOutputCommandInput, cb: (err: any, data?: GetConsoleOutputCommandOutput) => void): void;
    getConsoleOutput(args: GetConsoleOutputCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetConsoleOutputCommandOutput) => void): void;
    
    getConsoleScreenshot(args: GetConsoleScreenshotCommandInput, options?: __HttpHandlerOptions): Promise<GetConsoleScreenshotCommandOutput>;
    getConsoleScreenshot(args: GetConsoleScreenshotCommandInput, cb: (err: any, data?: GetConsoleScreenshotCommandOutput) => void): void;
    getConsoleScreenshot(args: GetConsoleScreenshotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetConsoleScreenshotCommandOutput) => void): void;
    
    getDefaultCreditSpecification(args: GetDefaultCreditSpecificationCommandInput, options?: __HttpHandlerOptions): Promise<GetDefaultCreditSpecificationCommandOutput>;
    getDefaultCreditSpecification(args: GetDefaultCreditSpecificationCommandInput, cb: (err: any, data?: GetDefaultCreditSpecificationCommandOutput) => void): void;
    getDefaultCreditSpecification(args: GetDefaultCreditSpecificationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetDefaultCreditSpecificationCommandOutput) => void): void;
    
    getEbsDefaultKmsKeyId(args: GetEbsDefaultKmsKeyIdCommandInput, options?: __HttpHandlerOptions): Promise<GetEbsDefaultKmsKeyIdCommandOutput>;
    getEbsDefaultKmsKeyId(args: GetEbsDefaultKmsKeyIdCommandInput, cb: (err: any, data?: GetEbsDefaultKmsKeyIdCommandOutput) => void): void;
    getEbsDefaultKmsKeyId(args: GetEbsDefaultKmsKeyIdCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEbsDefaultKmsKeyIdCommandOutput) => void): void;
    
    getEbsEncryptionByDefault(args: GetEbsEncryptionByDefaultCommandInput, options?: __HttpHandlerOptions): Promise<GetEbsEncryptionByDefaultCommandOutput>;
    getEbsEncryptionByDefault(args: GetEbsEncryptionByDefaultCommandInput, cb: (err: any, data?: GetEbsEncryptionByDefaultCommandOutput) => void): void;
    getEbsEncryptionByDefault(args: GetEbsEncryptionByDefaultCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEbsEncryptionByDefaultCommandOutput) => void): void;
    
    getFlowLogsIntegrationTemplate(args: GetFlowLogsIntegrationTemplateCommandInput, options?: __HttpHandlerOptions): Promise<GetFlowLogsIntegrationTemplateCommandOutput>;
    getFlowLogsIntegrationTemplate(args: GetFlowLogsIntegrationTemplateCommandInput, cb: (err: any, data?: GetFlowLogsIntegrationTemplateCommandOutput) => void): void;
    getFlowLogsIntegrationTemplate(args: GetFlowLogsIntegrationTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetFlowLogsIntegrationTemplateCommandOutput) => void): void;
    
    getGroupsForCapacityReservation(args: GetGroupsForCapacityReservationCommandInput, options?: __HttpHandlerOptions): Promise<GetGroupsForCapacityReservationCommandOutput>;
    getGroupsForCapacityReservation(args: GetGroupsForCapacityReservationCommandInput, cb: (err: any, data?: GetGroupsForCapacityReservationCommandOutput) => void): void;
    getGroupsForCapacityReservation(args: GetGroupsForCapacityReservationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetGroupsForCapacityReservationCommandOutput) => void): void;
    
    getHostReservationPurchasePreview(args: GetHostReservationPurchasePreviewCommandInput, options?: __HttpHandlerOptions): Promise<GetHostReservationPurchasePreviewCommandOutput>;
    getHostReservationPurchasePreview(args: GetHostReservationPurchasePreviewCommandInput, cb: (err: any, data?: GetHostReservationPurchasePreviewCommandOutput) => void): void;
    getHostReservationPurchasePreview(args: GetHostReservationPurchasePreviewCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetHostReservationPurchasePreviewCommandOutput) => void): void;
    
    getInstanceTypesFromInstanceRequirements(args: GetInstanceTypesFromInstanceRequirementsCommandInput, options?: __HttpHandlerOptions): Promise<GetInstanceTypesFromInstanceRequirementsCommandOutput>;
    getInstanceTypesFromInstanceRequirements(args: GetInstanceTypesFromInstanceRequirementsCommandInput, cb: (err: any, data?: GetInstanceTypesFromInstanceRequirementsCommandOutput) => void): void;
    getInstanceTypesFromInstanceRequirements(args: GetInstanceTypesFromInstanceRequirementsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetInstanceTypesFromInstanceRequirementsCommandOutput) => void): void;
    
    getInstanceUefiData(args: GetInstanceUefiDataCommandInput, options?: __HttpHandlerOptions): Promise<GetInstanceUefiDataCommandOutput>;
    getInstanceUefiData(args: GetInstanceUefiDataCommandInput, cb: (err: any, data?: GetInstanceUefiDataCommandOutput) => void): void;
    getInstanceUefiData(args: GetInstanceUefiDataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetInstanceUefiDataCommandOutput) => void): void;
    
    getIpamAddressHistory(args: GetIpamAddressHistoryCommandInput, options?: __HttpHandlerOptions): Promise<GetIpamAddressHistoryCommandOutput>;
    getIpamAddressHistory(args: GetIpamAddressHistoryCommandInput, cb: (err: any, data?: GetIpamAddressHistoryCommandOutput) => void): void;
    getIpamAddressHistory(args: GetIpamAddressHistoryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetIpamAddressHistoryCommandOutput) => void): void;
    
    getIpamPoolAllocations(args: GetIpamPoolAllocationsCommandInput, options?: __HttpHandlerOptions): Promise<GetIpamPoolAllocationsCommandOutput>;
    getIpamPoolAllocations(args: GetIpamPoolAllocationsCommandInput, cb: (err: any, data?: GetIpamPoolAllocationsCommandOutput) => void): void;
    getIpamPoolAllocations(args: GetIpamPoolAllocationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetIpamPoolAllocationsCommandOutput) => void): void;
    
    getIpamPoolCidrs(args: GetIpamPoolCidrsCommandInput, options?: __HttpHandlerOptions): Promise<GetIpamPoolCidrsCommandOutput>;
    getIpamPoolCidrs(args: GetIpamPoolCidrsCommandInput, cb: (err: any, data?: GetIpamPoolCidrsCommandOutput) => void): void;
    getIpamPoolCidrs(args: GetIpamPoolCidrsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetIpamPoolCidrsCommandOutput) => void): void;
    
    getIpamResourceCidrs(args: GetIpamResourceCidrsCommandInput, options?: __HttpHandlerOptions): Promise<GetIpamResourceCidrsCommandOutput>;
    getIpamResourceCidrs(args: GetIpamResourceCidrsCommandInput, cb: (err: any, data?: GetIpamResourceCidrsCommandOutput) => void): void;
    getIpamResourceCidrs(args: GetIpamResourceCidrsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetIpamResourceCidrsCommandOutput) => void): void;
    
    getLaunchTemplateData(args: GetLaunchTemplateDataCommandInput, options?: __HttpHandlerOptions): Promise<GetLaunchTemplateDataCommandOutput>;
    getLaunchTemplateData(args: GetLaunchTemplateDataCommandInput, cb: (err: any, data?: GetLaunchTemplateDataCommandOutput) => void): void;
    getLaunchTemplateData(args: GetLaunchTemplateDataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetLaunchTemplateDataCommandOutput) => void): void;
    
    getManagedPrefixListAssociations(args: GetManagedPrefixListAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<GetManagedPrefixListAssociationsCommandOutput>;
    getManagedPrefixListAssociations(args: GetManagedPrefixListAssociationsCommandInput, cb: (err: any, data?: GetManagedPrefixListAssociationsCommandOutput) => void): void;
    getManagedPrefixListAssociations(args: GetManagedPrefixListAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetManagedPrefixListAssociationsCommandOutput) => void): void;
    
    getManagedPrefixListEntries(args: GetManagedPrefixListEntriesCommandInput, options?: __HttpHandlerOptions): Promise<GetManagedPrefixListEntriesCommandOutput>;
    getManagedPrefixListEntries(args: GetManagedPrefixListEntriesCommandInput, cb: (err: any, data?: GetManagedPrefixListEntriesCommandOutput) => void): void;
    getManagedPrefixListEntries(args: GetManagedPrefixListEntriesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetManagedPrefixListEntriesCommandOutput) => void): void;
    
    getNetworkInsightsAccessScopeAnalysisFindings(args: GetNetworkInsightsAccessScopeAnalysisFindingsCommandInput, options?: __HttpHandlerOptions): Promise<GetNetworkInsightsAccessScopeAnalysisFindingsCommandOutput>;
    getNetworkInsightsAccessScopeAnalysisFindings(args: GetNetworkInsightsAccessScopeAnalysisFindingsCommandInput, cb: (err: any, data?: GetNetworkInsightsAccessScopeAnalysisFindingsCommandOutput) => void): void;
    getNetworkInsightsAccessScopeAnalysisFindings(args: GetNetworkInsightsAccessScopeAnalysisFindingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetNetworkInsightsAccessScopeAnalysisFindingsCommandOutput) => void): void;
    
    getNetworkInsightsAccessScopeContent(args: GetNetworkInsightsAccessScopeContentCommandInput, options?: __HttpHandlerOptions): Promise<GetNetworkInsightsAccessScopeContentCommandOutput>;
    getNetworkInsightsAccessScopeContent(args: GetNetworkInsightsAccessScopeContentCommandInput, cb: (err: any, data?: GetNetworkInsightsAccessScopeContentCommandOutput) => void): void;
    getNetworkInsightsAccessScopeContent(args: GetNetworkInsightsAccessScopeContentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetNetworkInsightsAccessScopeContentCommandOutput) => void): void;
    
    getPasswordData(args: GetPasswordDataCommandInput, options?: __HttpHandlerOptions): Promise<GetPasswordDataCommandOutput>;
    getPasswordData(args: GetPasswordDataCommandInput, cb: (err: any, data?: GetPasswordDataCommandOutput) => void): void;
    getPasswordData(args: GetPasswordDataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetPasswordDataCommandOutput) => void): void;
    
    getReservedInstancesExchangeQuote(args: GetReservedInstancesExchangeQuoteCommandInput, options?: __HttpHandlerOptions): Promise<GetReservedInstancesExchangeQuoteCommandOutput>;
    getReservedInstancesExchangeQuote(args: GetReservedInstancesExchangeQuoteCommandInput, cb: (err: any, data?: GetReservedInstancesExchangeQuoteCommandOutput) => void): void;
    getReservedInstancesExchangeQuote(args: GetReservedInstancesExchangeQuoteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetReservedInstancesExchangeQuoteCommandOutput) => void): void;
    
    getSerialConsoleAccessStatus(args: GetSerialConsoleAccessStatusCommandInput, options?: __HttpHandlerOptions): Promise<GetSerialConsoleAccessStatusCommandOutput>;
    getSerialConsoleAccessStatus(args: GetSerialConsoleAccessStatusCommandInput, cb: (err: any, data?: GetSerialConsoleAccessStatusCommandOutput) => void): void;
    getSerialConsoleAccessStatus(args: GetSerialConsoleAccessStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSerialConsoleAccessStatusCommandOutput) => void): void;
    
    getSpotPlacementScores(args: GetSpotPlacementScoresCommandInput, options?: __HttpHandlerOptions): Promise<GetSpotPlacementScoresCommandOutput>;
    getSpotPlacementScores(args: GetSpotPlacementScoresCommandInput, cb: (err: any, data?: GetSpotPlacementScoresCommandOutput) => void): void;
    getSpotPlacementScores(args: GetSpotPlacementScoresCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSpotPlacementScoresCommandOutput) => void): void;
    
    getSubnetCidrReservations(args: GetSubnetCidrReservationsCommandInput, options?: __HttpHandlerOptions): Promise<GetSubnetCidrReservationsCommandOutput>;
    getSubnetCidrReservations(args: GetSubnetCidrReservationsCommandInput, cb: (err: any, data?: GetSubnetCidrReservationsCommandOutput) => void): void;
    getSubnetCidrReservations(args: GetSubnetCidrReservationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSubnetCidrReservationsCommandOutput) => void): void;
    
    getTransitGatewayAttachmentPropagations(args: GetTransitGatewayAttachmentPropagationsCommandInput, options?: __HttpHandlerOptions): Promise<GetTransitGatewayAttachmentPropagationsCommandOutput>;
    getTransitGatewayAttachmentPropagations(args: GetTransitGatewayAttachmentPropagationsCommandInput, cb: (err: any, data?: GetTransitGatewayAttachmentPropagationsCommandOutput) => void): void;
    getTransitGatewayAttachmentPropagations(args: GetTransitGatewayAttachmentPropagationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTransitGatewayAttachmentPropagationsCommandOutput) => void): void;
    
    getTransitGatewayMulticastDomainAssociations(args: GetTransitGatewayMulticastDomainAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<GetTransitGatewayMulticastDomainAssociationsCommandOutput>;
    getTransitGatewayMulticastDomainAssociations(args: GetTransitGatewayMulticastDomainAssociationsCommandInput, cb: (err: any, data?: GetTransitGatewayMulticastDomainAssociationsCommandOutput) => void): void;
    getTransitGatewayMulticastDomainAssociations(args: GetTransitGatewayMulticastDomainAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTransitGatewayMulticastDomainAssociationsCommandOutput) => void): void;
    
    getTransitGatewayPrefixListReferences(args: GetTransitGatewayPrefixListReferencesCommandInput, options?: __HttpHandlerOptions): Promise<GetTransitGatewayPrefixListReferencesCommandOutput>;
    getTransitGatewayPrefixListReferences(args: GetTransitGatewayPrefixListReferencesCommandInput, cb: (err: any, data?: GetTransitGatewayPrefixListReferencesCommandOutput) => void): void;
    getTransitGatewayPrefixListReferences(args: GetTransitGatewayPrefixListReferencesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTransitGatewayPrefixListReferencesCommandOutput) => void): void;
    
    getTransitGatewayRouteTableAssociations(args: GetTransitGatewayRouteTableAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<GetTransitGatewayRouteTableAssociationsCommandOutput>;
    getTransitGatewayRouteTableAssociations(args: GetTransitGatewayRouteTableAssociationsCommandInput, cb: (err: any, data?: GetTransitGatewayRouteTableAssociationsCommandOutput) => void): void;
    getTransitGatewayRouteTableAssociations(args: GetTransitGatewayRouteTableAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTransitGatewayRouteTableAssociationsCommandOutput) => void): void;
    
    getTransitGatewayRouteTablePropagations(args: GetTransitGatewayRouteTablePropagationsCommandInput, options?: __HttpHandlerOptions): Promise<GetTransitGatewayRouteTablePropagationsCommandOutput>;
    getTransitGatewayRouteTablePropagations(args: GetTransitGatewayRouteTablePropagationsCommandInput, cb: (err: any, data?: GetTransitGatewayRouteTablePropagationsCommandOutput) => void): void;
    getTransitGatewayRouteTablePropagations(args: GetTransitGatewayRouteTablePropagationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTransitGatewayRouteTablePropagationsCommandOutput) => void): void;
    
    getVpnConnectionDeviceSampleConfiguration(args: GetVpnConnectionDeviceSampleConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<GetVpnConnectionDeviceSampleConfigurationCommandOutput>;
    getVpnConnectionDeviceSampleConfiguration(args: GetVpnConnectionDeviceSampleConfigurationCommandInput, cb: (err: any, data?: GetVpnConnectionDeviceSampleConfigurationCommandOutput) => void): void;
    getVpnConnectionDeviceSampleConfiguration(args: GetVpnConnectionDeviceSampleConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVpnConnectionDeviceSampleConfigurationCommandOutput) => void): void;
    
    getVpnConnectionDeviceTypes(args: GetVpnConnectionDeviceTypesCommandInput, options?: __HttpHandlerOptions): Promise<GetVpnConnectionDeviceTypesCommandOutput>;
    getVpnConnectionDeviceTypes(args: GetVpnConnectionDeviceTypesCommandInput, cb: (err: any, data?: GetVpnConnectionDeviceTypesCommandOutput) => void): void;
    getVpnConnectionDeviceTypes(args: GetVpnConnectionDeviceTypesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVpnConnectionDeviceTypesCommandOutput) => void): void;
    
    importClientVpnClientCertificateRevocationList(args: ImportClientVpnClientCertificateRevocationListCommandInput, options?: __HttpHandlerOptions): Promise<ImportClientVpnClientCertificateRevocationListCommandOutput>;
    importClientVpnClientCertificateRevocationList(args: ImportClientVpnClientCertificateRevocationListCommandInput, cb: (err: any, data?: ImportClientVpnClientCertificateRevocationListCommandOutput) => void): void;
    importClientVpnClientCertificateRevocationList(args: ImportClientVpnClientCertificateRevocationListCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ImportClientVpnClientCertificateRevocationListCommandOutput) => void): void;
    
    importImage(args: ImportImageCommandInput, options?: __HttpHandlerOptions): Promise<ImportImageCommandOutput>;
    importImage(args: ImportImageCommandInput, cb: (err: any, data?: ImportImageCommandOutput) => void): void;
    importImage(args: ImportImageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ImportImageCommandOutput) => void): void;
    
    importInstance(args: ImportInstanceCommandInput, options?: __HttpHandlerOptions): Promise<ImportInstanceCommandOutput>;
    importInstance(args: ImportInstanceCommandInput, cb: (err: any, data?: ImportInstanceCommandOutput) => void): void;
    importInstance(args: ImportInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ImportInstanceCommandOutput) => void): void;
    
    importKeyPair(args: ImportKeyPairCommandInput, options?: __HttpHandlerOptions): Promise<ImportKeyPairCommandOutput>;
    importKeyPair(args: ImportKeyPairCommandInput, cb: (err: any, data?: ImportKeyPairCommandOutput) => void): void;
    importKeyPair(args: ImportKeyPairCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ImportKeyPairCommandOutput) => void): void;
    
    importSnapshot(args: ImportSnapshotCommandInput, options?: __HttpHandlerOptions): Promise<ImportSnapshotCommandOutput>;
    importSnapshot(args: ImportSnapshotCommandInput, cb: (err: any, data?: ImportSnapshotCommandOutput) => void): void;
    importSnapshot(args: ImportSnapshotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ImportSnapshotCommandOutput) => void): void;
    
    importVolume(args: ImportVolumeCommandInput, options?: __HttpHandlerOptions): Promise<ImportVolumeCommandOutput>;
    importVolume(args: ImportVolumeCommandInput, cb: (err: any, data?: ImportVolumeCommandOutput) => void): void;
    importVolume(args: ImportVolumeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ImportVolumeCommandOutput) => void): void;
    
    listImagesInRecycleBin(args: ListImagesInRecycleBinCommandInput, options?: __HttpHandlerOptions): Promise<ListImagesInRecycleBinCommandOutput>;
    listImagesInRecycleBin(args: ListImagesInRecycleBinCommandInput, cb: (err: any, data?: ListImagesInRecycleBinCommandOutput) => void): void;
    listImagesInRecycleBin(args: ListImagesInRecycleBinCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListImagesInRecycleBinCommandOutput) => void): void;
    
    listSnapshotsInRecycleBin(args: ListSnapshotsInRecycleBinCommandInput, options?: __HttpHandlerOptions): Promise<ListSnapshotsInRecycleBinCommandOutput>;
    listSnapshotsInRecycleBin(args: ListSnapshotsInRecycleBinCommandInput, cb: (err: any, data?: ListSnapshotsInRecycleBinCommandOutput) => void): void;
    listSnapshotsInRecycleBin(args: ListSnapshotsInRecycleBinCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSnapshotsInRecycleBinCommandOutput) => void): void;
    
    modifyAddressAttribute(args: ModifyAddressAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ModifyAddressAttributeCommandOutput>;
    modifyAddressAttribute(args: ModifyAddressAttributeCommandInput, cb: (err: any, data?: ModifyAddressAttributeCommandOutput) => void): void;
    modifyAddressAttribute(args: ModifyAddressAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyAddressAttributeCommandOutput) => void): void;
    
    modifyAvailabilityZoneGroup(args: ModifyAvailabilityZoneGroupCommandInput, options?: __HttpHandlerOptions): Promise<ModifyAvailabilityZoneGroupCommandOutput>;
    modifyAvailabilityZoneGroup(args: ModifyAvailabilityZoneGroupCommandInput, cb: (err: any, data?: ModifyAvailabilityZoneGroupCommandOutput) => void): void;
    modifyAvailabilityZoneGroup(args: ModifyAvailabilityZoneGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyAvailabilityZoneGroupCommandOutput) => void): void;
    
    modifyCapacityReservation(args: ModifyCapacityReservationCommandInput, options?: __HttpHandlerOptions): Promise<ModifyCapacityReservationCommandOutput>;
    modifyCapacityReservation(args: ModifyCapacityReservationCommandInput, cb: (err: any, data?: ModifyCapacityReservationCommandOutput) => void): void;
    modifyCapacityReservation(args: ModifyCapacityReservationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyCapacityReservationCommandOutput) => void): void;
    
    modifyCapacityReservationFleet(args: ModifyCapacityReservationFleetCommandInput, options?: __HttpHandlerOptions): Promise<ModifyCapacityReservationFleetCommandOutput>;
    modifyCapacityReservationFleet(args: ModifyCapacityReservationFleetCommandInput, cb: (err: any, data?: ModifyCapacityReservationFleetCommandOutput) => void): void;
    modifyCapacityReservationFleet(args: ModifyCapacityReservationFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyCapacityReservationFleetCommandOutput) => void): void;
    
    modifyClientVpnEndpoint(args: ModifyClientVpnEndpointCommandInput, options?: __HttpHandlerOptions): Promise<ModifyClientVpnEndpointCommandOutput>;
    modifyClientVpnEndpoint(args: ModifyClientVpnEndpointCommandInput, cb: (err: any, data?: ModifyClientVpnEndpointCommandOutput) => void): void;
    modifyClientVpnEndpoint(args: ModifyClientVpnEndpointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyClientVpnEndpointCommandOutput) => void): void;
    
    modifyDefaultCreditSpecification(args: ModifyDefaultCreditSpecificationCommandInput, options?: __HttpHandlerOptions): Promise<ModifyDefaultCreditSpecificationCommandOutput>;
    modifyDefaultCreditSpecification(args: ModifyDefaultCreditSpecificationCommandInput, cb: (err: any, data?: ModifyDefaultCreditSpecificationCommandOutput) => void): void;
    modifyDefaultCreditSpecification(args: ModifyDefaultCreditSpecificationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyDefaultCreditSpecificationCommandOutput) => void): void;
    
    modifyEbsDefaultKmsKeyId(args: ModifyEbsDefaultKmsKeyIdCommandInput, options?: __HttpHandlerOptions): Promise<ModifyEbsDefaultKmsKeyIdCommandOutput>;
    modifyEbsDefaultKmsKeyId(args: ModifyEbsDefaultKmsKeyIdCommandInput, cb: (err: any, data?: ModifyEbsDefaultKmsKeyIdCommandOutput) => void): void;
    modifyEbsDefaultKmsKeyId(args: ModifyEbsDefaultKmsKeyIdCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyEbsDefaultKmsKeyIdCommandOutput) => void): void;
    
    modifyFleet(args: ModifyFleetCommandInput, options?: __HttpHandlerOptions): Promise<ModifyFleetCommandOutput>;
    modifyFleet(args: ModifyFleetCommandInput, cb: (err: any, data?: ModifyFleetCommandOutput) => void): void;
    modifyFleet(args: ModifyFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyFleetCommandOutput) => void): void;
    
    modifyFpgaImageAttribute(args: ModifyFpgaImageAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ModifyFpgaImageAttributeCommandOutput>;
    modifyFpgaImageAttribute(args: ModifyFpgaImageAttributeCommandInput, cb: (err: any, data?: ModifyFpgaImageAttributeCommandOutput) => void): void;
    modifyFpgaImageAttribute(args: ModifyFpgaImageAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyFpgaImageAttributeCommandOutput) => void): void;
    
    modifyHosts(args: ModifyHostsCommandInput, options?: __HttpHandlerOptions): Promise<ModifyHostsCommandOutput>;
    modifyHosts(args: ModifyHostsCommandInput, cb: (err: any, data?: ModifyHostsCommandOutput) => void): void;
    modifyHosts(args: ModifyHostsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyHostsCommandOutput) => void): void;
    
    modifyIdentityIdFormat(args: ModifyIdentityIdFormatCommandInput, options?: __HttpHandlerOptions): Promise<ModifyIdentityIdFormatCommandOutput>;
    modifyIdentityIdFormat(args: ModifyIdentityIdFormatCommandInput, cb: (err: any, data?: ModifyIdentityIdFormatCommandOutput) => void): void;
    modifyIdentityIdFormat(args: ModifyIdentityIdFormatCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyIdentityIdFormatCommandOutput) => void): void;
    
    modifyIdFormat(args: ModifyIdFormatCommandInput, options?: __HttpHandlerOptions): Promise<ModifyIdFormatCommandOutput>;
    modifyIdFormat(args: ModifyIdFormatCommandInput, cb: (err: any, data?: ModifyIdFormatCommandOutput) => void): void;
    modifyIdFormat(args: ModifyIdFormatCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyIdFormatCommandOutput) => void): void;
    
    modifyImageAttribute(args: ModifyImageAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ModifyImageAttributeCommandOutput>;
    modifyImageAttribute(args: ModifyImageAttributeCommandInput, cb: (err: any, data?: ModifyImageAttributeCommandOutput) => void): void;
    modifyImageAttribute(args: ModifyImageAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyImageAttributeCommandOutput) => void): void;
    
    modifyInstanceAttribute(args: ModifyInstanceAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ModifyInstanceAttributeCommandOutput>;
    modifyInstanceAttribute(args: ModifyInstanceAttributeCommandInput, cb: (err: any, data?: ModifyInstanceAttributeCommandOutput) => void): void;
    modifyInstanceAttribute(args: ModifyInstanceAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyInstanceAttributeCommandOutput) => void): void;
    
    modifyInstanceCapacityReservationAttributes(args: ModifyInstanceCapacityReservationAttributesCommandInput, options?: __HttpHandlerOptions): Promise<ModifyInstanceCapacityReservationAttributesCommandOutput>;
    modifyInstanceCapacityReservationAttributes(args: ModifyInstanceCapacityReservationAttributesCommandInput, cb: (err: any, data?: ModifyInstanceCapacityReservationAttributesCommandOutput) => void): void;
    modifyInstanceCapacityReservationAttributes(args: ModifyInstanceCapacityReservationAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyInstanceCapacityReservationAttributesCommandOutput) => void): void;
    
    modifyInstanceCreditSpecification(args: ModifyInstanceCreditSpecificationCommandInput, options?: __HttpHandlerOptions): Promise<ModifyInstanceCreditSpecificationCommandOutput>;
    modifyInstanceCreditSpecification(args: ModifyInstanceCreditSpecificationCommandInput, cb: (err: any, data?: ModifyInstanceCreditSpecificationCommandOutput) => void): void;
    modifyInstanceCreditSpecification(args: ModifyInstanceCreditSpecificationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyInstanceCreditSpecificationCommandOutput) => void): void;
    
    modifyInstanceEventStartTime(args: ModifyInstanceEventStartTimeCommandInput, options?: __HttpHandlerOptions): Promise<ModifyInstanceEventStartTimeCommandOutput>;
    modifyInstanceEventStartTime(args: ModifyInstanceEventStartTimeCommandInput, cb: (err: any, data?: ModifyInstanceEventStartTimeCommandOutput) => void): void;
    modifyInstanceEventStartTime(args: ModifyInstanceEventStartTimeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyInstanceEventStartTimeCommandOutput) => void): void;
    
    modifyInstanceEventWindow(args: ModifyInstanceEventWindowCommandInput, options?: __HttpHandlerOptions): Promise<ModifyInstanceEventWindowCommandOutput>;
    modifyInstanceEventWindow(args: ModifyInstanceEventWindowCommandInput, cb: (err: any, data?: ModifyInstanceEventWindowCommandOutput) => void): void;
    modifyInstanceEventWindow(args: ModifyInstanceEventWindowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyInstanceEventWindowCommandOutput) => void): void;
    
    modifyInstanceMaintenanceOptions(args: ModifyInstanceMaintenanceOptionsCommandInput, options?: __HttpHandlerOptions): Promise<ModifyInstanceMaintenanceOptionsCommandOutput>;
    modifyInstanceMaintenanceOptions(args: ModifyInstanceMaintenanceOptionsCommandInput, cb: (err: any, data?: ModifyInstanceMaintenanceOptionsCommandOutput) => void): void;
    modifyInstanceMaintenanceOptions(args: ModifyInstanceMaintenanceOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyInstanceMaintenanceOptionsCommandOutput) => void): void;
    
    modifyInstanceMetadataOptions(args: ModifyInstanceMetadataOptionsCommandInput, options?: __HttpHandlerOptions): Promise<ModifyInstanceMetadataOptionsCommandOutput>;
    modifyInstanceMetadataOptions(args: ModifyInstanceMetadataOptionsCommandInput, cb: (err: any, data?: ModifyInstanceMetadataOptionsCommandOutput) => void): void;
    modifyInstanceMetadataOptions(args: ModifyInstanceMetadataOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyInstanceMetadataOptionsCommandOutput) => void): void;
    
    modifyInstancePlacement(args: ModifyInstancePlacementCommandInput, options?: __HttpHandlerOptions): Promise<ModifyInstancePlacementCommandOutput>;
    modifyInstancePlacement(args: ModifyInstancePlacementCommandInput, cb: (err: any, data?: ModifyInstancePlacementCommandOutput) => void): void;
    modifyInstancePlacement(args: ModifyInstancePlacementCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyInstancePlacementCommandOutput) => void): void;
    
    modifyIpam(args: ModifyIpamCommandInput, options?: __HttpHandlerOptions): Promise<ModifyIpamCommandOutput>;
    modifyIpam(args: ModifyIpamCommandInput, cb: (err: any, data?: ModifyIpamCommandOutput) => void): void;
    modifyIpam(args: ModifyIpamCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyIpamCommandOutput) => void): void;
    
    modifyIpamPool(args: ModifyIpamPoolCommandInput, options?: __HttpHandlerOptions): Promise<ModifyIpamPoolCommandOutput>;
    modifyIpamPool(args: ModifyIpamPoolCommandInput, cb: (err: any, data?: ModifyIpamPoolCommandOutput) => void): void;
    modifyIpamPool(args: ModifyIpamPoolCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyIpamPoolCommandOutput) => void): void;
    
    modifyIpamResourceCidr(args: ModifyIpamResourceCidrCommandInput, options?: __HttpHandlerOptions): Promise<ModifyIpamResourceCidrCommandOutput>;
    modifyIpamResourceCidr(args: ModifyIpamResourceCidrCommandInput, cb: (err: any, data?: ModifyIpamResourceCidrCommandOutput) => void): void;
    modifyIpamResourceCidr(args: ModifyIpamResourceCidrCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyIpamResourceCidrCommandOutput) => void): void;
    
    modifyIpamScope(args: ModifyIpamScopeCommandInput, options?: __HttpHandlerOptions): Promise<ModifyIpamScopeCommandOutput>;
    modifyIpamScope(args: ModifyIpamScopeCommandInput, cb: (err: any, data?: ModifyIpamScopeCommandOutput) => void): void;
    modifyIpamScope(args: ModifyIpamScopeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyIpamScopeCommandOutput) => void): void;
    
    modifyLaunchTemplate(args: ModifyLaunchTemplateCommandInput, options?: __HttpHandlerOptions): Promise<ModifyLaunchTemplateCommandOutput>;
    modifyLaunchTemplate(args: ModifyLaunchTemplateCommandInput, cb: (err: any, data?: ModifyLaunchTemplateCommandOutput) => void): void;
    modifyLaunchTemplate(args: ModifyLaunchTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyLaunchTemplateCommandOutput) => void): void;
    
    modifyManagedPrefixList(args: ModifyManagedPrefixListCommandInput, options?: __HttpHandlerOptions): Promise<ModifyManagedPrefixListCommandOutput>;
    modifyManagedPrefixList(args: ModifyManagedPrefixListCommandInput, cb: (err: any, data?: ModifyManagedPrefixListCommandOutput) => void): void;
    modifyManagedPrefixList(args: ModifyManagedPrefixListCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyManagedPrefixListCommandOutput) => void): void;
    
    modifyNetworkInterfaceAttribute(args: ModifyNetworkInterfaceAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ModifyNetworkInterfaceAttributeCommandOutput>;
    modifyNetworkInterfaceAttribute(args: ModifyNetworkInterfaceAttributeCommandInput, cb: (err: any, data?: ModifyNetworkInterfaceAttributeCommandOutput) => void): void;
    modifyNetworkInterfaceAttribute(args: ModifyNetworkInterfaceAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyNetworkInterfaceAttributeCommandOutput) => void): void;
    
    modifyPrivateDnsNameOptions(args: ModifyPrivateDnsNameOptionsCommandInput, options?: __HttpHandlerOptions): Promise<ModifyPrivateDnsNameOptionsCommandOutput>;
    modifyPrivateDnsNameOptions(args: ModifyPrivateDnsNameOptionsCommandInput, cb: (err: any, data?: ModifyPrivateDnsNameOptionsCommandOutput) => void): void;
    modifyPrivateDnsNameOptions(args: ModifyPrivateDnsNameOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyPrivateDnsNameOptionsCommandOutput) => void): void;
    
    modifyReservedInstances(args: ModifyReservedInstancesCommandInput, options?: __HttpHandlerOptions): Promise<ModifyReservedInstancesCommandOutput>;
    modifyReservedInstances(args: ModifyReservedInstancesCommandInput, cb: (err: any, data?: ModifyReservedInstancesCommandOutput) => void): void;
    modifyReservedInstances(args: ModifyReservedInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyReservedInstancesCommandOutput) => void): void;
    
    modifySecurityGroupRules(args: ModifySecurityGroupRulesCommandInput, options?: __HttpHandlerOptions): Promise<ModifySecurityGroupRulesCommandOutput>;
    modifySecurityGroupRules(args: ModifySecurityGroupRulesCommandInput, cb: (err: any, data?: ModifySecurityGroupRulesCommandOutput) => void): void;
    modifySecurityGroupRules(args: ModifySecurityGroupRulesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifySecurityGroupRulesCommandOutput) => void): void;
    
    modifySnapshotAttribute(args: ModifySnapshotAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ModifySnapshotAttributeCommandOutput>;
    modifySnapshotAttribute(args: ModifySnapshotAttributeCommandInput, cb: (err: any, data?: ModifySnapshotAttributeCommandOutput) => void): void;
    modifySnapshotAttribute(args: ModifySnapshotAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifySnapshotAttributeCommandOutput) => void): void;
    
    modifySnapshotTier(args: ModifySnapshotTierCommandInput, options?: __HttpHandlerOptions): Promise<ModifySnapshotTierCommandOutput>;
    modifySnapshotTier(args: ModifySnapshotTierCommandInput, cb: (err: any, data?: ModifySnapshotTierCommandOutput) => void): void;
    modifySnapshotTier(args: ModifySnapshotTierCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifySnapshotTierCommandOutput) => void): void;
    
    modifySpotFleetRequest(args: ModifySpotFleetRequestCommandInput, options?: __HttpHandlerOptions): Promise<ModifySpotFleetRequestCommandOutput>;
    modifySpotFleetRequest(args: ModifySpotFleetRequestCommandInput, cb: (err: any, data?: ModifySpotFleetRequestCommandOutput) => void): void;
    modifySpotFleetRequest(args: ModifySpotFleetRequestCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifySpotFleetRequestCommandOutput) => void): void;
    
    modifySubnetAttribute(args: ModifySubnetAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ModifySubnetAttributeCommandOutput>;
    modifySubnetAttribute(args: ModifySubnetAttributeCommandInput, cb: (err: any, data?: ModifySubnetAttributeCommandOutput) => void): void;
    modifySubnetAttribute(args: ModifySubnetAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifySubnetAttributeCommandOutput) => void): void;
    
    modifyTrafficMirrorFilterNetworkServices(args: ModifyTrafficMirrorFilterNetworkServicesCommandInput, options?: __HttpHandlerOptions): Promise<ModifyTrafficMirrorFilterNetworkServicesCommandOutput>;
    modifyTrafficMirrorFilterNetworkServices(args: ModifyTrafficMirrorFilterNetworkServicesCommandInput, cb: (err: any, data?: ModifyTrafficMirrorFilterNetworkServicesCommandOutput) => void): void;
    modifyTrafficMirrorFilterNetworkServices(args: ModifyTrafficMirrorFilterNetworkServicesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyTrafficMirrorFilterNetworkServicesCommandOutput) => void): void;
    
    modifyTrafficMirrorFilterRule(args: ModifyTrafficMirrorFilterRuleCommandInput, options?: __HttpHandlerOptions): Promise<ModifyTrafficMirrorFilterRuleCommandOutput>;
    modifyTrafficMirrorFilterRule(args: ModifyTrafficMirrorFilterRuleCommandInput, cb: (err: any, data?: ModifyTrafficMirrorFilterRuleCommandOutput) => void): void;
    modifyTrafficMirrorFilterRule(args: ModifyTrafficMirrorFilterRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyTrafficMirrorFilterRuleCommandOutput) => void): void;
    
    modifyTrafficMirrorSession(args: ModifyTrafficMirrorSessionCommandInput, options?: __HttpHandlerOptions): Promise<ModifyTrafficMirrorSessionCommandOutput>;
    modifyTrafficMirrorSession(args: ModifyTrafficMirrorSessionCommandInput, cb: (err: any, data?: ModifyTrafficMirrorSessionCommandOutput) => void): void;
    modifyTrafficMirrorSession(args: ModifyTrafficMirrorSessionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyTrafficMirrorSessionCommandOutput) => void): void;
    
    modifyTransitGateway(args: ModifyTransitGatewayCommandInput, options?: __HttpHandlerOptions): Promise<ModifyTransitGatewayCommandOutput>;
    modifyTransitGateway(args: ModifyTransitGatewayCommandInput, cb: (err: any, data?: ModifyTransitGatewayCommandOutput) => void): void;
    modifyTransitGateway(args: ModifyTransitGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyTransitGatewayCommandOutput) => void): void;
    
    modifyTransitGatewayPrefixListReference(args: ModifyTransitGatewayPrefixListReferenceCommandInput, options?: __HttpHandlerOptions): Promise<ModifyTransitGatewayPrefixListReferenceCommandOutput>;
    modifyTransitGatewayPrefixListReference(args: ModifyTransitGatewayPrefixListReferenceCommandInput, cb: (err: any, data?: ModifyTransitGatewayPrefixListReferenceCommandOutput) => void): void;
    modifyTransitGatewayPrefixListReference(args: ModifyTransitGatewayPrefixListReferenceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyTransitGatewayPrefixListReferenceCommandOutput) => void): void;
    
    modifyTransitGatewayVpcAttachment(args: ModifyTransitGatewayVpcAttachmentCommandInput, options?: __HttpHandlerOptions): Promise<ModifyTransitGatewayVpcAttachmentCommandOutput>;
    modifyTransitGatewayVpcAttachment(args: ModifyTransitGatewayVpcAttachmentCommandInput, cb: (err: any, data?: ModifyTransitGatewayVpcAttachmentCommandOutput) => void): void;
    modifyTransitGatewayVpcAttachment(args: ModifyTransitGatewayVpcAttachmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyTransitGatewayVpcAttachmentCommandOutput) => void): void;
    
    modifyVolume(args: ModifyVolumeCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVolumeCommandOutput>;
    modifyVolume(args: ModifyVolumeCommandInput, cb: (err: any, data?: ModifyVolumeCommandOutput) => void): void;
    modifyVolume(args: ModifyVolumeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVolumeCommandOutput) => void): void;
    
    modifyVolumeAttribute(args: ModifyVolumeAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVolumeAttributeCommandOutput>;
    modifyVolumeAttribute(args: ModifyVolumeAttributeCommandInput, cb: (err: any, data?: ModifyVolumeAttributeCommandOutput) => void): void;
    modifyVolumeAttribute(args: ModifyVolumeAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVolumeAttributeCommandOutput) => void): void;
    
    modifyVpcAttribute(args: ModifyVpcAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVpcAttributeCommandOutput>;
    modifyVpcAttribute(args: ModifyVpcAttributeCommandInput, cb: (err: any, data?: ModifyVpcAttributeCommandOutput) => void): void;
    modifyVpcAttribute(args: ModifyVpcAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVpcAttributeCommandOutput) => void): void;
    
    modifyVpcEndpoint(args: ModifyVpcEndpointCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVpcEndpointCommandOutput>;
    modifyVpcEndpoint(args: ModifyVpcEndpointCommandInput, cb: (err: any, data?: ModifyVpcEndpointCommandOutput) => void): void;
    modifyVpcEndpoint(args: ModifyVpcEndpointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVpcEndpointCommandOutput) => void): void;
    
    modifyVpcEndpointConnectionNotification(args: ModifyVpcEndpointConnectionNotificationCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVpcEndpointConnectionNotificationCommandOutput>;
    modifyVpcEndpointConnectionNotification(args: ModifyVpcEndpointConnectionNotificationCommandInput, cb: (err: any, data?: ModifyVpcEndpointConnectionNotificationCommandOutput) => void): void;
    modifyVpcEndpointConnectionNotification(args: ModifyVpcEndpointConnectionNotificationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVpcEndpointConnectionNotificationCommandOutput) => void): void;
    
    modifyVpcEndpointServiceConfiguration(args: ModifyVpcEndpointServiceConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVpcEndpointServiceConfigurationCommandOutput>;
    modifyVpcEndpointServiceConfiguration(args: ModifyVpcEndpointServiceConfigurationCommandInput, cb: (err: any, data?: ModifyVpcEndpointServiceConfigurationCommandOutput) => void): void;
    modifyVpcEndpointServiceConfiguration(args: ModifyVpcEndpointServiceConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVpcEndpointServiceConfigurationCommandOutput) => void): void;
    
    modifyVpcEndpointServicePayerResponsibility(args: ModifyVpcEndpointServicePayerResponsibilityCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVpcEndpointServicePayerResponsibilityCommandOutput>;
    modifyVpcEndpointServicePayerResponsibility(args: ModifyVpcEndpointServicePayerResponsibilityCommandInput, cb: (err: any, data?: ModifyVpcEndpointServicePayerResponsibilityCommandOutput) => void): void;
    modifyVpcEndpointServicePayerResponsibility(args: ModifyVpcEndpointServicePayerResponsibilityCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVpcEndpointServicePayerResponsibilityCommandOutput) => void): void;
    
    modifyVpcEndpointServicePermissions(args: ModifyVpcEndpointServicePermissionsCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVpcEndpointServicePermissionsCommandOutput>;
    modifyVpcEndpointServicePermissions(args: ModifyVpcEndpointServicePermissionsCommandInput, cb: (err: any, data?: ModifyVpcEndpointServicePermissionsCommandOutput) => void): void;
    modifyVpcEndpointServicePermissions(args: ModifyVpcEndpointServicePermissionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVpcEndpointServicePermissionsCommandOutput) => void): void;
    
    modifyVpcPeeringConnectionOptions(args: ModifyVpcPeeringConnectionOptionsCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVpcPeeringConnectionOptionsCommandOutput>;
    modifyVpcPeeringConnectionOptions(args: ModifyVpcPeeringConnectionOptionsCommandInput, cb: (err: any, data?: ModifyVpcPeeringConnectionOptionsCommandOutput) => void): void;
    modifyVpcPeeringConnectionOptions(args: ModifyVpcPeeringConnectionOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVpcPeeringConnectionOptionsCommandOutput) => void): void;
    
    modifyVpcTenancy(args: ModifyVpcTenancyCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVpcTenancyCommandOutput>;
    modifyVpcTenancy(args: ModifyVpcTenancyCommandInput, cb: (err: any, data?: ModifyVpcTenancyCommandOutput) => void): void;
    modifyVpcTenancy(args: ModifyVpcTenancyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVpcTenancyCommandOutput) => void): void;
    
    modifyVpnConnection(args: ModifyVpnConnectionCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVpnConnectionCommandOutput>;
    modifyVpnConnection(args: ModifyVpnConnectionCommandInput, cb: (err: any, data?: ModifyVpnConnectionCommandOutput) => void): void;
    modifyVpnConnection(args: ModifyVpnConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVpnConnectionCommandOutput) => void): void;
    
    modifyVpnConnectionOptions(args: ModifyVpnConnectionOptionsCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVpnConnectionOptionsCommandOutput>;
    modifyVpnConnectionOptions(args: ModifyVpnConnectionOptionsCommandInput, cb: (err: any, data?: ModifyVpnConnectionOptionsCommandOutput) => void): void;
    modifyVpnConnectionOptions(args: ModifyVpnConnectionOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVpnConnectionOptionsCommandOutput) => void): void;
    
    modifyVpnTunnelCertificate(args: ModifyVpnTunnelCertificateCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVpnTunnelCertificateCommandOutput>;
    modifyVpnTunnelCertificate(args: ModifyVpnTunnelCertificateCommandInput, cb: (err: any, data?: ModifyVpnTunnelCertificateCommandOutput) => void): void;
    modifyVpnTunnelCertificate(args: ModifyVpnTunnelCertificateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVpnTunnelCertificateCommandOutput) => void): void;
    
    modifyVpnTunnelOptions(args: ModifyVpnTunnelOptionsCommandInput, options?: __HttpHandlerOptions): Promise<ModifyVpnTunnelOptionsCommandOutput>;
    modifyVpnTunnelOptions(args: ModifyVpnTunnelOptionsCommandInput, cb: (err: any, data?: ModifyVpnTunnelOptionsCommandOutput) => void): void;
    modifyVpnTunnelOptions(args: ModifyVpnTunnelOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyVpnTunnelOptionsCommandOutput) => void): void;
    
    monitorInstances(args: MonitorInstancesCommandInput, options?: __HttpHandlerOptions): Promise<MonitorInstancesCommandOutput>;
    monitorInstances(args: MonitorInstancesCommandInput, cb: (err: any, data?: MonitorInstancesCommandOutput) => void): void;
    monitorInstances(args: MonitorInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: MonitorInstancesCommandOutput) => void): void;
    
    moveAddressToVpc(args: MoveAddressToVpcCommandInput, options?: __HttpHandlerOptions): Promise<MoveAddressToVpcCommandOutput>;
    moveAddressToVpc(args: MoveAddressToVpcCommandInput, cb: (err: any, data?: MoveAddressToVpcCommandOutput) => void): void;
    moveAddressToVpc(args: MoveAddressToVpcCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: MoveAddressToVpcCommandOutput) => void): void;
    
    moveByoipCidrToIpam(args: MoveByoipCidrToIpamCommandInput, options?: __HttpHandlerOptions): Promise<MoveByoipCidrToIpamCommandOutput>;
    moveByoipCidrToIpam(args: MoveByoipCidrToIpamCommandInput, cb: (err: any, data?: MoveByoipCidrToIpamCommandOutput) => void): void;
    moveByoipCidrToIpam(args: MoveByoipCidrToIpamCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: MoveByoipCidrToIpamCommandOutput) => void): void;
    
    provisionByoipCidr(args: ProvisionByoipCidrCommandInput, options?: __HttpHandlerOptions): Promise<ProvisionByoipCidrCommandOutput>;
    provisionByoipCidr(args: ProvisionByoipCidrCommandInput, cb: (err: any, data?: ProvisionByoipCidrCommandOutput) => void): void;
    provisionByoipCidr(args: ProvisionByoipCidrCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ProvisionByoipCidrCommandOutput) => void): void;
    
    provisionIpamPoolCidr(args: ProvisionIpamPoolCidrCommandInput, options?: __HttpHandlerOptions): Promise<ProvisionIpamPoolCidrCommandOutput>;
    provisionIpamPoolCidr(args: ProvisionIpamPoolCidrCommandInput, cb: (err: any, data?: ProvisionIpamPoolCidrCommandOutput) => void): void;
    provisionIpamPoolCidr(args: ProvisionIpamPoolCidrCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ProvisionIpamPoolCidrCommandOutput) => void): void;
    
    provisionPublicIpv4PoolCidr(args: ProvisionPublicIpv4PoolCidrCommandInput, options?: __HttpHandlerOptions): Promise<ProvisionPublicIpv4PoolCidrCommandOutput>;
    provisionPublicIpv4PoolCidr(args: ProvisionPublicIpv4PoolCidrCommandInput, cb: (err: any, data?: ProvisionPublicIpv4PoolCidrCommandOutput) => void): void;
    provisionPublicIpv4PoolCidr(args: ProvisionPublicIpv4PoolCidrCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ProvisionPublicIpv4PoolCidrCommandOutput) => void): void;
    
    purchaseHostReservation(args: PurchaseHostReservationCommandInput, options?: __HttpHandlerOptions): Promise<PurchaseHostReservationCommandOutput>;
    purchaseHostReservation(args: PurchaseHostReservationCommandInput, cb: (err: any, data?: PurchaseHostReservationCommandOutput) => void): void;
    purchaseHostReservation(args: PurchaseHostReservationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PurchaseHostReservationCommandOutput) => void): void;
    
    purchaseReservedInstancesOffering(args: PurchaseReservedInstancesOfferingCommandInput, options?: __HttpHandlerOptions): Promise<PurchaseReservedInstancesOfferingCommandOutput>;
    purchaseReservedInstancesOffering(args: PurchaseReservedInstancesOfferingCommandInput, cb: (err: any, data?: PurchaseReservedInstancesOfferingCommandOutput) => void): void;
    purchaseReservedInstancesOffering(args: PurchaseReservedInstancesOfferingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PurchaseReservedInstancesOfferingCommandOutput) => void): void;
    
    purchaseScheduledInstances(args: PurchaseScheduledInstancesCommandInput, options?: __HttpHandlerOptions): Promise<PurchaseScheduledInstancesCommandOutput>;
    purchaseScheduledInstances(args: PurchaseScheduledInstancesCommandInput, cb: (err: any, data?: PurchaseScheduledInstancesCommandOutput) => void): void;
    purchaseScheduledInstances(args: PurchaseScheduledInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PurchaseScheduledInstancesCommandOutput) => void): void;
    
    rebootInstances(args: RebootInstancesCommandInput, options?: __HttpHandlerOptions): Promise<RebootInstancesCommandOutput>;
    rebootInstances(args: RebootInstancesCommandInput, cb: (err: any, data?: RebootInstancesCommandOutput) => void): void;
    rebootInstances(args: RebootInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RebootInstancesCommandOutput) => void): void;
    
    registerImage(args: RegisterImageCommandInput, options?: __HttpHandlerOptions): Promise<RegisterImageCommandOutput>;
    registerImage(args: RegisterImageCommandInput, cb: (err: any, data?: RegisterImageCommandOutput) => void): void;
    registerImage(args: RegisterImageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterImageCommandOutput) => void): void;
    
    registerInstanceEventNotificationAttributes(args: RegisterInstanceEventNotificationAttributesCommandInput, options?: __HttpHandlerOptions): Promise<RegisterInstanceEventNotificationAttributesCommandOutput>;
    registerInstanceEventNotificationAttributes(args: RegisterInstanceEventNotificationAttributesCommandInput, cb: (err: any, data?: RegisterInstanceEventNotificationAttributesCommandOutput) => void): void;
    registerInstanceEventNotificationAttributes(args: RegisterInstanceEventNotificationAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterInstanceEventNotificationAttributesCommandOutput) => void): void;
    
    registerTransitGatewayMulticastGroupMembers(args: RegisterTransitGatewayMulticastGroupMembersCommandInput, options?: __HttpHandlerOptions): Promise<RegisterTransitGatewayMulticastGroupMembersCommandOutput>;
    registerTransitGatewayMulticastGroupMembers(args: RegisterTransitGatewayMulticastGroupMembersCommandInput, cb: (err: any, data?: RegisterTransitGatewayMulticastGroupMembersCommandOutput) => void): void;
    registerTransitGatewayMulticastGroupMembers(args: RegisterTransitGatewayMulticastGroupMembersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterTransitGatewayMulticastGroupMembersCommandOutput) => void): void;
    
    registerTransitGatewayMulticastGroupSources(args: RegisterTransitGatewayMulticastGroupSourcesCommandInput, options?: __HttpHandlerOptions): Promise<RegisterTransitGatewayMulticastGroupSourcesCommandOutput>;
    registerTransitGatewayMulticastGroupSources(args: RegisterTransitGatewayMulticastGroupSourcesCommandInput, cb: (err: any, data?: RegisterTransitGatewayMulticastGroupSourcesCommandOutput) => void): void;
    registerTransitGatewayMulticastGroupSources(args: RegisterTransitGatewayMulticastGroupSourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterTransitGatewayMulticastGroupSourcesCommandOutput) => void): void;
    
    rejectTransitGatewayMulticastDomainAssociations(args: RejectTransitGatewayMulticastDomainAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<RejectTransitGatewayMulticastDomainAssociationsCommandOutput>;
    rejectTransitGatewayMulticastDomainAssociations(args: RejectTransitGatewayMulticastDomainAssociationsCommandInput, cb: (err: any, data?: RejectTransitGatewayMulticastDomainAssociationsCommandOutput) => void): void;
    rejectTransitGatewayMulticastDomainAssociations(args: RejectTransitGatewayMulticastDomainAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RejectTransitGatewayMulticastDomainAssociationsCommandOutput) => void): void;
    
    rejectTransitGatewayPeeringAttachment(args: RejectTransitGatewayPeeringAttachmentCommandInput, options?: __HttpHandlerOptions): Promise<RejectTransitGatewayPeeringAttachmentCommandOutput>;
    rejectTransitGatewayPeeringAttachment(args: RejectTransitGatewayPeeringAttachmentCommandInput, cb: (err: any, data?: RejectTransitGatewayPeeringAttachmentCommandOutput) => void): void;
    rejectTransitGatewayPeeringAttachment(args: RejectTransitGatewayPeeringAttachmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RejectTransitGatewayPeeringAttachmentCommandOutput) => void): void;
    
    rejectTransitGatewayVpcAttachment(args: RejectTransitGatewayVpcAttachmentCommandInput, options?: __HttpHandlerOptions): Promise<RejectTransitGatewayVpcAttachmentCommandOutput>;
    rejectTransitGatewayVpcAttachment(args: RejectTransitGatewayVpcAttachmentCommandInput, cb: (err: any, data?: RejectTransitGatewayVpcAttachmentCommandOutput) => void): void;
    rejectTransitGatewayVpcAttachment(args: RejectTransitGatewayVpcAttachmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RejectTransitGatewayVpcAttachmentCommandOutput) => void): void;
    
    rejectVpcEndpointConnections(args: RejectVpcEndpointConnectionsCommandInput, options?: __HttpHandlerOptions): Promise<RejectVpcEndpointConnectionsCommandOutput>;
    rejectVpcEndpointConnections(args: RejectVpcEndpointConnectionsCommandInput, cb: (err: any, data?: RejectVpcEndpointConnectionsCommandOutput) => void): void;
    rejectVpcEndpointConnections(args: RejectVpcEndpointConnectionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RejectVpcEndpointConnectionsCommandOutput) => void): void;
    
    rejectVpcPeeringConnection(args: RejectVpcPeeringConnectionCommandInput, options?: __HttpHandlerOptions): Promise<RejectVpcPeeringConnectionCommandOutput>;
    rejectVpcPeeringConnection(args: RejectVpcPeeringConnectionCommandInput, cb: (err: any, data?: RejectVpcPeeringConnectionCommandOutput) => void): void;
    rejectVpcPeeringConnection(args: RejectVpcPeeringConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RejectVpcPeeringConnectionCommandOutput) => void): void;
    
    releaseAddress(args: ReleaseAddressCommandInput, options?: __HttpHandlerOptions): Promise<ReleaseAddressCommandOutput>;
    releaseAddress(args: ReleaseAddressCommandInput, cb: (err: any, data?: ReleaseAddressCommandOutput) => void): void;
    releaseAddress(args: ReleaseAddressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ReleaseAddressCommandOutput) => void): void;
    
    releaseHosts(args: ReleaseHostsCommandInput, options?: __HttpHandlerOptions): Promise<ReleaseHostsCommandOutput>;
    releaseHosts(args: ReleaseHostsCommandInput, cb: (err: any, data?: ReleaseHostsCommandOutput) => void): void;
    releaseHosts(args: ReleaseHostsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ReleaseHostsCommandOutput) => void): void;
    
    releaseIpamPoolAllocation(args: ReleaseIpamPoolAllocationCommandInput, options?: __HttpHandlerOptions): Promise<ReleaseIpamPoolAllocationCommandOutput>;
    releaseIpamPoolAllocation(args: ReleaseIpamPoolAllocationCommandInput, cb: (err: any, data?: ReleaseIpamPoolAllocationCommandOutput) => void): void;
    releaseIpamPoolAllocation(args: ReleaseIpamPoolAllocationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ReleaseIpamPoolAllocationCommandOutput) => void): void;
    
    replaceIamInstanceProfileAssociation(args: ReplaceIamInstanceProfileAssociationCommandInput, options?: __HttpHandlerOptions): Promise<ReplaceIamInstanceProfileAssociationCommandOutput>;
    replaceIamInstanceProfileAssociation(args: ReplaceIamInstanceProfileAssociationCommandInput, cb: (err: any, data?: ReplaceIamInstanceProfileAssociationCommandOutput) => void): void;
    replaceIamInstanceProfileAssociation(args: ReplaceIamInstanceProfileAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ReplaceIamInstanceProfileAssociationCommandOutput) => void): void;
    
    replaceNetworkAclAssociation(args: ReplaceNetworkAclAssociationCommandInput, options?: __HttpHandlerOptions): Promise<ReplaceNetworkAclAssociationCommandOutput>;
    replaceNetworkAclAssociation(args: ReplaceNetworkAclAssociationCommandInput, cb: (err: any, data?: ReplaceNetworkAclAssociationCommandOutput) => void): void;
    replaceNetworkAclAssociation(args: ReplaceNetworkAclAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ReplaceNetworkAclAssociationCommandOutput) => void): void;
    
    replaceNetworkAclEntry(args: ReplaceNetworkAclEntryCommandInput, options?: __HttpHandlerOptions): Promise<ReplaceNetworkAclEntryCommandOutput>;
    replaceNetworkAclEntry(args: ReplaceNetworkAclEntryCommandInput, cb: (err: any, data?: ReplaceNetworkAclEntryCommandOutput) => void): void;
    replaceNetworkAclEntry(args: ReplaceNetworkAclEntryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ReplaceNetworkAclEntryCommandOutput) => void): void;
    
    replaceRoute(args: ReplaceRouteCommandInput, options?: __HttpHandlerOptions): Promise<ReplaceRouteCommandOutput>;
    replaceRoute(args: ReplaceRouteCommandInput, cb: (err: any, data?: ReplaceRouteCommandOutput) => void): void;
    replaceRoute(args: ReplaceRouteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ReplaceRouteCommandOutput) => void): void;
    
    replaceRouteTableAssociation(args: ReplaceRouteTableAssociationCommandInput, options?: __HttpHandlerOptions): Promise<ReplaceRouteTableAssociationCommandOutput>;
    replaceRouteTableAssociation(args: ReplaceRouteTableAssociationCommandInput, cb: (err: any, data?: ReplaceRouteTableAssociationCommandOutput) => void): void;
    replaceRouteTableAssociation(args: ReplaceRouteTableAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ReplaceRouteTableAssociationCommandOutput) => void): void;
    
    replaceTransitGatewayRoute(args: ReplaceTransitGatewayRouteCommandInput, options?: __HttpHandlerOptions): Promise<ReplaceTransitGatewayRouteCommandOutput>;
    replaceTransitGatewayRoute(args: ReplaceTransitGatewayRouteCommandInput, cb: (err: any, data?: ReplaceTransitGatewayRouteCommandOutput) => void): void;
    replaceTransitGatewayRoute(args: ReplaceTransitGatewayRouteCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ReplaceTransitGatewayRouteCommandOutput) => void): void;
    
    reportInstanceStatus(args: ReportInstanceStatusCommandInput, options?: __HttpHandlerOptions): Promise<ReportInstanceStatusCommandOutput>;
    reportInstanceStatus(args: ReportInstanceStatusCommandInput, cb: (err: any, data?: ReportInstanceStatusCommandOutput) => void): void;
    reportInstanceStatus(args: ReportInstanceStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ReportInstanceStatusCommandOutput) => void): void;
    
    requestSpotFleet(args: RequestSpotFleetCommandInput, options?: __HttpHandlerOptions): Promise<RequestSpotFleetCommandOutput>;
    requestSpotFleet(args: RequestSpotFleetCommandInput, cb: (err: any, data?: RequestSpotFleetCommandOutput) => void): void;
    requestSpotFleet(args: RequestSpotFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RequestSpotFleetCommandOutput) => void): void;
    
    requestSpotInstances(args: RequestSpotInstancesCommandInput, options?: __HttpHandlerOptions): Promise<RequestSpotInstancesCommandOutput>;
    requestSpotInstances(args: RequestSpotInstancesCommandInput, cb: (err: any, data?: RequestSpotInstancesCommandOutput) => void): void;
    requestSpotInstances(args: RequestSpotInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RequestSpotInstancesCommandOutput) => void): void;
    
    resetAddressAttribute(args: ResetAddressAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ResetAddressAttributeCommandOutput>;
    resetAddressAttribute(args: ResetAddressAttributeCommandInput, cb: (err: any, data?: ResetAddressAttributeCommandOutput) => void): void;
    resetAddressAttribute(args: ResetAddressAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResetAddressAttributeCommandOutput) => void): void;
    
    resetEbsDefaultKmsKeyId(args: ResetEbsDefaultKmsKeyIdCommandInput, options?: __HttpHandlerOptions): Promise<ResetEbsDefaultKmsKeyIdCommandOutput>;
    resetEbsDefaultKmsKeyId(args: ResetEbsDefaultKmsKeyIdCommandInput, cb: (err: any, data?: ResetEbsDefaultKmsKeyIdCommandOutput) => void): void;
    resetEbsDefaultKmsKeyId(args: ResetEbsDefaultKmsKeyIdCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResetEbsDefaultKmsKeyIdCommandOutput) => void): void;
    
    resetFpgaImageAttribute(args: ResetFpgaImageAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ResetFpgaImageAttributeCommandOutput>;
    resetFpgaImageAttribute(args: ResetFpgaImageAttributeCommandInput, cb: (err: any, data?: ResetFpgaImageAttributeCommandOutput) => void): void;
    resetFpgaImageAttribute(args: ResetFpgaImageAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResetFpgaImageAttributeCommandOutput) => void): void;
    
    resetImageAttribute(args: ResetImageAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ResetImageAttributeCommandOutput>;
    resetImageAttribute(args: ResetImageAttributeCommandInput, cb: (err: any, data?: ResetImageAttributeCommandOutput) => void): void;
    resetImageAttribute(args: ResetImageAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResetImageAttributeCommandOutput) => void): void;
    
    resetInstanceAttribute(args: ResetInstanceAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ResetInstanceAttributeCommandOutput>;
    resetInstanceAttribute(args: ResetInstanceAttributeCommandInput, cb: (err: any, data?: ResetInstanceAttributeCommandOutput) => void): void;
    resetInstanceAttribute(args: ResetInstanceAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResetInstanceAttributeCommandOutput) => void): void;
    
    resetNetworkInterfaceAttribute(args: ResetNetworkInterfaceAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ResetNetworkInterfaceAttributeCommandOutput>;
    resetNetworkInterfaceAttribute(args: ResetNetworkInterfaceAttributeCommandInput, cb: (err: any, data?: ResetNetworkInterfaceAttributeCommandOutput) => void): void;
    resetNetworkInterfaceAttribute(args: ResetNetworkInterfaceAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResetNetworkInterfaceAttributeCommandOutput) => void): void;
    
    resetSnapshotAttribute(args: ResetSnapshotAttributeCommandInput, options?: __HttpHandlerOptions): Promise<ResetSnapshotAttributeCommandOutput>;
    resetSnapshotAttribute(args: ResetSnapshotAttributeCommandInput, cb: (err: any, data?: ResetSnapshotAttributeCommandOutput) => void): void;
    resetSnapshotAttribute(args: ResetSnapshotAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResetSnapshotAttributeCommandOutput) => void): void;
    
    restoreAddressToClassic(args: RestoreAddressToClassicCommandInput, options?: __HttpHandlerOptions): Promise<RestoreAddressToClassicCommandOutput>;
    restoreAddressToClassic(args: RestoreAddressToClassicCommandInput, cb: (err: any, data?: RestoreAddressToClassicCommandOutput) => void): void;
    restoreAddressToClassic(args: RestoreAddressToClassicCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RestoreAddressToClassicCommandOutput) => void): void;
    
    restoreImageFromRecycleBin(args: RestoreImageFromRecycleBinCommandInput, options?: __HttpHandlerOptions): Promise<RestoreImageFromRecycleBinCommandOutput>;
    restoreImageFromRecycleBin(args: RestoreImageFromRecycleBinCommandInput, cb: (err: any, data?: RestoreImageFromRecycleBinCommandOutput) => void): void;
    restoreImageFromRecycleBin(args: RestoreImageFromRecycleBinCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RestoreImageFromRecycleBinCommandOutput) => void): void;
    
    restoreManagedPrefixListVersion(args: RestoreManagedPrefixListVersionCommandInput, options?: __HttpHandlerOptions): Promise<RestoreManagedPrefixListVersionCommandOutput>;
    restoreManagedPrefixListVersion(args: RestoreManagedPrefixListVersionCommandInput, cb: (err: any, data?: RestoreManagedPrefixListVersionCommandOutput) => void): void;
    restoreManagedPrefixListVersion(args: RestoreManagedPrefixListVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RestoreManagedPrefixListVersionCommandOutput) => void): void;
    
    restoreSnapshotFromRecycleBin(args: RestoreSnapshotFromRecycleBinCommandInput, options?: __HttpHandlerOptions): Promise<RestoreSnapshotFromRecycleBinCommandOutput>;
    restoreSnapshotFromRecycleBin(args: RestoreSnapshotFromRecycleBinCommandInput, cb: (err: any, data?: RestoreSnapshotFromRecycleBinCommandOutput) => void): void;
    restoreSnapshotFromRecycleBin(args: RestoreSnapshotFromRecycleBinCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RestoreSnapshotFromRecycleBinCommandOutput) => void): void;
    
    restoreSnapshotTier(args: RestoreSnapshotTierCommandInput, options?: __HttpHandlerOptions): Promise<RestoreSnapshotTierCommandOutput>;
    restoreSnapshotTier(args: RestoreSnapshotTierCommandInput, cb: (err: any, data?: RestoreSnapshotTierCommandOutput) => void): void;
    restoreSnapshotTier(args: RestoreSnapshotTierCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RestoreSnapshotTierCommandOutput) => void): void;
    
    revokeClientVpnIngress(args: RevokeClientVpnIngressCommandInput, options?: __HttpHandlerOptions): Promise<RevokeClientVpnIngressCommandOutput>;
    revokeClientVpnIngress(args: RevokeClientVpnIngressCommandInput, cb: (err: any, data?: RevokeClientVpnIngressCommandOutput) => void): void;
    revokeClientVpnIngress(args: RevokeClientVpnIngressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RevokeClientVpnIngressCommandOutput) => void): void;
    
    revokeSecurityGroupEgress(args: RevokeSecurityGroupEgressCommandInput, options?: __HttpHandlerOptions): Promise<RevokeSecurityGroupEgressCommandOutput>;
    revokeSecurityGroupEgress(args: RevokeSecurityGroupEgressCommandInput, cb: (err: any, data?: RevokeSecurityGroupEgressCommandOutput) => void): void;
    revokeSecurityGroupEgress(args: RevokeSecurityGroupEgressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RevokeSecurityGroupEgressCommandOutput) => void): void;
    
    revokeSecurityGroupIngress(args: RevokeSecurityGroupIngressCommandInput, options?: __HttpHandlerOptions): Promise<RevokeSecurityGroupIngressCommandOutput>;
    revokeSecurityGroupIngress(args: RevokeSecurityGroupIngressCommandInput, cb: (err: any, data?: RevokeSecurityGroupIngressCommandOutput) => void): void;
    revokeSecurityGroupIngress(args: RevokeSecurityGroupIngressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RevokeSecurityGroupIngressCommandOutput) => void): void;
    
    runInstances(args: RunInstancesCommandInput, options?: __HttpHandlerOptions): Promise<RunInstancesCommandOutput>;
    runInstances(args: RunInstancesCommandInput, cb: (err: any, data?: RunInstancesCommandOutput) => void): void;
    runInstances(args: RunInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RunInstancesCommandOutput) => void): void;
    
    runScheduledInstances(args: RunScheduledInstancesCommandInput, options?: __HttpHandlerOptions): Promise<RunScheduledInstancesCommandOutput>;
    runScheduledInstances(args: RunScheduledInstancesCommandInput, cb: (err: any, data?: RunScheduledInstancesCommandOutput) => void): void;
    runScheduledInstances(args: RunScheduledInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RunScheduledInstancesCommandOutput) => void): void;
    
    searchLocalGatewayRoutes(args: SearchLocalGatewayRoutesCommandInput, options?: __HttpHandlerOptions): Promise<SearchLocalGatewayRoutesCommandOutput>;
    searchLocalGatewayRoutes(args: SearchLocalGatewayRoutesCommandInput, cb: (err: any, data?: SearchLocalGatewayRoutesCommandOutput) => void): void;
    searchLocalGatewayRoutes(args: SearchLocalGatewayRoutesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchLocalGatewayRoutesCommandOutput) => void): void;
    
    searchTransitGatewayMulticastGroups(args: SearchTransitGatewayMulticastGroupsCommandInput, options?: __HttpHandlerOptions): Promise<SearchTransitGatewayMulticastGroupsCommandOutput>;
    searchTransitGatewayMulticastGroups(args: SearchTransitGatewayMulticastGroupsCommandInput, cb: (err: any, data?: SearchTransitGatewayMulticastGroupsCommandOutput) => void): void;
    searchTransitGatewayMulticastGroups(args: SearchTransitGatewayMulticastGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchTransitGatewayMulticastGroupsCommandOutput) => void): void;
    
    searchTransitGatewayRoutes(args: SearchTransitGatewayRoutesCommandInput, options?: __HttpHandlerOptions): Promise<SearchTransitGatewayRoutesCommandOutput>;
    searchTransitGatewayRoutes(args: SearchTransitGatewayRoutesCommandInput, cb: (err: any, data?: SearchTransitGatewayRoutesCommandOutput) => void): void;
    searchTransitGatewayRoutes(args: SearchTransitGatewayRoutesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchTransitGatewayRoutesCommandOutput) => void): void;
    
    sendDiagnosticInterrupt(args: SendDiagnosticInterruptCommandInput, options?: __HttpHandlerOptions): Promise<SendDiagnosticInterruptCommandOutput>;
    sendDiagnosticInterrupt(args: SendDiagnosticInterruptCommandInput, cb: (err: any, data?: SendDiagnosticInterruptCommandOutput) => void): void;
    sendDiagnosticInterrupt(args: SendDiagnosticInterruptCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SendDiagnosticInterruptCommandOutput) => void): void;
    
    startInstances(args: StartInstancesCommandInput, options?: __HttpHandlerOptions): Promise<StartInstancesCommandOutput>;
    startInstances(args: StartInstancesCommandInput, cb: (err: any, data?: StartInstancesCommandOutput) => void): void;
    startInstances(args: StartInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartInstancesCommandOutput) => void): void;
    
    startNetworkInsightsAccessScopeAnalysis(args: StartNetworkInsightsAccessScopeAnalysisCommandInput, options?: __HttpHandlerOptions): Promise<StartNetworkInsightsAccessScopeAnalysisCommandOutput>;
    startNetworkInsightsAccessScopeAnalysis(args: StartNetworkInsightsAccessScopeAnalysisCommandInput, cb: (err: any, data?: StartNetworkInsightsAccessScopeAnalysisCommandOutput) => void): void;
    startNetworkInsightsAccessScopeAnalysis(args: StartNetworkInsightsAccessScopeAnalysisCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartNetworkInsightsAccessScopeAnalysisCommandOutput) => void): void;
    
    startNetworkInsightsAnalysis(args: StartNetworkInsightsAnalysisCommandInput, options?: __HttpHandlerOptions): Promise<StartNetworkInsightsAnalysisCommandOutput>;
    startNetworkInsightsAnalysis(args: StartNetworkInsightsAnalysisCommandInput, cb: (err: any, data?: StartNetworkInsightsAnalysisCommandOutput) => void): void;
    startNetworkInsightsAnalysis(args: StartNetworkInsightsAnalysisCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartNetworkInsightsAnalysisCommandOutput) => void): void;
    
    startVpcEndpointServicePrivateDnsVerification(args: StartVpcEndpointServicePrivateDnsVerificationCommandInput, options?: __HttpHandlerOptions): Promise<StartVpcEndpointServicePrivateDnsVerificationCommandOutput>;
    startVpcEndpointServicePrivateDnsVerification(args: StartVpcEndpointServicePrivateDnsVerificationCommandInput, cb: (err: any, data?: StartVpcEndpointServicePrivateDnsVerificationCommandOutput) => void): void;
    startVpcEndpointServicePrivateDnsVerification(args: StartVpcEndpointServicePrivateDnsVerificationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartVpcEndpointServicePrivateDnsVerificationCommandOutput) => void): void;
    
    stopInstances(args: StopInstancesCommandInput, options?: __HttpHandlerOptions): Promise<StopInstancesCommandOutput>;
    stopInstances(args: StopInstancesCommandInput, cb: (err: any, data?: StopInstancesCommandOutput) => void): void;
    stopInstances(args: StopInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopInstancesCommandOutput) => void): void;
    
    terminateClientVpnConnections(args: TerminateClientVpnConnectionsCommandInput, options?: __HttpHandlerOptions): Promise<TerminateClientVpnConnectionsCommandOutput>;
    terminateClientVpnConnections(args: TerminateClientVpnConnectionsCommandInput, cb: (err: any, data?: TerminateClientVpnConnectionsCommandOutput) => void): void;
    terminateClientVpnConnections(args: TerminateClientVpnConnectionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TerminateClientVpnConnectionsCommandOutput) => void): void;
    
    terminateInstances(args: TerminateInstancesCommandInput, options?: __HttpHandlerOptions): Promise<TerminateInstancesCommandOutput>;
    terminateInstances(args: TerminateInstancesCommandInput, cb: (err: any, data?: TerminateInstancesCommandOutput) => void): void;
    terminateInstances(args: TerminateInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TerminateInstancesCommandOutput) => void): void;
    
    unassignIpv6Addresses(args: UnassignIpv6AddressesCommandInput, options?: __HttpHandlerOptions): Promise<UnassignIpv6AddressesCommandOutput>;
    unassignIpv6Addresses(args: UnassignIpv6AddressesCommandInput, cb: (err: any, data?: UnassignIpv6AddressesCommandOutput) => void): void;
    unassignIpv6Addresses(args: UnassignIpv6AddressesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UnassignIpv6AddressesCommandOutput) => void): void;
    
    unassignPrivateIpAddresses(args: UnassignPrivateIpAddressesCommandInput, options?: __HttpHandlerOptions): Promise<UnassignPrivateIpAddressesCommandOutput>;
    unassignPrivateIpAddresses(args: UnassignPrivateIpAddressesCommandInput, cb: (err: any, data?: UnassignPrivateIpAddressesCommandOutput) => void): void;
    unassignPrivateIpAddresses(args: UnassignPrivateIpAddressesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UnassignPrivateIpAddressesCommandOutput) => void): void;
    
    unmonitorInstances(args: UnmonitorInstancesCommandInput, options?: __HttpHandlerOptions): Promise<UnmonitorInstancesCommandOutput>;
    unmonitorInstances(args: UnmonitorInstancesCommandInput, cb: (err: any, data?: UnmonitorInstancesCommandOutput) => void): void;
    unmonitorInstances(args: UnmonitorInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UnmonitorInstancesCommandOutput) => void): void;
    
    updateSecurityGroupRuleDescriptionsEgress(args: UpdateSecurityGroupRuleDescriptionsEgressCommandInput, options?: __HttpHandlerOptions): Promise<UpdateSecurityGroupRuleDescriptionsEgressCommandOutput>;
    updateSecurityGroupRuleDescriptionsEgress(args: UpdateSecurityGroupRuleDescriptionsEgressCommandInput, cb: (err: any, data?: UpdateSecurityGroupRuleDescriptionsEgressCommandOutput) => void): void;
    updateSecurityGroupRuleDescriptionsEgress(args: UpdateSecurityGroupRuleDescriptionsEgressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateSecurityGroupRuleDescriptionsEgressCommandOutput) => void): void;
    
    updateSecurityGroupRuleDescriptionsIngress(args: UpdateSecurityGroupRuleDescriptionsIngressCommandInput, options?: __HttpHandlerOptions): Promise<UpdateSecurityGroupRuleDescriptionsIngressCommandOutput>;
    updateSecurityGroupRuleDescriptionsIngress(args: UpdateSecurityGroupRuleDescriptionsIngressCommandInput, cb: (err: any, data?: UpdateSecurityGroupRuleDescriptionsIngressCommandOutput) => void): void;
    updateSecurityGroupRuleDescriptionsIngress(args: UpdateSecurityGroupRuleDescriptionsIngressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateSecurityGroupRuleDescriptionsIngressCommandOutput) => void): void;
    
    withdrawByoipCidr(args: WithdrawByoipCidrCommandInput, options?: __HttpHandlerOptions): Promise<WithdrawByoipCidrCommandOutput>;
    withdrawByoipCidr(args: WithdrawByoipCidrCommandInput, cb: (err: any, data?: WithdrawByoipCidrCommandOutput) => void): void;
    withdrawByoipCidr(args: WithdrawByoipCidrCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: WithdrawByoipCidrCommandOutput) => void): void;
}
