import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { EC2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EC2Client";
import { DeprovisionPublicIpv4PoolCidrRequest, DeprovisionPublicIpv4PoolCidrResult } from "../models/models_2";
export interface DeprovisionPublicIpv4PoolCidrCommandInput extends DeprovisionPublicIpv4PoolCidrRequest {
}
export interface DeprovisionPublicIpv4PoolCidrCommandOutput extends DeprovisionPublicIpv4PoolCidrResult, __MetadataBearer {
}

export declare class DeprovisionPublicIpv4PoolCidrCommand extends $Command<DeprovisionPublicIpv4PoolCidrCommandInput, DeprovisionPublicIpv4PoolCidrCommandOutput, EC2ClientResolvedConfig> {
    readonly input: DeprovisionPublicIpv4PoolCidrCommandInput;
    constructor(input: DeprovisionPublicIpv4PoolCidrCommandInput);
    
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EC2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeprovisionPublicIpv4PoolCidrCommandInput, DeprovisionPublicIpv4PoolCidrCommandOutput>;
    private serialize;
    private deserialize;
}
