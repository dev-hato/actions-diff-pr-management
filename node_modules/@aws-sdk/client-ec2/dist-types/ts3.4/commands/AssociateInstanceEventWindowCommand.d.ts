import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { EC2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EC2Client";
import { AssociateInstanceEventWindowRequest, AssociateInstanceEventWindowResult } from "../models/models_0";
export interface AssociateInstanceEventWindowCommandInput extends AssociateInstanceEventWindowRequest {
}
export interface AssociateInstanceEventWindowCommandOutput extends AssociateInstanceEventWindowResult, __MetadataBearer {
}

export declare class AssociateInstanceEventWindowCommand extends $Command<AssociateInstanceEventWindowCommandInput, AssociateInstanceEventWindowCommandOutput, EC2ClientResolvedConfig> {
    readonly input: AssociateInstanceEventWindowCommandInput;
    constructor(input: AssociateInstanceEventWindowCommandInput);
    
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EC2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateInstanceEventWindowCommandInput, AssociateInstanceEventWindowCommandOutput>;
    private serialize;
    private deserialize;
}
